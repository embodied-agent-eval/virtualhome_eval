[
    {
        "identifier": "27_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_clothes)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom clothes_jacket washing_machine basket_for_clothes dining_room soap - object\\n)\\n(:init\\n(obj_next_to soap basket_for_clothes)\\n(grabbable clothes_jacket)\\n(off washing_machine)\\n(movable clothes_jacket)\\n(inside_room basket_for_clothes dining_room)\\n(hangable clothes_jacket)\\n(containers washing_machine)\\n(plugged_in washing_machine)\\n(can_open basket_for_clothes)\\n(obj_next_to washing_machine basket_for_clothes)\\n(inside_room washing_machine dining_room)\\n(has_switch washing_machine)\\n(obj_next_to basket_for_clothes soap)\\n(grabbable basket_for_clothes)\\n(movable soap)\\n(has_plug washing_machine)\\n(containers basket_for_clothes)\\n(can_open washing_machine)\\n(clothes clothes_jacket)\\n(inside_room soap dining_room)\\n(closed washing_machine)\\n(clean washing_machine)\\n(obj_inside basket_for_clothes basket_for_clothes)\\n(inside_room clothes_jacket dining_room)\\n(obj_next_to clothes_jacket basket_for_clothes)\\n(obj_inside clothes_jacket washing_machine)\\n(obj_ontop washing_machine basket_for_clothes)\\n(recipient washing_machine)\\n(obj_next_to basket_for_clothes washing_machine)\\n(obj_next_to basket_for_clothes basket_for_clothes)\\n(obj_next_to basket_for_clothes clothes_jacket)\\n(inside character bathroom)\\n(movable basket_for_clothes)\\n(cream soap)\\n(grabbable soap)\\n)\\n(:goal\\n(and\\n(closed washing_machine)\\n(on washing_machine)\\n(plugged_in washing_machine)\\n(obj_ontop soap washing_machine)\\n(obj_ontop clothes_jacket washing_machine)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (inside ?char ?obj1) (next_to ?char ?obj2) (grabbable ?obj2))\\n:effect (and (not (grabbable ?obj2)) (holds_rh ?char ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char bathroom) (next_to bathroom dining_room))\\n:effect (and (inside ?char dining_room) (not (inside ?char bathroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n:effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "417_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_clothes)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nclothes_shirt clothes_pants soap washing_machine - object\\n)\\n(:init\\n(clothes clothes_pants)\\n(movable clothes_pants)\\n(obj_inside clothes_shirt washing_machine)\\n(off washing_machine)\\n(hangable clothes_shirt)\\n(grabbable soap)\\n(containers washing_machine)\\n(plugged_in washing_machine)\\n(has_switch washing_machine)\\n(movable soap)\\n(has_plug washing_machine)\\n(obj_inside soap washing_machine)\\n(can_open washing_machine)\\n(closed washing_machine)\\n(clean washing_machine)\\n(grabbable clothes_pants)\\n(grabbable clothes_shirt)\\n(obj_inside clothes_pants washing_machine)\\n(hangable clothes_pants)\\n(recipient washing_machine)\\n(clothes clothes_shirt)\\n(cream soap)\\n(movable clothes_shirt)\\n)\\n(:goal\\n(and\\n(closed washing_machine)\\n(on washing_machine)\\n(plugged_in washing_machine)\\n(obj_ontop soap washing_machine)\\n(obj_ontop clothes_shirt washing_machine)\\n(obj_ontop clothes_pants washing_machine)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (sittable ?obj2) (next_to ?char ?obj2))\\n:effect (and (not (holds_rh ?char ?obj1)) (on ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj1 ?char) (not (= ?obj ?obj1)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (next_to ?char ?obj) (open ?obj))\\n:effect (closed ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n:effect (open ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "850_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_clothes)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom clothes_pants washing_machine dining_room laundry_detergent - object\\n)\\n(:init\\n(clothes clothes_pants)\\n(movable clothes_pants)\\n(inside_room clothes_pants bathroom)\\n(off washing_machine)\\n(containers washing_machine)\\n(plugged_in washing_machine)\\n(has_switch washing_machine)\\n(inside_room washing_machine bathroom)\\n(movable laundry_detergent)\\n(obj_next_to clothes_pants washing_machine)\\n(has_plug washing_machine)\\n(obj_next_to washing_machine clothes_pants)\\n(can_open washing_machine)\\n(closed washing_machine)\\n(clean washing_machine)\\n(grabbable clothes_pants)\\n(pourable laundry_detergent)\\n(obj_inside clothes_pants washing_machine)\\n(hangable clothes_pants)\\n(recipient washing_machine)\\n(obj_next_to laundry_detergent washing_machine)\\n(inside character dining_room)\\n(obj_next_to washing_machine laundry_detergent)\\n(inside_room laundry_detergent bathroom)\\n(grabbable laundry_detergent)\\n)\\n(:goal\\n(and\\n(closed washing_machine)\\n(on washing_machine)\\n(plugged_in washing_machine)\\n(obj_ontop clothes_pants washing_machine)\\n(obj_ontop laundry_detergent washing_machine)\\n)\\n)\\n(:action switch_off\\n:parameters (?char - character ?obj - object)\\n:precondition (and (on ?obj) (next_to ?char ?obj))\\n:effect (not (on ?obj))\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (holds_rh ?char ?obj1) (next_to ?char ?obj2))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room1) (inside_room ?obj ?room2) (obj_next_to ?room1 ?room2))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (off ?obj) (next_to ?char ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (open ?obj) (next_to ?char ?obj))\\n:effect (closed ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (next_to ?char ?obj))\\n:effect (open ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "954_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_clothes)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office clothes_pants clothes_dress washing_machine clothes_underwear clothes_shirt soap - object\\n)\\n(:init\\n(clothes clothes_pants)\\n(movable clothes_pants)\\n(obj_inside clothes_shirt washing_machine)\\n(inside_room clothes_pants bathroom)\\n(obj_next_to washing_machine soap)\\n(off washing_machine)\\n(obj_inside clothes_dress washing_machine)\\n(grabbable clothes_underwear)\\n(hangable clothes_shirt)\\n(obj_next_to clothes_shirt washing_machine)\\n(obj_next_to washing_machine clothes_dress)\\n(obj_next_to soap washing_machine)\\n(hangable clothes_underwear)\\n(containers washing_machine)\\n(plugged_in washing_machine)\\n(grabbable soap)\\n(obj_next_to clothes_underwear washing_machine)\\n(inside_room soap bathroom)\\n(has_switch washing_machine)\\n(inside_room washing_machine bathroom)\\n(movable clothes_dress)\\n(obj_next_to clothes_pants washing_machine)\\n(clothes clothes_underwear)\\n(movable soap)\\n(has_plug washing_machine)\\n(obj_inside soap washing_machine)\\n(obj_next_to washing_machine clothes_pants)\\n(can_open washing_machine)\\n(closed washing_machine)\\n(clean washing_machine)\\n(inside_room clothes_shirt bathroom)\\n(obj_next_to washing_machine clothes_underwear)\\n(grabbable clothes_pants)\\n(clothes clothes_dress)\\n(grabbable clothes_shirt)\\n(obj_next_to washing_machine clothes_shirt)\\n(obj_inside clothes_pants washing_machine)\\n(hangable clothes_pants)\\n(recipient washing_machine)\\n(obj_inside clothes_underwear washing_machine)\\n(inside_room clothes_dress bathroom)\\n(hangable clothes_dress)\\n(clothes clothes_shirt)\\n(movable clothes_underwear)\\n(inside_room clothes_underwear bathroom)\\n(obj_next_to clothes_dress washing_machine)\\n(cream soap)\\n(inside character home_office)\\n(movable clothes_shirt)\\n(grabbable clothes_dress)\\n)\\n(:goal\\n(and\\n(closed washing_machine)\\n(on washing_machine)\\n(plugged_in washing_machine)\\n(obj_ontop soap washing_machine)\\n(obj_ontop clothes_underwear washing_machine)\\n(obj_ontop clothes_shirt washing_machine)\\n(obj_ontop clothes_pants washing_machine)\\n(obj_ontop clothes_dress washing_machine)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (clothes ?obj1) (clothes ?obj2) (grabbable ?obj1) (grabbable ?obj2) (not (obj_ontop ?obj1 washing_machine)) (not (obj_ontop ?obj2 washing_machine)))\\n:effect (and (obj_ontop ?obj1 washing_machine) (obj_ontop ?obj2 washing_machine))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (inside_room ?obj bathroom))\\n:effect (inside character bathroom)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character ?obj) (has_switch ?obj) (off ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character ?obj) (grabbable ?obj))\\n:effect (holds_rh character ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character ?obj) (open ?obj) (can_open ?obj))\\n:effect (and (not (open ?obj)) (closed ?obj))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character ?obj) (closed ?obj) (can_open ?obj))\\n:effect (and (not (closed ?obj)) (open ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom dining_room floor_lamp - object\\n)\\n(:init\\n(has_switch floor_lamp)\\n(plugged_out floor_lamp)\\n(inside_room floor_lamp bedroom)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(inside character dining_room)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on floor_lamp)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(has_plug ?obj)\\n(next_to ?char ?obj)\\n(plugged_out ?obj)\\n)\\n :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?room - object)\\n :precondition (and\\n(inside ?char ?room)\\n)\\n :effect (and\\n(inside ?char ?room)\\n(not (next_to ?char ?room))\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(next_to ?char ?obj)\\n(has_switch ?obj)\\n(plugged_in ?obj)\\n(off ?obj)\\n)\\n :effect (and\\n(on ?obj)\\n(not (off ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "120_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight floor_lamp - object\\n) \\n(:init\\n(plugged_in light)\\n(has_switch floor_lamp)\\n(clean light)\\n(plugged_out floor_lamp)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(obj_next_to floor_lamp light)\\n(obj_next_to light floor_lamp)\\n(clean floor_lamp)\\n) \\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (on ?obj)) (when (on ?obj) (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "125_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office light bedroom computer chair - object\\n)\\n    (:init\\n    (obj_next_to computer light)\\n    (surfaces chair)\\n    (has_plug light)\\n    (has_switch light)\\n    (inside_room light bedroom)\\n    (facing chair computer)\\n    (obj_next_to light computer)\\n    (movable chair)\\n    (obj_next_to computer chair)\\n    (sittable chair)\\n    (plugged_out light)\\n    (has_switch computer)\\n    (obj_next_to light chair)\\n    (obj_next_to light light)\\n    (clean light)\\n    (inside_room chair bedroom)\\n    (grabbable chair)\\n    (obj_next_to chair light)\\n    (lookable computer)\\n    (obj_inside computer home_office)\\n    (inside character bedroom)\\n    (off light)\\n    (inside_room computer bedroom)\\n    (obj_inside chair home_office)\\n    (obj_next_to chair computer)\\n    (obj_inside light home_office)\\n)\\n    (:goal\\n    (and\\n        (on light)\\n        (plugged_in light)\\n    )\\n)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside character bathroom)\\n(off light)\\n(inside_room light bathroom)\\n(obj_inside light home_office)\\n)\\n) (:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to light light))\\n:effect (and (inside character bathroom) (not (off light)) (next_to character light))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character light))\\n:effect (and (on light) (inside character bathroom))\\n) \"}"
    },
    {
        "identifier": "160_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dining_room controller light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(obj_next_to light controller)\\n(has_switch light)\\n(has_plug light)\\n(grabbable controller)\\n(movable controller)\\n(obj_next_to light light)\\n(obj_inside controller home_office)\\n(off light)\\n(obj_next_to controller controller)\\n(inside character dining_room)\\n(inside_room light dining_room)\\n(has_plug controller)\\n(obj_next_to controller light)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining-room) (inside_room light dining-room))\\n:effect (and (next_to ?char light))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char light) (has_switch light))\\n:effect (and (on light))\\n)\\n)\"}"
    },
    {
        "identifier": "180_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom dining_room light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside character bathroom)\\n(sitting character)\\n(off light)\\n(inside_room light bathroom)\\n(inside_room light dining_room)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n:effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (= ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (inside ?char ?room))\\n)\\n(:action standup\\n:parameters (?char - character)\\n:precondition (sitting ?char)\\n:effect (and (standing ?char) (not (sitting ?char)))\\n)\"}"
    },
    {
        "identifier": "205_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office bedroom light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(off light)\\n(inside character home_office)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (inside_room light bedroom) (not (next_to ?char light)))\\n:effect (and (next_to ?char light) (not (inside character home_office)) (inside_room light home_office))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char light) (has_switch light) (off light))\\n:effect (and (on light) (not (off light)) (not (has_switch light))))\"}"
    },
    {
        "identifier": "222_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dining_room light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n(inside character dining_room)\\n(inside_room light dining_room)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside_room light dining_room) (next_to light light))\\n:effect (and (inside character home_office) (not (inside_room light dining_room)) (obj_inside light dining_room))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (obj_inside light dining_room) (has_switch light) (off light))\\n:effect (and (on light) (not (off light)) (not (has_switch light)))\\n)\\n)\"}"
    },
    {
        "identifier": "232_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n (:domain virtualhome)\\n (:objects\\n character - character\\n bathroom dining_room light - object\\n) \\n(:init\\n (plugged_in light)\\n (clean light)\\n (has_switch light)\\n (has_plug light)\\n (obj_next_to light light)\\n (inside character bathroom)\\n (off light)\\n (inside_room light bathroom)\\n (inside_room light dining_room)\\n)\\n (:goal\\n (and\\n (on light)\\n (plugged_in light)\\n (on light)\\n (plugged_in light)\\n (on light)\\n (plugged_in light)\\n)\\n) \\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character bathroom) (inside_room light dining_room))\\n :effect (and (inside character dining_room) (not (inside character bathroom)))\\n) \\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch light) (next_to character light))\\n :effect (and (on light) (not (off light)))\\n)\\n)\\n\"}"
    },
    {
        "identifier": "310_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ndining_room bedroom light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(off light)\\n(inside character dining_room)\\n(inside_room light dining_room)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character dining_room) (inside_room light dining_room) (inside_room light bedroom) (obj_next_to light light))\\n :effect (and (inside character bedroom) (not (inside character dining_room)) (not (inside_room light dining_room)) (inside_room light bedroom))\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (inside character bedroom) (next_to character ?obj))\\n :effect (and (on ?obj) (not (off ?obj)))\"}"
    },
    {
        "identifier": "311_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office floor_lamp - object\\n)\\n(:init\\n(has_switch floor_lamp)\\n(obj_inside floor_lamp home_office)\\n(plugged_out floor_lamp)\\n(inside character bathroom)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on floor_lamp)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n :effect (plugged_in ?obj)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char ?obj1) (obj_next_to ?obj1 ?obj))\\n :effect (inside ?char ?obj)\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n :effect (on ?obj)\\n)\\n)\\n\"}"
    },
    {
        "identifier": "331_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside character bedroom)\\n(off light)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char bedroom) (inside ?obj bedroom) (not (next_to ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfiling_cabinet home_office remote_control light dining_room - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_switch light)\\n(has_plug light)\\n(obj_inside filing_cabinet home_office)\\n(movable remote_control)\\n(plugged_in light)\\n(can_open filing_cabinet)\\n(obj_next_to filing_cabinet light)\\n(obj_next_to light light)\\n(obj_next_to light filing_cabinet)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(containers filing_cabinet)\\n(clean light)\\n(obj_next_to remote_control filing_cabinet)\\n(inside character dining_room)\\n(obj_next_to filing_cabinet remote_control)\\n(surfaces filing_cabinet)\\n(off light)\\n(obj_ontop remote_control filing_cabinet)\\n(inside_room light dining_room)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside_room light dining_room) (not (next_to ?char light)))\\n:effect (and (next_to ?char light) (not (inside character dining_room)) (inside_room light dining_room))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char light) (has_switch light) (off light))\\n:effect (and (on light) (not (off light)) (not (has_switch light)))\\n)\"}"
    },
    {
        "identifier": "392_1",
        "llm_output": "{\n\"output\": \n\"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight - object\\n) \\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "394_2",
        "llm_output": "{\n\"output\": \n\"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight - object\\n) \\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "432_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office floor_lamp - object\\n)\\n(:init\\n(has_switch floor_lamp)\\n(obj_inside floor_lamp home_office)\\n(plugged_out floor_lamp)\\n(inside character bathroom)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on floor_lamp)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n :effect (plugged_in ?obj)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char ?obj1) (obj_next_to ?obj1 ?obj))\\n :effect (inside ?char ?obj)\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n :effect (on ?obj)\\n)\\n)\\n\"}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom dining_room floor_lamp - object\\n)\\n(:init\\n(has_switch floor_lamp)\\n(plugged_out floor_lamp)\\n(inside_room floor_lamp bedroom)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(inside character dining_room)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on floor_lamp)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(has_plug ?obj)\\n(next_to ?char ?obj)\\n(plugged_out ?obj)\\n)\\n :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?room - object)\\n :precondition (and\\n(inside ?char ?room)\\n)\\n :effect (and\\n(inside ?char ?room)\\n(not (next_to ?char ?room))\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(next_to ?char ?obj)\\n(has_switch ?obj)\\n(plugged_in ?obj)\\n(off ?obj)\\n)\\n :effect (and\\n(on ?obj)\\n(not (off ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "445_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside character bedroom)\\n(off light)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room light bedroom) (next_to ?char ?obj) (different ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char light) (has_switch light) (off light))\\n:effect (and (on light))\\n)\\n)\"}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{\n\"output\": \n\"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight - object\\n) \\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "585_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom dining_room floor_lamp light - object\\n)\\n(:init\\n(plugged_in light)\\n(has_switch floor_lamp)\\n(clean light)\\n(plugged_out floor_lamp)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(obj_next_to light floor_lamp)\\n(inside character bathroom)\\n(off light)\\n(off floor_lamp)\\n(inside_room light bathroom)\\n(movable floor_lamp)\\n(inside_room light dining_room)\\n(obj_next_to floor_lamp light)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (inside_room light dining_room))\\n:effect (and (inside character dining_room) (not (inside character bathroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n:effect (and (on ?obj) (not (off ?obj)) (not (has_switch ?obj))))\\n)\"}"
    },
    {
        "identifier": "604_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight - object\\n) \\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "616_1",
        "llm_output": "{\n\"output\": \n\"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nlight - object\\n) \\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n:effect (and (when (off ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "705_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office floor_lamp - object\\n)\\n(:init\\n(has_switch floor_lamp)\\n(obj_inside floor_lamp home_office)\\n(plugged_out floor_lamp)\\n(inside character bedroom)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on floor_lamp)\\n)\\n)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (next_to ?char ?obj) (has_plug ?obj))\\n:effect (plugged_in ?obj)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?obj1 - object) (obj_next_to ?obj1 ?obj) (obj_next_to ?obj ?obj2 - object) (not (inside ?char ?obj2)))\\n:effect (inside ?char ?obj) (not (inside ?char ?obj1))\\n)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (on ?obj) (next_to ?char ?obj) (has_switch ?obj))\\n:effect (off ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "708_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom bedroom light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside character bathroom)\\n(off light)\\n(inside_room light bathroom)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character bathroom) (inside_room light bathroom))\\n :effect (and (next_to ?char light) (not (inside character bathroom)) (inside_room light bedroom))\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char light) (has_switch light))\\n :effect (and (on light) (not (off light)) (not (next_to ?char light)))\\n)\\n)\"}"
    },
    {
        "identifier": "715_2",
        "llm_output": "{\n\"output\": \"( :action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition ( and ( has_plug ?obj ) ( plugged_out ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( plugged_in ?obj ) ( when ( plugged_out ?obj ) ( not ( plugged_out ?obj ) ) ) ) ) \\n) \\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) \\n:effect ( next_to ?obj ?char ) ) \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( has_switch ?obj ) ( next_to ?char ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ( when ( off ?obj ) ( not ( off ?obj ) ) ) ) ) \"}"
    },
    {
        "identifier": "737_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dining_room light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(off light)\\n(inside character dining_room)\\n(inside_room light dining_room)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside_room light dining_room) (next_to light light))\\n:effect (and (inside character home_office) (not (inside_room light dining_room)) (obj_inside light dining_room))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (obj_inside light dining_room) (has_switch light) (off light))\\n:effect (and (on light) (not (off light)) (not (has_switch light)))\\n)\\n)\"}"
    },
    {
        "identifier": "780_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom dining_room light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside character bedroom)\\n(off light)\\n(inside_room light dining_room)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition ()\\n :effect (and (inside ?char (inside_room ?obj bedroom dining_room)))\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char (inside_room ?obj bedroom dining_room)) (has_switch ?obj) (off ?obj))\\n :effect (and (on ?obj) (not (off ?obj))))\\n)\"}"
    },
    {
        "identifier": "812_1",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ndining_room bedroom light floor_lamp - object\\n)\\n(:init\\n(plugged_in light)\\n(has_switch floor_lamp)\\n(clean light)\\n(plugged_out floor_lamp)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside_room floor_lamp bedroom)\\n(off light)\\n(off floor_lamp)\\n(movable floor_lamp)\\n(inside character dining_room)\\n(inside_room light dining_room)\\n(obj_next_to floor_lamp light)\\n(obj_next_to light floor_lamp)\\n(clean floor_lamp)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside_room light bedroom) (inside_room floor_lamp bedroom))\\n:effect (and (inside character bedroom) (not (inside character dining_room)) (not (inside_room light dining_room)) (not (inside_room floor_lamp dining_room)) (inside_room light bedroom) (inside_room floor_lamp bedroom))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (inside character bedroom))\\n:effect (and (on ?obj) (not (off ?obj)))\"}"
    },
    {
        "identifier": "835_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_in ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "85_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom light home_office - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside character bathroom)\\n(off light)\\n(inside_room light bathroom)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to character light))\\n:effect (and (inside character bathroom) (not (off light)) (not (plugged_in light)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (not (off light)) (plugged_in light))\\n:effect (and (on light) (plugged_in light))\\n)\"}"
    },
    {
        "identifier": "874_2",
        "llm_output": "{\n\"output\": \"(define (problem Turn_on_light)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom bedroom light - object\\n)\\n(:init\\n(plugged_in light)\\n(clean light)\\n(has_switch light)\\n(has_plug light)\\n(obj_next_to light light)\\n(inside_room light bedroom)\\n(inside character bathroom)\\n(off light)\\n(inside_room light bathroom)\\n)\\n(:goal\\n(and\\n(on light)\\n(plugged_in light)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (inside_room light bathroom))\\n:effect (and (inside character bedroom) (inside_room light bedroom) (not (inside character bathroom)) (not (inside_room light bathroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (next_to character light))\\n:effect (and (on light))\\n)\\n)\"}"
    },
    {
        "identifier": "491_2",
        "llm_output": "{\n\"output\": \"(define (problem Brush_teeth)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom dining_room tooth_paste toothbrush - object\\n)\\n    (:init\\n    (inside_room toothbrush bathroom)\\n    (inside character dining_room)\\n    (recipient toothbrush)\\n    (cream tooth_paste)\\n    (movable toothbrush)\\n    (grabbable tooth_paste)\\n    (movable tooth_paste)\\n    (can_open tooth_paste)\\n    (pourable tooth_paste)\\n    (inside_room tooth_paste bathroom)\\n    (grabbable toothbrush)\\n)\\n    (:goal\\n    (and\\n        (holds_lh character tooth_paste)\\n        (holds_rh character toothbrush)\\n    )\\n)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n  :effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (movable ?char) (not (= ?room (inside ?char))))\\n  :effect (and (inside ?char ?room) (not (inside ?char (next_to ?room))))\\n)\"}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{\n\"output\": \"(define (problem Brush_teeth)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office tooth_paste toothbrush - object\\n)\\n(:init\\n(obj_next_to tooth_paste toothbrush)\\n(obj_next_to toothbrush tooth_paste)\\n(inside_room toothbrush bathroom)\\n(inside character home_office)\\n(movable tooth_paste)\\n(grabbable tooth_paste)\\n(cream tooth_paste)\\n(pourable tooth_paste)\\n(movable toothbrush)\\n(can_open tooth_paste)\\n(recipient toothbrush)\\n(inside_room tooth_paste bathroom)\\n(grabbable toothbrush)\\n)\\n(:goal\\n(and\\n(holds_lh character toothbrush)\\n(holds_rh character tooth_paste)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (inside ?char ?room))\\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room)) (inside ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (has_switch ?obj)) \\n:effect (open ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "152_2",
        "llm_output": "{\n\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (grabbable ?obj1)\\n    (holds_rh ?char ?obj1) ; char is holding obj1 with right hand\\n    (or (inside ?char bathroom) (inside ?char dining_room)) ; char is either in bathroom or dining room\\n    (next_to ?obj1 ?obj2) ; obj1 is next to obj2\\n    (obj_next_to ?char ?obj2) ; char is next to obj2\\n    (can_open ?obj2)\\n    (not (open ?obj2)) ; obj2 is closed\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1)) ; char releases obj1\\n    (open ?obj2)\\n    (obj_inside ?obj1 ?obj2) ; obj1 is now inside obj2\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (open ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (inside ?char dining_room)\\n)\"}"
    },
    {
        "identifier": "298_2",
        "llm_output": "{\n\"output\": \"(:action put_inside \\n:parameters (?char - character ?obj1 - object ?obj2 - object) \\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj1) (inside ?char ?obj2) (obj_next_to ?obj1 ?obj2) (open ?obj2) (not (obj_inside ?obj1 ?obj2))) \\n:effect (and (obj_inside ?obj1 ?obj2) (not (next_to ?char ?obj1)) (not (grabbable ?obj1))) \\n)\\n(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?char ?obj) (closed ?obj) (can_open ?obj)) \\n:effect (not (closed ?obj)) \\n)\\n(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?char ?obj) (grabbable ?obj)) \\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj))) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?obj1) (inside_room ?obj1 ?obj2) (not (inside ?char ?obj2))) \\n:effect (and (inside ?char ?obj2) (not (inside ?char ?obj1)) (next_to ?char ?obj)) \\n)\"}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (next_to ?char ?obj) (can_open ?obj)) \\n:effect (not (closed ?obj)) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "703_2",
        "llm_output": "{\n\"output\": \"(define (problem Put_groceries_in_Fridge)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfreezer food_food bedroom dining_room - object\\n)\\n(:init\\n(has_plug freezer)\\n(inside_room food_food dining_room)\\n(can_open freezer)\\n(grabbable food_food)\\n(inside character bedroom)\\n(movable food_food)\\n(obj_next_to freezer food_food)\\n(inside_room freezer dining_room)\\n(obj_next_to food_food freezer)\\n(closed freezer)\\n(plugged_in freezer)\\n(clean freezer)\\n(eatable food_food)\\n(has_switch freezer)\\n(cuttable food_food)\\n(containers freezer)\\n)\\n(:goal\\n(and\\n(open freezer)\\n(plugged_in freezer)\\n(obj_inside food_food freezer)\\n)\\n)\\n)\\n(:action put_inside\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (inside ?char ?obj1) (next_to ?char ?obj2) (containers ?obj2) (grabbable ?obj1) (movable ?obj1))\\n:effect (and (obj_inside ?obj1 ?obj2) (not (inside ?char ?obj1)) (not (grabbable ?obj1)) (not (movable ?obj1)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n:effect (holding ?char ?obj)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?obj1) (inside_room ?obj ?obj2) (not (= ?obj1 ?obj2)))\\n:effect (inside ?char ?obj) (not (inside ?char ?obj1))\\n)\"}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{\n\"output\": \"(define (problem Put_groceries_in_Fridge)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom food_egg freezer milk food_turkey food_fish dining_room food_chicken - object\\n)\\n(:init\\n(grabbable food_chicken)\\n(grabbable milk)\\n(inside_room freezer dining_room)\\n(closed freezer)\\n(plugged_in freezer)\\n(clean freezer)\\n(movable food_turkey)\\n(inside_room food_chicken dining_room)\\n(has_switch freezer)\\n(obj_next_to freezer milk)\\n(cuttable food_turkey)\\n(inside_room food_fish dining_room)\\n(cuttable food_fish)\\n(pourable milk)\\n(movable food_chicken)\\n(inside_room milk dining_room)\\n(movable food_egg)\\n(inside_room food_turkey dining_room)\\n(obj_inside food_turkey freezer)\\n(cuttable food_chicken)\\n(obj_next_to freezer food_turkey)\\n(can_open freezer)\\n(drinkable milk)\\n(movable milk)\\n(obj_next_to milk freezer)\\n(grabbable food_fish)\\n(obj_inside food_fish freezer)\\n(obj_next_to freezer food_fish)\\n(obj_next_to freezer food_chicken)\\n(grabbable food_turkey)\\n(obj_inside food_chicken freezer)\\n(obj_next_to freezer food_egg)\\n(cuttable food_egg)\\n(obj_next_to food_fish freezer)\\n(movable food_fish)\\n(has_plug freezer)\\n(obj_inside milk freezer)\\n(eatable food_chicken)\\n(eatable food_turkey)\\n(obj_next_to food_chicken freezer)\\n(grabbable food_egg)\\n(inside_room food_egg dining_room)\\n(eatable food_egg)\\n(inside character bathroom)\\n(can_open milk)\\n(eatable food_fish)\\n(obj_next_to food_egg freezer)\\n(obj_next_to food_turkey freezer)\\n(obj_inside food_egg freezer)\\n(containers freezer)\\n)\\n(:goal\\n(and\\n(open freezer)\\n(plugged_in freezer)\\n)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (next_to ?char ?obj))\\n:effect (open ?obj)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{\n\"output\": \"(define (problem Put_groceries_in_Fridge)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfood_cheese food_egg microwave freezer faucet milk colander kitchen_counter coffe_maker bedroom food_vegetable food_food dining_room toaster - object\\n) \\n(:init\\n(obj_next_to toaster faucet)\\n(grabbable milk)\\n(containers microwave)\\n(obj_ontop coffe_maker kitchen_counter)\\n(obj_next_to toaster kitchen_counter)\\n(inside_room faucet dining_room)\\n(has_switch freezer)\\n(obj_next_to faucet microwave)\\n(obj_next_to faucet toaster)\\n(inside_room kitchen_counter dining_room)\\n(movable food_food)\\n(movable food_egg)\\n(obj_next_to kitchen_counter coffe_maker)\\n(obj_next_to kitchen_counter food_cheese)\\n(has_switch microwave)\\n(can_open freezer)\\n(has_plug toaster)\\n(obj_next_to freezer kitchen_counter)\\n(inside_room microwave dining_room)\\n(has_switch faucet)\\n(obj_next_to coffe_maker faucet)\\n(obj_inside food_vegetable freezer)\\n(obj_inside milk freezer)\\n(obj_next_to colander kitchen_counter)\\n(inside_room food_egg dining_room)\\n(obj_ontop food_food kitchen_counter)\\n(obj_next_to microwave faucet)\\n(cuttable food_food)\\n(obj_next_to coffe_maker kitchen_counter)\\n(obj_next_to toaster coffe_maker)\\n(has_plug microwave)\\n(obj_next_to milk kitchen_counter)\\n(inside_room freezer dining_room)\\n(plugged_in freezer)\\n(clean freezer)\\n(inside_room colander dining_room)\\n(grabbable colander)\\n(movable food_vegetable)\\n(obj_next_to microwave kitchen_counter)\\n(has_switch coffe_maker)\\n(inside_room milk dining_room)\\n(obj_next_to kitchen_counter food_egg)\\n(obj_next_to coffe_maker toaster)\\n(obj_next_to microwave freezer)\\n(drinkable milk)\\n(grabbable food_food)\\n(movable milk)\\n(obj_next_to microwave toaster)\\n(eatable food_food)\\n(cuttable food_egg)\\n(inside_room toaster dining_room)\\n(has_plug freezer)\\n(inside character bedroom)\\n(grabbable food_egg)\\n(obj_next_to kitchen_counter microwave)\\n(can_open milk)\\n(eatable food_vegetable)\\n(grabbable food_cheese)\\n(obj_next_to food_food kitchen_counter)\\n(obj_next_to kitchen_counter toaster)\\n(movable food_cheese)\\n(obj_next_to food_cheese kitchen_counter)\\n(pourable milk)\\n(obj_next_to faucet coffe_maker)\\n(obj_ontop microwave kitchen_counter)\\n(cream food_cheese)\\n(has_switch toaster)\\n(surfaces kitchen_counter)\\n(grabbable food_vegetable)\\n(recipient colander)\\n(can_open coffe_maker)\\n(obj_ontop faucet kitchen_counter)\\n(obj_next_to faucet kitchen_counter)\\n(movable coffe_maker)\\n(inside_room food_vegetable dining_room)\\n(obj_inside food_egg freezer)\\n(containers freezer)\\n(obj_next_to kitchen_counter food_vegetable)\\n(inside_room food_food dining_room)\\n(movable toaster)\\n(obj_ontop toaster kitchen_counter)\\n(recipient coffe_maker)\\n(closed freezer)\\n(has_plug coffe_maker)\\n(obj_ontop colander kitchen_counter)\\n(obj_next_to kitchen_counter milk)\\n(inside_room food_cheese dining_room)\\n(can_open microwave)\\n(obj_next_to kitchen_counter freezer)\\n(obj_next_to food_vegetable kitchen_counter)\\n(obj_next_to toaster microwave)\\n(containers coffe_maker)\\n(cuttable food_vegetable)\\n(obj_next_to kitchen_counter faucet)\\n(inside_room coffe_maker dining_room)\\n(eatable food_cheese)\\n(obj_next_to freezer microwave)\\n(movable colander)\\n(obj_next_to kitchen_counter food_food)\\n(eatable food_egg)\\n(obj_next_to food_egg kitchen_counter)\\n(obj_next_to kitchen_counter colander)\\n(cuttable food_cheese)\\n) \\n(:goal\\n(and\\n(open freezer)\\n(plugged_in freezer)\\n(obj_inside food_cheese freezer)\\n)\\n)\\n(:action put_inside\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (not (obj_inside ?obj1 ?obj2)))\\n:effect (and (obj_inside ?obj1 ?obj2) (not (grabbable ?obj1)) (not (movable ?obj1)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (closed ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj1)) (not (= ?obj ?obj1))))\"}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_toilet)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    dining_room bathroom toilet - object\\n)\\n    (:init\\n    (can_open toilet)\\n    (sittable toilet)\\n    (sitting character)\\n    (containers toilet)\\n    (inside_room toilet bathroom)\\n    (inside character dining_room)\\n)\\n    (:goal\\n    (and\\n        (inside character bathroom)\\n        (facing character toilet)\\n    )\\n    )\\n    )\\n\\n    (:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside ?char dining_room) (next_to ?char ?room))\\n  :effect (and (inside ?char ?room) (not (inside ?char dining_room)))\\n) \\n\\n    (:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bathroom) (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n) \\n\\n    (:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (and (standing ?char) (not (sitting ?char)))\\n) \\n)\\n\"}"
    },
    {
        "identifier": "323_2",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and \\n( inside character home_office ) \\n( inside_room ?obj bathroom ) \\n( different ?char ?obj ) \\n) \\n:effect ( and \\n( next_to ?char ?obj ) \\n( not ( inside character home_office ) ) \\n) \\n) \\n( :action sit \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and \\n( ontop ?char ?obj ) \\n( sittable ?obj ) \\n) \\n:effect ( and \\n( sitting ?char ) \\n( not ( ontop ?char ?obj ) ) \\n) \\n) \"}"
    },
    {
        "identifier": "430_2",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside_room ?obj bathroom ) ( next_to ?char toilet ) ) \\n:effect ( and ( next_to ?char ?obj ) ( inside_room ?char bathroom ) ) \\n) \\n( :action sit \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( sittable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( ontop ?char ?obj ) \\n) \"}"
    },
    {
        "identifier": "478_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (next_to ?char ?obj) (can_open ?obj) (not (equal ?char ?obj)))\\n:effect (and (not (inside ?char ?room)) (inside ?char ?obj))\\n\\n::action sit\\n:parameters (?char - character ?obj - object)\\n:precondition (and (ontop ?char ?obj) (sittable ?obj))\\n:effect (sitting ?char)\\n\"}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{\n\"output\": \n\"::action walk_into\\n:parameters (?char - character ?room - object)\\n:precondition (and (inside ?char ?room) (not (facing ?char ?obj)))\\n:effect (and (inside ?char ?room) (facing ?char ?obj))\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (facing ?char ?obj2) (obj_next_to ?obj ?obj2))\\n:effect (and (facing ?char ?obj) (not (facing ?char ?obj2))))\"}"
    },
    {
        "identifier": "624_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (ontop ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "188_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?obj ?char)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n) \\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n) \\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{\n\"output\": \"(define (problem Change_TV_channel)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office hair couch remote_control television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_inside hair home_office)\\n(clean television)\\n(surfaces couch)\\n(body_part hair)\\n(obj_inside couch home_office)\\n(movable remote_control)\\n(lieable couch)\\n(movable hair)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(lookable television)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(movable couch)\\n(cuttable hair)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(grabbable hair)\\n(inside character bathroom)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character remote_control)\\n(holds_rh character remote_control)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room))\\n:effect (next_to ?char ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (holds_rh ?char remote_control) (facing ?char ?obj))\\n:effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{\n\"output\": \"(define (problem Change_TV_channel)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office remote_control dining_room television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(obj_next_to remote_control television)\\n(has_switch television)\\n(has_plug television)\\n(plugged_in television)\\n(off television)\\n(clean television)\\n(obj_next_to television remote_control)\\n(inside_room television dining_room)\\n(lookable television)\\n(obj_inside television home_office)\\n(inside character dining_room)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(movable remote_control)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(holds_rh character remote_control)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside character home_office))\\n:effect (and (next_to ?char television) (not (inside character home_office)) (not (inside character dining_room)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char remote_control) (grabbable remote_control))\\n:effect (and (holds_rh ?char remote_control) (not (grabbable remote_control)))\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char television)\\n:effect (facing ?char television)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (holds_rh character remote_control) (has_switch television) (has_switch remote_control))\\n:effect (and (on television) (not (holds_rh character remote_control)) (not (facing character television)) (not (inside character dining_room)) (inside character home_office))\\n)\"}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{\n\"output\": \"(:action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) ) \\n\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside character bedroom) (inside_room ?obj bedroom) (not (next_to ?char ?obj))) \\n:effect (next_to ?char ?obj) ) \\n\\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (off ?obj)) \\n:effect (on ?obj) )\"}"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\\\n    (:domain virtualhome)\\\\n    (:objects\\\\n    character - character\\\\n    bedroom home_office computer - object\\\\n)\\\\n    (:init\\\\n    (off computer)\\\\n    (has_switch computer)\\\\n    (obj_inside computer home_office)\\\\n    (inside character bedroom)\\\\n    (plugged_out computer)\\\\n    (inside_room computer bedroom)\\\\n    (lookable computer)\\\\n    (clean computer)\\\\n)\\\\n    (:goal\\\\n    (and\\\\n        (on computer)\\\\n    )\\\\n)\\\\n    )\\\\n\\\\n    (:action plug_in\\\\n  :parameters (?char - character ?obj - object)\\\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\\\n  :effect (plugged_in ?obj)\\\\n)\\\\n(:action walk_towards\\\\n  :parameters (?char - character ?obj - object)\\\\n  :precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj)))\\\\n  :effect (next_to ?char ?obj)\\\\n)\\\\n(:action switch_on\\\\n  :parameters (?char - character ?obj - object)\\\\n  :precondition (and (plugged_in ?obj) (has_switch ?obj) (next_to ?char ?obj))\\\\n  :effect (on ?obj)\\\\n)\\\\n\"}"
    },
    {
        "identifier": "153_2",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\\\n(:domain virtualhome)\\\\n(:objects\\\\ncharacter - character\\\\nhome_office computer dining_room - object\\\\n)\\\\n(:init\\\\n(off computer)\\\\n(has_switch computer)\\\\n(obj_inside computer home_office)\\\\n(plugged_out computer)\\\\n(inside character dining_room)\\\\n(lookable computer)\\\\n(clean computer)\\\\n)\\\\n(:goal\\\\n(and\\\\n(on computer)\\\\n)\\\\n)\\\\n)\\\\n(:action plug_in\\\\n :parameters (?char - character ?obj - object)\\\\n :precondition (and\\\\n(has_plug ?obj)\\\\n(next_to ?char ?obj)\\\\n(plugged_out ?obj)\\\\n)\\\\n :effect (and\\\\n(plugged_in ?obj)\\\\n(not (plugged_out ?obj))\\\\n)\\\\n)\\\\n(:action walk_towards\\\\n :parameters (?char - character ?dest - object)\\\\n :precondition (and\\\\n(inside ?char ?loc)\\\\n(obj_inside ?dest ?loc)\\\\n(not (equal ?dest ?loc))\\\\n)\\\\n :effect (and\\\\n(inside ?char ?dest)\\\\n(not (inside ?char ?loc))\\\\n)\\\\n)\\\\n(:action switch_on\\\\n :parameters (?char - character ?obj - object)\\\\n :precondition (and\\\\n(has_switch ?obj)\\\\n(next_to ?char ?obj)\\\\n(plugged_in ?obj)\\\\n(off ?obj)\\\\n)\\\\n :effect (and\\\\n(on ?obj)\\\\n(not (off ?obj))\\\\n)\\\\n)\"}"
    },
    {
        "identifier": "196_2",
        "llm_output": "{\n\"output\": \"(:action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?room))) \\n:effect (next_to ?char ?obj) \\n)\\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj)) \\n:effect (on ?obj) \\n)\"}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office desk mouse keyboard powersocket cpuscreen doorjamb computer chair mousepad wall floor - object\\n)\\n(:init\\n(obj_inside powersocket home_office)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to wall powersocket)\\n(surfaces chair)\\n(obj_next_to cpuscreen floor)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to mouse powersocket)\\n(obj_next_to mousepad doorjamb)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to computer doorjamb)\\n(obj_ontop mousepad desk)\\n(facing floor computer)\\n(obj_next_to mouse chair)\\n(obj_inside wall home_office)\\n(obj_next_to floor powersocket)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_ontop doorjamb floor)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to doorjamb wall)\\n(obj_next_to wall doorjamb)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to desk doorjamb)\\n(obj_inside floor home_office)\\n(obj_next_to cpuscreen desk)\\n(obj_inside doorjamb home_office)\\n(obj_next_to mousepad powersocket)\\n(facing wall computer)\\n(obj_next_to floor mousepad)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to computer desk)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad floor)\\n(obj_next_to mousepad desk)\\n(obj_next_to keyboard floor)\\n(grabbable mouse)\\n(obj_next_to doorjamb computer)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to chair floor)\\n(obj_next_to mouse floor)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to powersocket wall)\\n(obj_next_to floor floor)\\n(obj_next_to doorjamb mousepad)\\n(obj_next_to doorjamb desk)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to desk powersocket)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(inside character bathroom)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to powersocket doorjamb)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to powersocket mousepad)\\n(obj_next_to wall computer)\\n(obj_next_to powersocket floor)\\n(obj_next_to mouse doorjamb)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(obj_next_to powersocket desk)\\n(obj_next_to powersocket mouse)\\n(grabbable keyboard)\\n(inside_room doorjamb bathroom)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to chair desk)\\n(obj_next_to mouse computer)\\n(obj_ontop desk floor)\\n(obj_next_to doorjamb floor)\\n(obj_next_to computer powersocket)\\n(obj_next_to floor doorjamb)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(obj_next_to chair wall)\\n(inside_room wall bathroom)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to doorjamb mouse)\\n(obj_next_to powersocket computer)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(inside_room floor bathroom)\\n(obj_next_to floor cpuscreen)\\n(facing doorjamb computer)\\n(obj_next_to floor chair)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on computer)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(has_plug ?obj)\\n(plugged_out ?obj)\\n(holds_rh ?char ?obj)\\n(next_to ?char powersocket)\\n)\\n :effect (and\\n(plugged_in ?obj)\\n(not (plugged_out ?obj))\\n(not (holds_rh ?char ?obj))\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(next_to ?char ?obj)\\n)\\n :effect (and\\n(next_to ?char ?obj)\\n)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n(on ?obj)\\n)\\n :effect (and\\n(not (on ?obj))\\n(off ?obj)\\n)\\n)\\n)\"}"
    },
    {
        "identifier": "201_2",
        "llm_output": "{\n\"output\": \"( :action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) \\n) \\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside character bedroom) (inside ?obj bedroom)) \\n:effect (next_to ?char ?obj) \\n) \\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (plugged_in ?obj) (has_switch ?obj) (next_to ?char ?obj)) \\n:effect (on ?obj) \\n)\"}"
    },
    {
        "identifier": "232_1",
        "llm_output": "{\n\"output\": \"(:**action** plug_in\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n    (has_plug ?obj)\\\\n    (plugged_out ?obj)\\\\n    (next_to ?char ?obj)\\\\n)\\\\n:effect (plugged_in ?obj)\\\\n)\\\\n(:**action** walk_towards\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n    (next_to ?obj ?char)\\\\n)\\\\n:effect (next_to ?char ?obj)\\\\n)\\\\n(:**action** switch_on\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n    (next_to ?char ?obj)\\\\n    (has_switch ?obj)\\\\n    (off ?obj)\\\\n)\\\\n:effect (and\\\\n    (on ?obj)\\\\n    (when (plugged_in ?obj) (not (plugged_in ?obj)))\\\\n)\\\\n)\"}"
    },
    {
        "identifier": "234_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (not (off ?obj))\\n    (on ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ndesk mouse keyboard light cpuscreen bookshelf computer chair mousepad wall floor - object\\n)\\n(:init\\n(obj_next_to cpuscreen mousepad)\\n(surfaces chair)\\n(has_plug light)\\n(movable mousepad)\\n(obj_next_to cpuscreen floor)\\n(obj_next_to keyboard computer)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to bookshelf light)\\n(obj_next_to chair bookshelf)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to light chair)\\n(obj_next_to floor light)\\n(obj_next_to light wall)\\n(obj_ontop mousepad desk)\\n(obj_next_to bookshelf desk)\\n(facing floor computer)\\n(obj_next_to wall light)\\n(obj_next_to mouse chair)\\n(obj_next_to light floor)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_next_to bookshelf wall)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to desk bookshelf)\\n(obj_next_to light cpuscreen)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(obj_next_to bookshelf chair)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_next_to light computer)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to light light)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to light desk)\\n(obj_next_to cpuscreen desk)\\n(obj_next_to mousepad bookshelf)\\n(obj_next_to chair light)\\n(facing wall computer)\\n(obj_next_to floor mousepad)\\n(obj_next_to cpuscreen light)\\n(obj_next_to desk light)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to keyboard bookshelf)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_next_to bookshelf computer)\\n(obj_next_to computer desk)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_next_to desk mousepad)\\n(obj_next_to bookshelf mouse)\\n(obj_next_to mousepad floor)\\n(obj_next_to computer light)\\n(obj_next_to mousepad desk)\\n(obj_next_to mouse bookshelf)\\n(obj_next_to keyboard floor)\\n(grabbable mouse)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_next_to bookshelf mousepad)\\n(obj_next_to chair floor)\\n(obj_next_to mouse floor)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to cpuscreen bookshelf)\\n(obj_next_to floor floor)\\n(obj_next_to bookshelf keyboard)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to keyboard light)\\n(obj_next_to wall floor)\\n(movable desk)\\n(obj_next_to wall bookshelf)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to bookshelf floor)\\n(containers bookshelf)\\n(obj_next_to light bookshelf)\\n(obj_next_to wall chair)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_ontop bookshelf floor)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to mousepad computer)\\n(obj_next_to floor bookshelf)\\n(obj_next_to bookshelf cpuscreen)\\n(obj_next_to wall computer)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(surfaces bookshelf)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(grabbable keyboard)\\n(obj_ontop desk floor)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to mouse computer)\\n(obj_next_to chair desk)\\n(obj_next_to computer bookshelf)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(can_open bookshelf)\\n(obj_next_to chair wall)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(obj_next_to floor cpuscreen)\\n(obj_next_to floor chair)\\n(obj_next_to light keyboard)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on computer)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (obj_next_to ?char ?obj) (not (= ?char ?obj)))\\n :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "373_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "406_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "409_2",
        "llm_output": "{\n\"output\": \n\"(**:action plug_in\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (has_plug ?obj)\\\\n (plugged_out ?obj)\\\\n (hold_rh ?char ?obj)\\\\n)\\\\n:effect (plugged_in ?obj)\\\\n)\\\\n**:action walk_towards\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (obj_next_to ?char ?obj)\\\\n)\\\\n:effect (and\\\\n (next_to ?char ?obj)\\\\n)\\\\n)\\\\n**:action switch_on\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (has_switch ?obj)\\\\n (off ?obj)\\\\n (next_to ?char ?obj)\\\\n (hold_rh ?char ?obj)\\\\n)\\\\n:effect (and\\\\n (on ?obj)\\\\n)\\\\n)\"}"
    },
    {
        "identifier": "419_1",
        "llm_output": "{\n\"output\": \"(:action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (not (next_to ?char ?obj)) \\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?x))) \\n)\\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_switch ?obj) (plugged_in ?obj) (next_to ?char ?obj) (off ?obj)) \\n:effect (on ?obj) \\n)\"}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "437_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "440_1",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ndesk mouse keyboard cpuscreen computer chair mousepad - object\\n)\\n(:init\\n(obj_next_to chair mouse)\\n(obj_next_to chair mousepad)\\n(obj_next_to cpuscreen mousepad)\\n(surfaces chair)\\n(movable mousepad)\\n(obj_next_to mousepad computer)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad desk)\\n(obj_next_to mousepad mouse)\\n(obj_next_to keyboard computer)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(grabbable mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(has_plug keyboard)\\n(surfaces desk)\\n(obj_next_to desk mousepad)\\n(obj_next_to computer keyboard)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(facing chair computer)\\n(obj_next_to computer chair)\\n(sittable chair)\\n(obj_next_to mouse mousepad)\\n(obj_next_to mouse desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to keyboard chair)\\n(grabbable keyboard)\\n(obj_next_to keyboard mouse)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to mouse computer)\\n(obj_next_to chair desk)\\n(obj_ontop mousepad desk)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to mouse keyboard)\\n(obj_next_to cpuscreen desk)\\n(has_plug mouse)\\n(grabbable chair)\\n(obj_next_to mouse chair)\\n(obj_next_to cpuscreen chair)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(clean computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to mouse cpuscreen)\\n(obj_next_to desk computer)\\n(off computer)\\n(obj_ontop mouse desk)\\n(obj_next_to computer mouse)\\n(obj_next_to computer desk)\\n(movable desk)\\n(movable mouse)\\n(obj_next_to cpuscreen keyboard)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to computer mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(obj_next_to keyboard mousepad)\\n(obj_next_to mousepad chair)\\n)\\n(:goal\\n(and\\n(on computer)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (next_to ?char ?obj)\\n :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n :effect (on ?obj)\\n)}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (when (plugged_in ?obj) (not (off ?obj)))\\n  )\\n)\"}"
    },
    {
        "identifier": "46_1",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office desk mouse keyboard powersocket cpuscreen doorjamb computer chair mousepad wall dining_room floor - object\\n)\\n(:init\\n(obj_inside powersocket home_office)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to wall powersocket)\\n(surfaces chair)\\n(obj_next_to cpuscreen floor)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to mouse powersocket)\\n(obj_next_to mousepad doorjamb)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to computer doorjamb)\\n(obj_ontop mousepad desk)\\n(facing floor computer)\\n(obj_next_to mouse chair)\\n(obj_inside wall home_office)\\n(obj_next_to floor powersocket)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(obj_ontop computer desk)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(inside_room floor dining_room)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_ontop doorjamb floor)\\n(inside_room wall dining_room)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to doorjamb wall)\\n(obj_next_to wall doorjamb)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to desk doorjamb)\\n(obj_inside floor home_office)\\n(obj_next_to cpuscreen desk)\\n(obj_inside doorjamb home_office)\\n(obj_next_to mousepad powersocket)\\n(facing wall computer)\\n(obj_next_to floor mousepad)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to computer desk)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad floor)\\n(obj_next_to mousepad desk)\\n(obj_next_to keyboard floor)\\n(grabbable mouse)\\n(obj_next_to doorjamb computer)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to chair floor)\\n(obj_next_to mouse floor)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to powersocket wall)\\n(obj_next_to floor floor)\\n(obj_next_to doorjamb mousepad)\\n(obj_next_to doorjamb desk)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to desk powersocket)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to powersocket doorjamb)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to powersocket mousepad)\\n(obj_next_to wall computer)\\n(obj_next_to powersocket floor)\\n(obj_next_to mouse doorjamb)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(obj_next_to powersocket desk)\\n(obj_next_to powersocket mouse)\\n(grabbable keyboard)\\n(obj_ontop desk floor)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to chair desk)\\n(obj_next_to mouse computer)\\n(obj_next_to doorjamb floor)\\n(obj_next_to computer powersocket)\\n(obj_next_to floor doorjamb)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(obj_next_to chair wall)\\n(inside character dining_room)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to doorjamb mouse)\\n(obj_next_to powersocket computer)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(inside_room powersocket dining_room)\\n(obj_next_to floor cpuscreen)\\n(facing doorjamb computer)\\n(obj_next_to floor chair)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on computer)\\n)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object) \\n :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n :effect (plugged_in ?obj) \\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object) \\n :precondition (and (next_to ?char ?obj) (not (inside ?char ?room))) \\n :effect (inside ?char ?room) \\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object) \\n :precondition (and (has_switch ?obj) (next_to ?char ?obj) (plugged_in ?obj) (off ?obj)) \\n :effect (on ?obj) \\n)\\n)\"}"
    },
    {
        "identifier": "475_2",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\\\n(:domain virtualhome)\\\\n(:objects\\\\ncharacter - character\\\\nhome_office desk mouse keyboard cpuscreen bedroom chair mousepad computer - object\\\\n)\\\\n(:init\\\\n(obj_next_to cpuscreen mousepad)\\\\n(surfaces chair)\\\\n(movable mousepad)\\\\n(obj_next_to keyboard computer)\\\\n(plugged_out computer)\\\\n(obj_next_to computer cpuscreen)\\\\n(has_plug keyboard)\\\\n(sittable chair)\\\\n(obj_ontop mousepad desk)\\\\n(inside_room chair bedroom)\\\\n(obj_next_to mouse chair)\\\\n(inside_room mouse bedroom)\\\\n(obj_ontop mouse desk)\\\\n(movable mouse)\\\\n(obj_ontop cpuscreen desk)\\\\n(obj_next_to keyboard mousepad)\\\\n(movable keyboard)\\\\n(obj_next_to chair computer)\\\\n(obj_next_to chair mouse)\\\\n(obj_next_to chair keyboard)\\\\n(obj_next_to mousepad mouse)\\\\n(surfaces mousepad)\\\\n(obj_next_to desk keyboard)\\\\n(inside_room mousepad bedroom)\\\\n(obj_next_to mouse mousepad)\\\\n(obj_ontop keyboard desk)\\\\n(obj_next_to cpuscreen mouse)\\\\n(obj_next_to mousepad keyboard)\\\\n(obj_next_to cpuscreen desk)\\\\n(lookable computer)\\\\n(obj_next_to cpuscreen computer)\\\\n(obj_next_to mousepad cpuscreen)\\\\n(obj_next_to desk computer)\\\\n(obj_inside desk home_office)\\\\n(obj_next_to computer desk)\\\\n(inside character bedroom)\\\\n(obj_next_to computer mousepad)\\\\n(obj_inside chair home_office)\\\\n(obj_next_to desk mousepad)\\\\n(obj_next_to mousepad desk)\\\\n(grabbable mouse)\\\\n(obj_next_to computer chair)\\\\n(obj_next_to mouse desk)\\\\n(obj_next_to keyboard mouse)\\\\n(obj_inside keyboard home_office)\\\\n(obj_inside mousepad home_office)\\\\n(grabbable chair)\\\\n(obj_next_to cpuscreen chair)\\\\n(obj_next_to computer mouse)\\\\n(obj_inside computer home_office)\\\\n(movable desk)\\\\n(obj_next_to cpuscreen keyboard)\\\\n(inside_room desk bedroom)\\\\n(obj_next_to keyboard cpuscreen)\\\\n(obj_next_to mousepad chair)\\\\n(obj_next_to chair mousepad)\\\\n(obj_inside mouse home_office)\\\\n(obj_next_to mousepad computer)\\\\n(surfaces desk)\\\\n(obj_next_to computer keyboard)\\\\n(facing chair computer)\\\\n(obj_next_to desk mouse)\\\\n(movable chair)\\\\n(obj_next_to desk chair)\\\\n(has_switch computer)\\\\n(obj_next_to chair cpuscreen)\\\\n(obj_next_to keyboard chair)\\\\n(grabbable keyboard)\\\\n(inside_room cpuscreen bedroom)\\\\n(obj_next_to desk cpuscreen)\\\\n(obj_next_to mouse computer)\\\\n(obj_next_to chair desk)\\\\n(obj_next_to mouse keyboard)\\\\n(has_plug mouse)\\\\n(obj_inside cpuscreen home_office)\\\\n(clean computer)\\\\n(obj_next_to mouse cpuscreen)\\\\n(off computer)\\\\n(inside_room keyboard bedroom)\\\\n(inside_room computer bedroom)\\\\n(obj_next_to keyboard desk)\\\\n(obj_ontop mouse mousepad)\\\\n)\\\\n(:goal\\\\n(and\\\\n(on computer)\\\\n)\\\\n)\\\\n(:action plug_in\\\\n :parameters (?char - character ?obj - object)\\\\n :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\\\n :effect (plugged_in ?obj)\\\\n)\\\\n(:action walk_towards\\\\n :parameters (?char - character ?obj - object)\\\\n :precondition (and (not (next_to ?char ?obj)) (inside character bedroom) (inside_room ?obj bedroom))\\\\n :effect (next_to ?char ?obj)\\\\n)\\\\n(:action switch_on\\\\n :parameters (?char - character ?obj - object)\\\\n :precondition (and (plugged_in ?obj) (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\\\n :effect (on ?obj)\\\\n)\\\\n)\"}"
    },
    {
        "identifier": "503_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (plugged_in ?obj))\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (off ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (off ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "670_2",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office desk walllamp mouse keyboard light powersocket cpuscreen doorjamb bedroom chair mousepad computer wall floor - object\\n)\\n(:init\\n(clean mouse)\\n(obj_inside powersocket home_office)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to wall powersocket)\\n(surfaces chair)\\n(has_plug light)\\n(movable mousepad)\\n(obj_next_to cpuscreen floor)\\n(inside_room light bedroom)\\n(obj_next_to keyboard computer)\\n(obj_next_to doorjamb walllamp)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to mouse powersocket)\\n(obj_next_to mousepad doorjamb)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to computer doorjamb)\\n(obj_next_to light chair)\\n(obj_next_to floor light)\\n(obj_next_to walllamp floor)\\n(obj_next_to light wall)\\n(obj_ontop mousepad desk)\\n(clean light)\\n(inside_room chair bedroom)\\n(facing floor computer)\\n(obj_next_to wall light)\\n(obj_inside wall home_office)\\n(obj_next_to mouse chair)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(obj_next_to light floor)\\n(inside_room mouse bedroom)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(obj_next_to light doorjamb)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_next_to light mouse)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to light cpuscreen)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_next_to light computer)\\n(inside_room mousepad bedroom)\\n(obj_ontop doorjamb floor)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to light light)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to doorjamb wall)\\n(obj_next_to wall doorjamb)\\n(obj_next_to chair walllamp)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_inside walllamp home_office)\\n(obj_next_to desk doorjamb)\\n(obj_inside floor home_office)\\n(obj_next_to light desk)\\n(obj_next_to cpuscreen desk)\\n(obj_next_to walllamp keyboard)\\n(obj_inside doorjamb home_office)\\n(obj_next_to mousepad powersocket)\\n(obj_next_to chair light)\\n(facing wall computer)\\n(inside_room doorjamb bedroom)\\n(obj_next_to floor mousepad)\\n(obj_next_to cpuscreen light)\\n(obj_next_to desk light)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to desk walllamp)\\n(obj_next_to computer desk)\\n(inside character bedroom)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(facing walllamp computer)\\n(obj_next_to desk mousepad)\\n(plugged_out mouse)\\n(clean desk)\\n(obj_next_to mousepad floor)\\n(obj_next_to computer light)\\n(obj_next_to mousepad desk)\\n(inside_room wall bedroom)\\n(obj_next_to keyboard floor)\\n(plugged_out keyboard)\\n(obj_next_to walllamp chair)\\n(grabbable mouse)\\n(obj_next_to doorjamb computer)\\n(obj_next_to mouse wall)\\n(plugged_in light)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to powersocket light)\\n(obj_next_to walllamp desk)\\n(obj_next_to chair floor)\\n(obj_next_to light mousepad)\\n(inside_room floor bedroom)\\n(obj_next_to mouse floor)\\n(clean keyboard)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to powersocket wall)\\n(obj_next_to floor floor)\\n(obj_next_to doorjamb mousepad)\\n(obj_next_to walllamp wall)\\n(obj_next_to wall walllamp)\\n(obj_next_to doorjamb desk)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to keyboard light)\\n(obj_next_to desk powersocket)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(off light)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(obj_next_to light powersocket)\\n(inside_room desk bedroom)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to powersocket doorjamb)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to powersocket mousepad)\\n(obj_next_to wall computer)\\n(obj_next_to powersocket floor)\\n(obj_next_to mouse doorjamb)\\n(obj_inside mouse desk)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to floor walllamp)\\n(movable chair)\\n(obj_next_to desk mouse)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to walllamp doorjamb)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(obj_next_to powersocket desk)\\n(obj_next_to powersocket mouse)\\n(grabbable keyboard)\\n(inside_room cpuscreen bedroom)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to chair desk)\\n(obj_next_to mouse computer)\\n(obj_ontop desk floor)\\n(closed desk)\\n(obj_next_to doorjamb floor)\\n(obj_next_to computer powersocket)\\n(obj_next_to floor doorjamb)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(obj_next_to mouse light)\\n(obj_next_to chair wall)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to doorjamb mouse)\\n(obj_next_to powersocket computer)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(obj_next_to mousepad light)\\n(obj_next_to floor cpuscreen)\\n(inside_room keyboard bedroom)\\n(facing doorjamb computer)\\n(obj_next_to floor chair)\\n(obj_next_to light keyboard)\\n(obj_next_to keyboard walllamp)\\n(inside_room computer bedroom)\\n(obj_next_to keyboard desk)\\}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{\n\"output\": \"(:action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (next_to ?char ?obj) \\n:effect (next_to ?obj ?char) \\n)\\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj)) \\n:effect (on ?obj) \\n)\"}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{\n\"output\": \"(:**action** plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n\\t(has_plug ?obj)\\n\\t(plugged_out ?obj)\\n\\t(next_to ?char ?obj)\\n)\\n:effect (plugged_in ?obj)\\n)\\n(:**action** walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n\\t(movable ?obj)\\n\\t(next_to ?char ?obj)\\n)\\n:effect (and\\n\\t(when (plugged_in ?obj) (not (next_to ?char ?obj)))\\n\\t(when (plugged_out ?obj) (not (next_to ?char ?obj)))\\n)\\n)\\n(:**action** switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n\\t(has_switch ?obj)\\n\\t(off ?obj)\\n\\t(next_to ?char ?obj)\\n)\\n:effect (on ?obj)\\n) \"}"
    },
    {
        "identifier": "787_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?obj1 ?obj2)\\n    (next_to ?obj2 ?obj3)\\n    (not (next_to ?obj1 ?obj3))\\n  )\\n  :effect (next_to ?obj1 ?obj3)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{\n\"output\": \n\"(\\\":action plug_in\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\\\n:effect (plugged_in ?obj)\\\\n)\\\\n(:action walk_towards\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?room)))\\\\n:effect (next_to ?char ?obj)\\\\n)\\\\n(:action switch_on\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\\\n:effect (on ?obj)\\\\n)\\\\n\"}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{\n\"output\": \"( :action plug_in \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( has_plug ?obj ) ( plugged_out ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( plugged_out ?obj ) ) ( plugged_in ?obj ) ) \\n) \\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room ) ( obj_inside ?obj ?room ) ) \\n:effect ( and ( next_to ?char ?obj ) ) \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ) \\n) \"}"
    },
    {
        "identifier": "910_1",
        "llm_output": "{\n\"output\": \"(**:action plug_in\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (plugged_out ?obj)\\\\n (next_to ?char ?obj)\\\\n)\\\\n:effect (plugged_in ?obj)\\\\n)\\\\n**:action walk_towards\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (inside ?char ?room)\\\\n (obj_inside ?obj ?room)\\\\n (not (next_to ?char ?obj))\\\\n)\\\\n:effect (next_to ?char ?obj)\\\\n)\\\\n**:action switch_on\\\\n:parameters (?char - character ?obj - object)\\\\n:precondition (and\\\\n (has_switch ?obj)\\\\n (next_to ?char ?obj)\\\\n (off ?obj)\\\\n)\\\\n:effect (on ?obj)\\\\n)\"}"
    },
    {
        "identifier": "91_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (plugged_in ?obj))\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (off ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (off ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "93_2",
        "llm_output": "{\n\"output\": \"(define (problem Work)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office desk mouse hair keyboard cpuscreen check homework computer chair mousepad - object\\n)\\n(:init\\n(obj_next_to homework desk)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to check chair)\\n(surfaces chair)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(obj_next_to desk check)\\n(movable check)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(sittable chair)\\n(movable hair)\\n(has_paper homework)\\n(obj_ontop mousepad desk)\\n(readable check)\\n(obj_next_to mouse chair)\\n(obj_next_to chair homework)\\n(obj_ontop mouse desk)\\n(movable mouse)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_inside check home_office)\\n(obj_next_to chair mouse)\\n(obj_next_to homework chair)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to cpuscreen desk)\\n(readable homework)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(grabbable hair)\\n(obj_next_to computer desk)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(obj_next_to desk mousepad)\\n(obj_next_to chair check)\\n(obj_next_to mousepad desk)\\n(grabbable mouse)\\n(obj_next_to desk homework)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(cuttable hair)\\n(obj_next_to computer mouse)\\n(has_paper check)\\n(obj_inside computer home_office)\\n(inside character bathroom)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(grabbable homework)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(body_part hair)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(obj_next_to check desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(grabbable check)\\n(grabbable keyboard)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to mouse computer)\\n(obj_next_to chair desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_inside cpuscreen home_office)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(obj_inside homework home_office)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(movable homework)\\n)\\n(:goal\\n(and\\n(on computer)\\n)\\n)\\n(:action plug_in\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n :effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "962_1",
        "llm_output": "{\n\"output\": \"( :action plug_in \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj)) \\n:effect (plugged_in ?obj) \\n) \\n( :action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?loc1) (inside ?char ?loc2) (obj_next_to ?loc1 ?loc2)) \\n:effect (inside ?char ?loc2) \\n) \\n( :action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition (and (has_switch ?obj) (next_to ?char ?obj)) \\n:effect (on ?obj) \\n)\"}"
    },
    {
        "identifier": "190_1",
        "llm_output": "{\n\"output\": \n\"(**:action switch_off:\\n:parameters (?char - character ?obj - object):precondition (and (on ?obj) (next_to ?char ?obj)):effect (not (on ?obj))**:action put_on:\\n:parameters (?char - character ?obj1 - object ?obj2 - object):precondition (and (holds_rh ?char ?obj1) (next_to ?char ?obj2)):effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1))**:action walk_towards:\\n:parameters (?char - character ?obj - object):precondition (not (next_to ?char ?obj)):effect (next_to ?char ?obj)**:action switch_on:\\n:parameters (?char - character ?obj - object):precondition (and (off ?obj) (next_to ?char ?obj) (has_switch ?obj)):effect (on ?obj)**:action grab:\\n:parameters (?char - character ?obj - object):precondition (and (grabbable ?obj) (next_to ?char ?obj)):effect (holds_rh ?char ?obj)**:action open:\\n:parameters (?char - character ?obj - object):precondition (and (closed ?obj) (can_open ?obj) (next_to ?char ?obj)):effect (not (closed ?obj))**:action close:\\n:parameters (?char - character ?obj - object):precondition (and (open ?obj) (next_to ?char ?obj)):effect (closed ?obj)**:action plug_in:\\n:parameters (?char - character ?obj - object):precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj)):effect (plugged_in ?obj)\"}"
    },
    {
        "identifier": "201_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dishwasher dish_soap plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(obj_inside dish_soap dishwasher)\\n(obj_next_to dishwasher dish_soap)\\n(grabbable dish_soap)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(movable dish_soap)\\n(cream dish_soap)\\n(surfaces plate)\\n(pourable dish_soap)\\n(obj_next_to plate dishwasher)\\n(closed dishwasher)\\n(inside_room dish_soap dining_room)\\n(clean dishwasher)\\n(can_open dishwasher)\\n(off dishwasher)\\n(has_switch dishwasher)\\n(movable plate)\\n(obj_next_to dishwasher plate)\\n(inside character home_office)\\n(containers dishwasher)\\n(obj_inside plate dishwasher)\\n(obj_next_to dish_soap dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2) (not (obj_ontop ?obj1 ?obj2)))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (grabbable ?obj1)) (not (next_to ?char ?obj2)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (inside_room ?obj ?room))\\n:effect (and (next_to ?char ?obj) (not (inside_room character ?room)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n:effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "223_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dishwasher dish_soap plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(obj_inside dish_soap dishwasher)\\n(obj_next_to dishwasher dish_soap)\\n(grabbable dish_soap)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(movable dish_soap)\\n(cream dish_soap)\\n(surfaces plate)\\n(pourable dish_soap)\\n(obj_next_to plate dishwasher)\\n(closed dishwasher)\\n(clean dishwasher)\\n(inside_room dish_soap dining_room)\\n(can_open dishwasher)\\n(off dishwasher)\\n(has_switch dishwasher)\\n(movable plate)\\n(obj_next_to dishwasher plate)\\n(inside character home_office)\\n(containers dishwasher)\\n(obj_inside plate dishwasher)\\n(obj_next_to dish_soap dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2))\\n:effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (open ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (closed ?obj)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n:effect (plugged_in ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "327_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office microwave faucet dishwasher kitchen_counter coffe_maker dish_soap plate food_jam dining_room toaster - object\\n)\\n(:init\\n(obj_next_to dishwasher kitchen_counter)\\n(obj_next_to toaster faucet)\\n(recipient plate)\\n(grabbable food_jam)\\n(containers microwave)\\n(obj_ontop coffe_maker kitchen_counter)\\n(obj_next_to toaster kitchen_counter)\\n(inside_room faucet dining_room)\\n(obj_next_to faucet microwave)\\n(obj_next_to faucet toaster)\\n(obj_next_to plate kitchen_counter)\\n(movable food_jam)\\n(inside_room kitchen_counter dining_room)\\n(obj_next_to kitchen_counter coffe_maker)\\n(has_switch microwave)\\n(pourable dish_soap)\\n(obj_ontop plate kitchen_counter)\\n(has_plug toaster)\\n(inside_room microwave dining_room)\\n(has_switch faucet)\\n(obj_next_to coffe_maker faucet)\\n(obj_next_to microwave faucet)\\n(obj_next_to coffe_maker kitchen_counter)\\n(obj_next_to toaster coffe_maker)\\n(has_plug microwave)\\n(cream food_jam)\\n(obj_next_to microwave kitchen_counter)\\n(has_switch coffe_maker)\\n(cream dish_soap)\\n(surfaces plate)\\n(obj_next_to coffe_maker toaster)\\n(obj_next_to kitchen_counter dishwasher)\\n(obj_next_to microwave toaster)\\n(inside_room toaster dining_room)\\n(movable plate)\\n(obj_next_to food_jam kitchen_counter)\\n(obj_next_to kitchen_counter microwave)\\n(inside_room plate dining_room)\\n(obj_next_to kitchen_counter food_jam)\\n(obj_next_to dish_soap kitchen_counter)\\n(obj_next_to kitchen_counter toaster)\\n(grabbable dish_soap)\\n(plugged_out dishwasher)\\n(obj_next_to faucet coffe_maker)\\n(movable dish_soap)\\n(obj_ontop microwave kitchen_counter)\\n(has_switch toaster)\\n(surfaces kitchen_counter)\\n(has_switch dishwasher)\\n(can_open coffe_maker)\\n(obj_ontop faucet kitchen_counter)\\n(obj_next_to faucet kitchen_counter)\\n(can_open food_jam)\\n(movable coffe_maker)\\n(containers dishwasher)\\n(obj_inside dish_soap dishwasher)\\n(obj_next_to kitchen_counter plate)\\n(obj_ontop food_jam kitchen_counter)\\n(movable toaster)\\n(obj_ontop toaster kitchen_counter)\\n(recipient coffe_maker)\\n(has_plug coffe_maker)\\n(can_open microwave)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(obj_next_to toaster microwave)\\n(eatable food_jam)\\n(containers coffe_maker)\\n(inside_room food_jam dining_room)\\n(closed dishwasher)\\n(obj_next_to kitchen_counter faucet)\\n(inside_room coffe_maker dining_room)\\n(clean dishwasher)\\n(inside_room dish_soap dining_room)\\n(off dishwasher)\\n(can_open dishwasher)\\n(obj_next_to kitchen_counter dish_soap)\\n(inside character home_office)\\n(obj_inside plate dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (sittable ?obj2) (not (obj_ontop ?obj1 ?obj2)))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)) (not (sitting ?char)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?room)) (inside_room ?obj ?room))\\n:effect (and (next_to ?char ?obj) (inside ?char ?room))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (not (on ?obj)))\\n:effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office dishwasher dish_soap plate food_food dining_room - object\\n)\\n    (:init\\n    (inside_room plate dining_room)\\n    (recipient plate)\\n    (inside_room food_food dining_room)\\n    (obj_inside dish_soap dishwasher)\\n    (obj_next_to dishwasher dish_soap)\\n    (grabbable dish_soap)\\n    (plugged_out dishwasher)\\n    (grabbable plate)\\n    (inside_room dishwasher dining_room)\\n    (obj_next_to plate food_food)\\n    (obj_ontop food_food plate)\\n    (movable dish_soap)\\n    (movable food_food)\\n    (obj_next_to food_food plate)\\n    (cream dish_soap)\\n    (surfaces plate)\\n    (pourable dish_soap)\\n    (grabbable food_food)\\n    (obj_next_to plate dishwasher)\\n    (closed dishwasher)\\n    (eatable food_food)\\n    (clean dishwasher)\\n    (inside_room dish_soap dining_room)\\n    (can_open dishwasher)\\n    (off dishwasher)\\n    (has_switch dishwasher)\\n    (movable plate)\\n    (obj_next_to dishwasher plate)\\n    (inside character home_office)\\n    (containers dishwasher)\\n    (obj_inside plate dishwasher)\\n    (cuttable food_food)\\n    (obj_next_to dish_soap dishwasher)\\n    )\\n    (:goal\\n    (and\\n        (closed dishwasher)\\n        (on dishwasher)\\n        (obj_ontop dish_soap dishwasher)\\n        (obj_ontop plate dishwasher)\\n    )\\n    )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (grabbable ?obj1) (next_to ?char ?obj2))\\n  :effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside character home_office) (inside_room ?obj dining_room))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (plugged_out ?obj) (has_plug ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\"}"
    },
    {
        "identifier": "417_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfork dishwasher dish_soap plate drinking_glass - object\\n)\\n(:init\\n(recipient plate)\\n(obj_inside dish_soap dishwasher)\\n(grabbable drinking_glass)\\n(grabbable dish_soap)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(grabbable fork)\\n(movable dish_soap)\\n(movable fork)\\n(pourable drinking_glass)\\n(obj_inside drinking_glass dishwasher)\\n(cream dish_soap)\\n(surfaces plate)\\n(obj_inside fork dishwasher)\\n(pourable dish_soap)\\n(closed dishwasher)\\n(movable drinking_glass)\\n(clean dishwasher)\\n(can_open dishwasher)\\n(off dishwasher)\\n(has_switch dishwasher)\\n(recipient drinking_glass)\\n(movable plate)\\n(containers dishwasher)\\n(obj_inside plate dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop drinking_glass dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop fork dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2))\\n:effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (movable ?char))\\n:effect (and (next_to ?char ?obj) (not (next_to ?obj ?char))))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (not (closed ?obj)) (open ?obj))\\n)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (not (open ?obj)) (closed ?obj))\\n)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\\n\"}"
    },
    {
        "identifier": "487_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfork spoon cup dishwasher bedroom dish_soap plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(recipient cup)\\n(obj_inside dish_soap dishwasher)\\n(movable cup)\\n(inside_room cup dining_room)\\n(grabbable dish_soap)\\n(obj_next_to spoon plate)\\n(movable spoon)\\n(grabbable cup)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(grabbable fork)\\n(movable dish_soap)\\n(obj_next_to plate fork)\\n(movable fork)\\n(inside_room spoon dining_room)\\n(obj_next_to dish_soap plate)\\n(obj_inside spoon dishwasher)\\n(inside_room fork dining_room)\\n(obj_next_to plate dish_soap)\\n(cream dish_soap)\\n(surfaces plate)\\n(obj_inside fork dishwasher)\\n(pourable dish_soap)\\n(grabbable spoon)\\n(obj_next_to plate dishwasher)\\n(closed dishwasher)\\n(obj_next_to cup plate)\\n(clean dishwasher)\\n(inside_room dish_soap dining_room)\\n(can_open dishwasher)\\n(has_switch dishwasher)\\n(off dishwasher)\\n(obj_next_to plate spoon)\\n(obj_next_to plate cup)\\n(movable plate)\\n(inside character bedroom)\\n(obj_next_to dishwasher plate)\\n(containers dishwasher)\\n(obj_next_to fork plate)\\n(obj_inside cup dishwasher)\\n(pourable cup)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop cup dishwasher)\\n(obj_ontop spoon dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop fork dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (not (holds_lh ?char ?obj1)) (not (holds_rh ?char ?obj1)) (not (obj_ontop ?obj1 ?obj2)))\\n:effect (and (obj_ontop ?obj1 ?obj2) (when (holds_lh ?char ?obj1) (not (holds_lh ?char ?obj1))) (when (holds_rh ?char ?obj1) (not (holds_rh ?char ?obj1))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room ?obj dining_room) (not (next_to ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (or (holds_lh ?char ?obj) (holds_rh ?char ?obj))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj))\\n:effect (open ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj))\\n:effect (closed ?obj)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj))\\n:effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "650_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office pot table dishwasher dish_soap plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(can_open pot)\\n(surfaces table)\\n(obj_next_to dishwasher dish_soap)\\n(grabbable dish_soap)\\n(obj_next_to table plate)\\n(recipient pot)\\n(obj_next_to table pot)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(inside_room pot dining_room)\\n(movable dish_soap)\\n(movable table)\\n(cream dish_soap)\\n(surfaces plate)\\n(obj_ontop plate table)\\n(pourable dish_soap)\\n(obj_next_to plate table)\\n(grabbable pot)\\n(obj_inside pot dishwasher)\\n(obj_next_to pot table)\\n(closed dishwasher)\\n(clean dishwasher)\\n(inside_room dish_soap dining_room)\\n(can_open dishwasher)\\n(has_switch dishwasher)\\n(off dishwasher)\\n(inside_room table dining_room)\\n(obj_ontop pot table)\\n(movable plate)\\n(movable pot)\\n(obj_inside table home_office)\\n(inside character home_office)\\n(containers dishwasher)\\n(obj_next_to dish_soap dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop plate dishwasher)\\n(obj_ontop pot dishwasher)\\n)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2) (sittable ?obj2))\\n:effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj ?char) (not (equal ?obj ?char)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (open ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (closed ?obj)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n:effect (plugged_in ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "783_1",
        "llm_output": "{\n\"output\": \n\"( :action put_on \\n:parameters ( ?char - character ?obj1 - object ?obj2 - object ) \\n:precondition ( and ( grabbable ?obj1 ) ( next_to ?char ?obj2 ) ( sittable ?obj2 ) ) \\n:effect ( and ( ontop ?char ?obj2 ) ( not ( grabbable ?obj1 ) ) ( obj_ontop ?obj1 ?obj2 ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char1 ?obj ) ( character ?char1 ) ( not ( equal ?char ?char1 ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( next_to ?char1 ?obj ) ) ) \\n)\\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( has_switch ?obj ) ( off ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( on ?obj ) ( not ( off ?obj ) ) ) \\n)\\n( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( grabbable ?obj ) ) ) \\n)\\n( :action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( can_open ?obj ) ( closed ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( open ?obj ) ( not ( closed ?obj ) ) ) \\n)\\n( :action close \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( can_open ?obj ) ( open ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( closed ?obj ) ( not ( open ?obj ) ) ) \\n)\\n( :action plug_in \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( has_plug ?obj ) ( plugged_out ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( plugged_in ?obj ) ( not ( plugged_out ?obj ) ) ) \\n)\"}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    table dishwasher bedroom dish_soap plate dining_room - object\\n)\\n    (:init\\n    (inside_room plate dining_room)\\n    (recipient plate)\\n    (surfaces table)\\n    (obj_inside dish_soap dishwasher)\\n    (obj_next_to dishwasher dish_soap)\\n    (grabbable dish_soap)\\n    (obj_next_to table plate)\\n    (plugged_out dishwasher)\\n    (grabbable plate)\\n    (inside_room dishwasher dining_room)\\n    (movable dish_soap)\\n    (movable table)\\n    (cream dish_soap)\\n    (surfaces plate)\\n    (obj_ontop plate table)\\n    (pourable dish_soap)\\n    (obj_next_to plate table)\\n    (closed dishwasher)\\n    (inside_room table bedroom)\\n    (clean dishwasher)\\n    (inside_room dish_soap dining_room)\\n    (can_open dishwasher)\\n    (has_switch dishwasher)\\n    (off dishwasher)\\n    (inside_room table dining_room)\\n    (movable plate)\\n    (inside character bedroom)\\n    (containers dishwasher)\\n    (obj_next_to dish_soap dishwasher)\\n)\\n    (:goal\\n    (and\\n        (closed dishwasher)\\n        (on dishwasher)\\n        (obj_ontop dish_soap dishwasher)\\n        (obj_ontop plate dishwasher)\\n    )\\n)\\n)\\n(\\n:action switch_off\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (on ?obj))\\n:effect (off ?obj)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (next_to ?char ?obj2))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room ?obj bedroom))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj))\\n:effect (open ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj))\\n:effect (closed ?obj)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n:effect (plugged_in ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{\n\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj1)\\n    (sittable ?obj2)\\n    (next_to ?char ?obj2)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?obj1) (not (holds_rh ?char ?obj1)))\\n    (on ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?obj1 ?obj) (next_to ?obj2 ?obj) (different ?obj1 ?obj2)\\n  )\\n  :effect (and\\n    (when (next_to ?char ?obj1) (not (next_to ?char ?obj1)))\\n    (when (next_to ?char ?obj2) (not (next_to ?char ?obj2)))\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (when (grabbable ?obj) (not (grabbable ?obj)))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom dishwasher dish_soap plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(obj_inside dish_soap dishwasher)\\n(obj_next_to dishwasher dish_soap)\\n(grabbable dish_soap)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(inside_room dishwasher dining_room)\\n(movable dish_soap)\\n(cream dish_soap)\\n(surfaces plate)\\n(pourable dish_soap)\\n(obj_next_to plate dishwasher)\\n(closed dishwasher)\\n(inside_room dish_soap dining_room)\\n(clean dishwasher)\\n(can_open dishwasher)\\n(off dishwasher)\\n(has_switch dishwasher)\\n(movable plate)\\n(inside character bathroom)\\n(obj_next_to dishwasher plate)\\n(containers dishwasher)\\n(obj_inside plate dishwasher)\\n(obj_next_to dish_soap dishwasher)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n)\\n(\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2))\\n:effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?obj ?char))))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (closed ?obj) (not (open ?obj)))\\n)\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\\n\"}"
    },
    {
        "identifier": "911_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_dishes_with_dishwasher)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nplate dish_soap cup dishwasher - object\\n)\\n(:init\\n(recipient plate)\\n(recipient cup)\\n(obj_inside dish_soap dishwasher)\\n(movable cup)\\n(grabbable dish_soap)\\n(grabbable cup)\\n(plugged_out dishwasher)\\n(grabbable plate)\\n(movable dish_soap)\\n(cream dish_soap)\\n(surfaces plate)\\n(pourable dish_soap)\\n(closed dishwasher)\\n(clean dishwasher)\\n(can_open dishwasher)\\n(off dishwasher)\\n(has_switch dishwasher)\\n(movable plate)\\n(containers dishwasher)\\n(obj_inside cup dishwasher)\\n(obj_inside plate dishwasher)\\n(pourable cup)\\n)\\n(:goal\\n(and\\n(closed dishwasher)\\n(on dishwasher)\\n(obj_ontop dish_soap dishwasher)\\n(obj_ontop cup dishwasher)\\n(obj_ontop plate dishwasher)\\n)\\n) \\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (grabbable ?obj1) (next_to ?char ?obj2))\\n:effect (and (not (grabbable ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj1 ?char) (not (equal ?obj ?obj1)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj1)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\\n\"}"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_sleep)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbed bedroom dining_room - object\\n)\\n(:init\\n(lieable bed)\\n(inside_room bed bedroom)\\n(sittable bed)\\n(inside character dining_room)\\n(surfaces bed)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character bed)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char dining_room) (inside_room ?obj bedroom) (obj_inside bed bedroom) (obj_inside bedroom house) (different ?char ?obj) (not (equal ?char ?obj)))\\n :effect (and (inside ?char bedroom) (not (inside ?char dining_room)) (next_to ?char ?obj))\\n)\\n(:action lie\\n :parameters (?char - character ?obj - object)\\n :precondition (and (lieable ?obj) (sittable ?obj) (next_to ?char ?obj) (on bed) (clean bed))\\n :effect (and (lying ?char) (ontop ?char ?obj) (not (sitting ?char)) (off bed))\\n)\\n\"}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_sleep)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbed bathroom bedroom - object\\n)\\n(:init\\n(lieable bed)\\n(inside_room bed bedroom)\\n(inside character bathroom)\\n(sittable bed)\\n(surfaces bed)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character bed)\\n)\\n)\\n)\\n(\\n:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (obj_inside bathroom bedroom))\\n:effect (and (inside character bedroom) (not (inside character bathroom)))\\n)\\n(:action lie\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (sittable ?obj))\\n:effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "244_2",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_sleep)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbed bedroom dining_room - object\\n)\\n(:init\\n(lieable bed)\\n(inside_room bed bedroom)\\n(sittable bed)\\n(inside character dining_room)\\n(surfaces bed)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character bed)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char dining_room) (inside_room ?obj bedroom) (obj_inside bed bedroom) (obj_inside bedroom house) (different ?char ?obj) (not (equal ?char ?obj)))\\n :effect (and (inside ?char bedroom) (not (inside ?char dining_room)) (next_to ?char ?obj))\\n)\\n(:action lie\\n :parameters (?char - character ?obj - object)\\n :precondition (and (lieable ?obj) (sittable ?obj) (next_to ?char ?obj) (on bed) (clean bed))\\n :effect (and (lying ?char) (ontop ?char ?obj) (not (sitting ?char)) (off bed))\\n)\\n\"}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_sleep)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbed bathroom bedroom - object\\n)\\n(:init\\n(lieable bed)\\n(inside_room bed bedroom)\\n(inside character bathroom)\\n(sittable bed)\\n(surfaces bed)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character bed)\\n)\\n)\\n)\\n(\\n:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (obj_inside bathroom bedroom))\\n:effect (and (inside character bedroom) (not (inside character bathroom)))\\n)\\n(:action lie\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (sittable ?obj))\\n:effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "509_2",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( inside_room ?obj ?room ) ) \\n:effect ( and ( when ( not ( next_to ?char ?obj ) ) ( next_to ?char ?obj ) ) ( when ( next_to ?char ?obj ) ( not ( next_to ?char ?obj ) ) ) ) \\n) \\n( :action lie \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( sittable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( lying ?char ) ( when ( not ( ontop ?char ?obj ) ) ( ontop ?char ?obj ) ) ( when ( on ?obj ) ( off ?obj ) ) ) \\n) \"}"
    },
    {
        "identifier": "875_1",
        "llm_output": "{\n\"output\": \"(define (problem Go_to_sleep)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbed nightstand mat dining_room pillow window bedroom drawing tablelamp wall curtain floor - object\\n)\\n(:init\\n(obj_next_to mat wall)\\n(obj_next_to floor pillow)\\n(facing wall drawing)\\n(obj_next_to mat curtain)\\n(obj_next_to pillow floor)\\n(facing window drawing)\\n(inside_room nightstand bedroom)\\n(obj_next_to curtain mat)\\n(obj_next_to window floor)\\n(obj_next_to floor mat)\\n(obj_next_to window nightstand)\\n(obj_next_to bed window)\\n(surfaces mat)\\n(obj_next_to floor bed)\\n(has_switch tablelamp)\\n(obj_next_to nightstand curtain)\\n(obj_next_to bed nightstand)\\n(obj_next_to curtain pillow)\\n(obj_next_to window bed)\\n(obj_ontop nightstand mat)\\n(facing drawing drawing)\\n(obj_ontop pillow floor)\\n(obj_next_to pillow drawing)\\n(obj_next_to floor drawing)\\n(obj_next_to mat tablelamp)\\n(cuttable drawing)\\n(obj_next_to window wall)\\n(obj_next_to tablelamp mat)\\n(obj_next_to mat drawing)\\n(inside_room mat bedroom)\\n(obj_next_to nightstand tablelamp)\\n(obj_next_to bed mat)\\n(obj_next_to pillow pillow)\\n(obj_next_to wall mat)\\n(inside_room floor dining_room)\\n(obj_next_to tablelamp window)\\n(obj_ontop tablelamp nightstand)\\n(obj_next_to curtain tablelamp)\\n(obj_next_to curtain wall)\\n(obj_next_to nightstand pillow)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(obj_next_to curtain curtain)\\n(obj_inside curtain curtain)\\n(inside_room wall dining_room)\\n(inside_room pillow bedroom)\\n(sittable mat)\\n(lookable drawing)\\n(obj_next_to mat window)\\n(obj_next_to bed wall)\\n(obj_ontop drawing wall)\\n(grabbable mat)\\n(surfaces nightstand)\\n(obj_next_to wall curtain)\\n(obj_next_to wall pillow)\\n(obj_next_to drawing pillow)\\n(obj_next_to pillow nightstand)\\n(obj_ontop nightstand floor)\\n(obj_next_to floor curtain)\\n(obj_next_to mat floor)\\n(cover_object curtain)\\n(obj_next_to drawing wall)\\n(obj_next_to mat mat)\\n(obj_next_to bed floor)\\n(movable pillow)\\n(inside_room window bedroom)\\n(obj_next_to curtain window)\\n(obj_next_to wall window)\\n(inside_room wall bedroom)\\n(obj_next_to mat nightstand)\\n(obj_next_to drawing floor)\\n(movable mat)\\n(obj_next_to tablelamp curtain)\\n(obj_next_to mat pillow)\\n(obj_next_to bed tablelamp)\\n(obj_next_to tablelamp floor)\\n(movable curtain)\\n(surfaces bed)\\n(lieable mat)\\n(obj_next_to floor nightstand)\\n(containers nightstand)\\n(obj_next_to wall tablelamp)\\n(inside_room floor bedroom)\\n(obj_next_to pillow tablelamp)\\n(obj_next_to floor tablelamp)\\n(obj_next_to nightstand mat)\\n(obj_next_to nightstand floor)\\n(obj_next_to window tablelamp)\\n(obj_next_to floor floor)\\n(facing tablelamp drawing)\\n(facing mat drawing)\\n(obj_next_to pillow curtain)\\n(obj_next_to tablelamp pillow)\\n(obj_next_to tablelamp wall)\\n(obj_next_to wall drawing)\\n(obj_next_to drawing mat)\\n(obj_next_to wall floor)\\n(obj_next_to bed curtain)\\n(inside_room drawing bedroom)\\n(obj_next_to pillow window)\\n(movable drawing)\\n(obj_next_to wall bed)\\n(obj_next_to window pillow)\\n(obj_next_to nightstand bed)\\n(has_paper drawing)\\n(obj_next_to curtain floor)\\n(obj_next_to floor wall)\\n(sittable bed)\\n(obj_ontop bed mat)\\n(facing floor drawing)\\n(obj_next_to wall wall)\\n(inside_room curtain bedroom)\\n(lieable bed)\\n(obj_next_to tablelamp nightstand)\\n(obj_next_to curtain nightstand)\\n(obj_next_to pillow mat)\\n(inside_room mat dining_room)\\n(obj_next_to wall nightstand)\\n(obj_next_to curtain bed)\\n(grabbable drawing)\\n(obj_next_to window mat)\\n(facing pillow drawing)\\n(obj_next_to window curtain)\\n(obj_next_to floor window)\\n(inside_room bed bedroom)\\n(obj_ontop bed floor)\\n(inside_room tablelamp bedroom)\\n(inside character dining_room)\\n(facing nightstand drawing)\\n(obj_next_to nightstand wall)\\n(obj_next_to tablelamp bed)\\n(grabbable pillow)\\n(facing curtain drawing)\\n(obj_next_to mat bed)\\n(obj_next_to nightstand window)\\n(inside_room drawing dining_room)\\n(facing bed drawing)\\n(can_open curtain)\\n(can_open nightstand)\\n(obj_next_to pillow wall)\\n) \\n(:goal\\n(and\\n(lying character)\\n(ontop character bed)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character dining_room) (obj_next_to ?char ?obj))\\n :effect (and (inside character bedroom) (not (inside character dining_room)) (not (obj_next_to ?char ?obj)))\\n) \\n(:action lie\\n :parameters (?char - character ?obj - object)\\n :precondition (and (lying ?char) (sittable ?obj) (next_to ?char ?obj))\\n :effect (and (ontop ?char ?obj) (not (lying ?char)) (not (next_to ?char ?obj)) (sitting ?char)))\\n)\"}"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "12_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "137_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room1 - object) (obj_inside ?obj ?room2 - object) (or (and (not (= ?room1 ?room2)) (obj_next_to ?room1 ?room2))) (not (next_to ?char ?obj)))\\n:effect (and (not (inside ?char ?room1)) (inside ?char ?room2) (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "220_2",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n\\\n  :parameters ( ?char - character ?obj - object ) \\n\\\n  :precondition ( and \\n\\\n    ( inside ?char ?obj1 - object ) \\n\\\n    ( obj_inside ?obj ?obj2 - object ) \\n\\\n    ( obj_next_to ?obj1 ?obj2 ) \\n\\\n  ) \\n\\\n  :effect ( and \\n\\\n    ( not ( inside ?char ?obj1 ) ) \\n\\\n    ( inside ?char ?obj2 ) \\n\\\n    ( not ( obj_inside ?obj ?obj2 ) ) \\n\\\n    ( obj_inside ?obj ?obj1 ) \\n\\\n  ) \\n\\\n) \"}"
    },
    {
        "identifier": "242_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "279_2",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n  :parameters ( ?char - character ?obj - object ) \\n  :precondition ( and ( inside ?char ?obj1 - object ) ( not ( same ?obj ?obj1 ) ) ) \\n  :effect ( and ( not ( inside ?char ?obj1 ) ) ( next_to ?char ?obj ) ) \\n) \"}"
    },
    {
        "identifier": "287_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "292_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room) ; char and obj are in the same room\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n\"}"
    },
    {
        "identifier": "297_1",
        "llm_output": "{\n\"output\": \"(define (problem Pet_cat)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch dining_room cat - object\\n)\\n(:init\\n(grabbable cat)\\n(obj_inside cat home_office)\\n(lieable couch)\\n(obj_next_to cat couch)\\n(surfaces couch)\\n(obj_next_to couch cat)\\n(movable couch)\\n(obj_inside couch home_office)\\n(inside character dining_room)\\n(movable cat)\\n(sittable couch)\\n)\\n(:goal\\n(and\\n(next_to character cat)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside \\\"character\\\" ?room) (obj_inside ?obj ?room))\\n:effect (next_to ?char ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "381_1",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n\\\n  :parameters ( ?char - character ?obj - object ) \\n\\\n  :precondition ( and \\n\\\n    ( inside ?char ?obj1 - object ) \\n\\\n    ( obj_inside ?obj ?obj2 - object ) \\n\\\n    ( obj_next_to ?obj1 ?obj2 ) \\n\\\n  ) \\n\\\n  :effect ( and \\n\\\n    ( not ( inside ?char ?obj1 ) ) \\n\\\n    ( inside ?char ?obj2 ) \\n\\\n    ( not ( obj_inside ?obj ?obj2 ) ) \\n\\\n    ( obj_inside ?obj ?obj1 ) \\n\\\n  ) \\n\\\n) \"}"
    },
    {
        "identifier": "388_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "38_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n\\n\"}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room - object) (inside ?obj ?room))\\n:effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "451_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room) (not (next_to ?char ?obj))) \\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "469_2",
        "llm_output": "{\n\"output\": \"(define (problem Pet_cat)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ncouch cat - object\\n) \\n(:init\\n(grabbable cat)\\n(lieable couch)\\n(obj_next_to cat couch)\\n(surfaces couch)\\n(obj_next_to couch cat)\\n(movable couch)\\n(movable cat)\\n(sittable couch)\\n)\\n(:goal\\n(and\\n(next_to character cat)\\n)\\n) \\n)\\n(\\n:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (obj_next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj) (not (obj_next_to ?char ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "479_2",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n  :parameters ( ?char - character ?obj - object ) \\n  :precondition ( and ( inside ?char ?obj1 - object ) ( not ( same ?obj ?obj1 ) ) ) \\n  :effect ( and ( not ( inside ?char ?obj1 ) ) ( next_to ?char ?obj ) ) \\n) \"}"
    },
    {
        "identifier": "502_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?obj) (next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n\\n\"}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room) \\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "856_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room)\\n    (movable ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action move_object\\n  :parameters (?char - character ?obj - object ?dest_room - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room)\\n    (movable ?obj)\\n  )\\n  :effect (and\\n    (not (obj_inside ?obj ?room))\\n    (obj_inside ?obj ?dest_room)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "384_1",
        "llm_output": "{\n\"output\": \"(define (problem Browse_internet)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office desk walllamp mouse keyboard powersocket cpuscreen doorjamb computer chair mousepad wall floor - object\\n)\\n(:init\\n(obj_inside powersocket home_office)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to wall powersocket)\\n(surfaces chair)\\n(obj_next_to cpuscreen floor)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(obj_next_to doorjamb walllamp)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to mouse powersocket)\\n(obj_next_to mousepad doorjamb)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to computer doorjamb)\\n(obj_next_to walllamp floor)\\n(obj_ontop mousepad desk)\\n(facing floor computer)\\n(obj_next_to mouse chair)\\n(obj_inside wall home_office)\\n(obj_next_to floor powersocket)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_ontop doorjamb floor)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to doorjamb wall)\\n(obj_next_to wall doorjamb)\\n(obj_next_to chair walllamp)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_inside walllamp home_office)\\n(obj_next_to desk doorjamb)\\n(obj_inside floor home_office)\\n(obj_next_to cpuscreen desk)\\n(obj_next_to walllamp keyboard)\\n(obj_inside doorjamb home_office)\\n(obj_next_to mousepad powersocket)\\n(facing wall computer)\\n(obj_next_to floor mousepad)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to desk walllamp)\\n(obj_next_to computer desk)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(facing walllamp computer)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad floor)\\n(obj_next_to mousepad desk)\\n(obj_next_to keyboard floor)\\n(obj_next_to walllamp chair)\\n(grabbable mouse)\\n(obj_next_to doorjamb computer)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to walllamp desk)\\n(obj_next_to chair floor)\\n(obj_next_to mouse floor)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to powersocket wall)\\n(obj_next_to floor floor)\\n(obj_next_to doorjamb mousepad)\\n(obj_next_to walllamp wall)\\n(obj_next_to wall walllamp)\\n(obj_next_to doorjamb desk)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to desk powersocket)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(inside character bathroom)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to powersocket doorjamb)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to powersocket mousepad)\\n(obj_next_to wall computer)\\n(obj_next_to powersocket floor)\\n(obj_next_to mouse doorjamb)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to floor walllamp)\\n(movable chair)\\n(obj_next_to desk mouse)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to walllamp doorjamb)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(obj_next_to powersocket desk)\\n(obj_next_to powersocket mouse)\\n(grabbable keyboard)\\n(inside_room doorjamb bathroom)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to chair desk)\\n(obj_next_to mouse computer)\\n(obj_ontop desk floor)\\n(obj_next_to doorjamb floor)\\n(obj_next_to computer powersocket)\\n(obj_next_to floor doorjamb)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(inside_room walllamp bathroom)\\n(obj_next_to chair wall)\\n(inside_room wall bathroom)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to doorjamb mouse)\\n(obj_next_to powersocket computer)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(inside_room floor bathroom)\\n(obj_next_to floor cpuscreen)\\n(facing doorjamb computer)\\n(obj_next_to floor chair)\\n(obj_next_to keyboard walllamp)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on computer)\\n(inside character home_office)\\n(facing character computer)\\n(holds_rh character mouse)\\n(holds_lh character keyboard)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char bathroom) (inside_room ?obj bathroom))\\n :effect (next_to ?char ?obj)\\n)\\n(:action walk_into\\n :parameters (?char - character ?room - object)\\n :precondition (and (next_to ?char ?room) (not (inside ?char ?room)))\\n :effect (inside ?char ?room)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) (has_switch ?obj) (not (on ?obj)))\\n :effect (on ?obj)\\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n :effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action turn_to\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) (not (facing ?char ?obj)))\\n :effect (facing ?char ?obj)\\}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{\n\"output\": \"(define (problem Browse_internet)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom phone home_office - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(grabbable phone)\\n(inside character bathroom)\\n(has_plug phone)\\n(has_switch phone)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(facing character phone)\\n(holds_rh character phone)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?obj1 - object) (obj_next_to ?obj1 ?obj) (not (equal ?char ?obj)) (not (equal ?obj1 ?obj)))\\n:effect (and (inside ?char ?obj1) (not (inside ?char ?obj))))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (facing ?char ?obj1 - object) (not (equal ?obj ?obj1)))\\n:effect (facing ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "60_1",
        "llm_output": "{\n\"output\": \"(define (problem Browse_internet)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office desk walllamp mouse keyboard cpuscreen laptop computer chair mousepad wall dining_room floor - object\\n)\\n(:init\\n(obj_next_to cpuscreen mousepad)\\n(surfaces chair)\\n(obj_next_to cpuscreen floor)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to walllamp floor)\\n(obj_ontop mousepad desk)\\n(grabbable laptop)\\n(facing floor computer)\\n(obj_next_to mouse chair)\\n(obj_inside wall home_office)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(movable laptop)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(inside_room floor dining_room)\\n(has_plug laptop)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(inside_room wall dining_room)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to chair walllamp)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_inside walllamp home_office)\\n(obj_inside floor home_office)\\n(obj_next_to cpuscreen desk)\\n(has_switch laptop)\\n(obj_next_to walllamp keyboard)\\n(facing wall computer)\\n(obj_next_to floor mousepad)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to desk walllamp)\\n(obj_next_to computer desk)\\n(clean laptop)\\n(obj_next_to desk wall)\\n(plugged_in laptop)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(facing walllamp computer)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad floor)\\n(obj_next_to mousepad desk)\\n(obj_next_to keyboard floor)\\n(obj_next_to walllamp chair)\\n(grabbable mouse)\\n(obj_next_to laptop keyboard)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_inside laptop home_office)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(off laptop)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to walllamp desk)\\n(obj_next_to chair floor)\\n(obj_next_to mouse floor)\\n(obj_next_to keyboard laptop)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to floor floor)\\n(obj_next_to walllamp wall)\\n(obj_next_to wall walllamp)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(lookable laptop)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to wall computer)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to floor walllamp)\\n(movable chair)\\n(obj_next_to desk mouse)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(grabbable keyboard)\\n(obj_ontop desk floor)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to mouse computer)\\n(obj_next_to chair desk)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(obj_next_to chair wall)\\n(inside character dining_room)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to keyboard wall)\\n(obj_next_to mouse cpuscreen)\\n(obj_next_to floor cpuscreen)\\n(obj_next_to floor chair)\\n(obj_next_to keyboard walllamp)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on laptop)\\n(plugged_in laptop)\\n(facing character laptop)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character dining_room) (inside ?obj dining_room))\\n :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) (not (facing ?char ?obj)))\\n :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) (has_switch ?obj) (not (on ?obj)))\\n :effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "71_2",
        "llm_output": "{\n\"output\": \"(define (problem Browse_internet)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office desk walllamp mouse keyboard powersocket cpuscreen doorjamb bedroom chair mousepad computer wall floor - object\\n)\\n(:init\\n(obj_inside powersocket home_office)\\n(obj_next_to cpuscreen mousepad)\\n(obj_next_to wall powersocket)\\n(surfaces chair)\\n(obj_next_to cpuscreen floor)\\n(movable mousepad)\\n(obj_next_to keyboard computer)\\n(obj_next_to doorjamb walllamp)\\n(plugged_out computer)\\n(obj_next_to computer cpuscreen)\\n(has_plug keyboard)\\n(obj_next_to mouse powersocket)\\n(obj_next_to mousepad doorjamb)\\n(sittable chair)\\n(obj_next_to floor computer)\\n(obj_next_to mousepad wall)\\n(obj_next_to computer doorjamb)\\n(obj_next_to walllamp floor)\\n(obj_ontop mousepad desk)\\n(inside_room chair bedroom)\\n(facing floor computer)\\n(obj_next_to mouse chair)\\n(obj_inside wall home_office)\\n(obj_next_to floor powersocket)\\n(inside_room mouse bedroom)\\n(obj_next_to computer floor)\\n(obj_ontop mouse desk)\\n(obj_next_to computer wall)\\n(movable mouse)\\n(obj_next_to wall mousepad)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to chair computer)\\n(obj_next_to chair mouse)\\n(obj_next_to wall cpuscreen)\\n(surfaces floor)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(obj_next_to wall mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(inside_room mousepad bedroom)\\n(obj_ontop doorjamb floor)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to doorjamb wall)\\n(obj_next_to wall doorjamb)\\n(obj_next_to chair walllamp)\\n(obj_next_to floor mouse)\\n(obj_next_to mousepad keyboard)\\n(obj_inside walllamp home_office)\\n(obj_next_to desk doorjamb)\\n(obj_inside floor home_office)\\n(obj_next_to cpuscreen desk)\\n(obj_next_to walllamp keyboard)\\n(obj_inside doorjamb home_office)\\n(obj_next_to mousepad powersocket)\\n(facing wall computer)\\n(inside_room doorjamb bedroom)\\n(obj_next_to floor mousepad)\\n(lookable computer)\\n(obj_next_to cpuscreen computer)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to wall keyboard)\\n(obj_next_to desk computer)\\n(obj_inside desk home_office)\\n(obj_next_to desk walllamp)\\n(obj_next_to computer desk)\\n(inside character bedroom)\\n(obj_next_to desk wall)\\n(obj_next_to computer mousepad)\\n(obj_inside chair home_office)\\n(facing walllamp computer)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad floor)\\n(obj_next_to mousepad desk)\\n(inside_room wall bedroom)\\n(obj_next_to keyboard floor)\\n(obj_next_to walllamp chair)\\n(grabbable mouse)\\n(obj_next_to doorjamb computer)\\n(obj_next_to mouse wall)\\n(obj_next_to computer chair)\\n(obj_next_to mouse desk)\\n(obj_next_to desk floor)\\n(obj_next_to keyboard mouse)\\n(obj_inside keyboard home_office)\\n(obj_inside mousepad home_office)\\n(obj_next_to walllamp desk)\\n(obj_next_to chair floor)\\n(inside_room floor bedroom)\\n(obj_next_to mouse floor)\\n(grabbable chair)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to powersocket wall)\\n(obj_next_to floor floor)\\n(obj_next_to doorjamb mousepad)\\n(obj_next_to walllamp wall)\\n(obj_next_to wall walllamp)\\n(obj_next_to doorjamb desk)\\n(obj_next_to computer mouse)\\n(obj_next_to floor keyboard)\\n(obj_next_to desk powersocket)\\n(obj_next_to wall floor)\\n(obj_inside computer home_office)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_next_to wall chair)\\n(inside_room desk bedroom)\\n(obj_next_to mousepad chair)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to chair mousepad)\\n(obj_next_to powersocket doorjamb)\\n(obj_next_to floor wall)\\n(obj_inside mouse home_office)\\n(obj_next_to mousepad computer)\\n(obj_next_to powersocket mousepad)\\n(obj_next_to wall computer)\\n(obj_next_to powersocket floor)\\n(obj_next_to mouse doorjamb)\\n(surfaces desk)\\n(obj_next_to computer keyboard)\\n(facing chair computer)\\n(obj_next_to floor walllamp)\\n(movable chair)\\n(obj_next_to desk mouse)\\n(obj_next_to wall wall)\\n(obj_next_to floor desk)\\n(obj_next_to walllamp doorjamb)\\n(obj_next_to desk chair)\\n(has_switch computer)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(obj_next_to powersocket desk)\\n(obj_next_to powersocket mouse)\\n(grabbable keyboard)\\n(inside_room cpuscreen bedroom)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to chair desk)\\n(obj_next_to mouse computer)\\n(obj_ontop desk floor)\\n(obj_next_to doorjamb floor)\\n(obj_next_to computer powersocket)\\n(obj_next_to floor doorjamb)\\n(obj_next_to wall desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to cpuscreen wall)\\n(obj_next_to chair wall)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to doorjamb mouse)\\n(obj_next_to powersocket computer)\\n(obj_next_to keyboard wall)\\n(clean computer)\\n(obj_next_to mouse cpuscreen)\\n(off computer)\\n(obj_next_to floor cpuscreen)\\n(inside_room keyboard bedroom)\\n(facing doorjamb computer)\\n(obj_next_to floor chair)\\n(obj_next_to keyboard walllamp)\\n(inside_room computer bedroom)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(on computer)\\n(inside character home_office)\\n(facing character computer)\\n(holds_rh character mouse)\\n(holds_lh character keyboard)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room ?obj bedroom) (not (next_to ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (inside character bedroom)) (inside_room character ?obj))\\n)\\n(:action walk_into\\n:parameters (?char - character ?room - object)\\n:precondition (and (inside character bedroom) (not (= ?room bedroom)))\\n:effect (and (inside character ?room) (not (inside character bedroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (not (on ?obj)))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n    (not (inside ?char ?room)) for ?room in (:objects (type room)))\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (not (next_to ?char ?other_obj)) for ?other_obj in (:objects (type object)) where (= ?other_obj ?obj)\\n  )\\n) \\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n    (inside_room ?room ?room)\\n    (not (inside ?char ?room))\\n  )\\n  :effect (inside ?char ?room)\\n) \\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (on ?obj))\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n) \\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (not (holds_lh ?char ?obj))\\n    (not (holds_rh ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (when (not (ontop ?obj ?other_obj)) for ?other_obj in (:objects (type object)) (ontop ?char ?obj))\\n    (when (holds_lh ?char ?other_obj)) (not (holds_lh ?char ?other_obj))) for ?other_obj in (:objects (type object))\\n    (when (holds_rh ?char ?other_obj)) (not (holds_rh ?char ?other_obj))) for ?other_obj in (:objects (type object))\\n  )\\n) \\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (facing ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n  :effect (facing ?char ?obj)\\n) \\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n    (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\"}"
    },
    {
        "identifier": "1070_1",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (inside_room ?obj ?room))\\n:effect (and (next_to ?char ?obj) (inside_room ?char ?room))\\n)\"}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{\n\"output\": \"(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (grabbable ?obj) (next_to ?char ?obj)) \\n:effect (and (holds_lh ?char ?obj)) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?obj1 ?obj2)) \\n:effect (and (next_to ?char ?obj) (not (next_to ?obj1 ?obj2))))\"}"
    },
    {
        "identifier": "689_1",
        "llm_output": "{\n\"output\": \n\"(**:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_lh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj ?char) (not (next_to ?obj ?char)))\\n:effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "718_1",
        "llm_output": "{\n\"output\": \"(define (problem Wash_teeth)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom dining_room tooth_paste toothbrush - object\\n)\\n(:init\\n(obj_next_to tooth_paste toothbrush)\\n(obj_next_to toothbrush tooth_paste)\\n(inside_room toothbrush bathroom)\\n(inside character dining_room)\\n(movable tooth_paste)\\n(grabbable tooth_paste)\\n(cream tooth_paste)\\n(pourable tooth_paste)\\n(movable toothbrush)\\n(can_open tooth_paste)\\n(recipient toothbrush)\\n(inside_room tooth_paste bathroom)\\n(grabbable toothbrush)\\n)\\n(:goal\\n(and\\n(holds_lh character toothbrush)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (inside ?char ?room))\\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room)) (inside ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) ) \\n:effect ( and ( not ( inside ?char ?room ) ) ( next_to ?char ?obj ) ) ) \\n\\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) ) \\n:effect ( and ( on ?obj ) ( when ( plugged_in ?obj ) ( not ( plugged_in ?obj ) ) ) ) ) \"}"
    },
    {
        "identifier": "113_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (when (off ?obj) (not (off ?obj)))\\n    (when (on ?obj) (not (on ?obj)))\\n  )\\n)\"}"
    },
    {
        "identifier": "161_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dining_room stereo - object\\n)\\n(:init\\n(plugged_in stereo)\\n(obj_inside stereo home_office)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(inside character dining_room)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (next_to stereo home_office))\\n:effect (and (inside character home_office) (not (inside character dining_room)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (next_to character stereo))\\n:effect (and (on stereo) (not (off stereo)) (closed stereo))\\n)\"}"
    },
    {
        "identifier": "173_1",
        "llm_output": "{\n\"output\": \"( :action plug_in \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( has_plug ?obj ) ( pluggable_out ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( plugged_in ?obj ) ( when ( pluggable_in ?obj ) ( not ( pluggable_out ?obj ) ) ) ) \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ( when ( off ?obj ) ( not ( on ?obj ) ) ) ) \\n) \\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?room1 ?room2 ) ( inside ?char ?room1 ) ) \\n:effect ( and ( inside ?char ?room2 ) ( when ( inside ?char ?room1 ) ( not ( inside ?char ?room1 ) ) ) ) \\n) \\n( :action standup \\n:parameters ( ?char - character ) \\n:precondition ( sitting ?char ) \\n:effect ( and ( standing ?char ) ( when ( sitting ?char ) ( not ( sitting ?char ) ) ) ) \\n) \"}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office stereo - object\\n)\\n(:init\\n(plugged_in stereo)\\n(obj_inside stereo home_office)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(inside character bathroom)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (not (same_room ?obj ?room)))\\n:effect (and (inside ?char (obj_inside ?obj ?room)) (not (inside ?char ?room)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "263_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office stereo - object\\n)\\n(:init\\n(plugged_in stereo)\\n(obj_inside stereo home_office)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(inside character bathroom)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (not (next_to ?char ?obj)) (not (equal ?room ?obj)))\\n:effect (and (inside ?char ?room) (not (inside ?char bathroom)) (next_to ?char ?obj))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "305_2",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom desk mouse keyboard light cpuscreen stereo bedroom chair mousepad - object\\n)\\n(:init\\n(obj_next_to stereo chair)\\n(obj_next_to cpuscreen mousepad)\\n(surfaces chair)\\n(has_plug light)\\n(movable mousepad)\\n(inside_room light bedroom)\\n(has_plug keyboard)\\n(sittable chair)\\n(has_plug stereo)\\n(obj_next_to light chair)\\n(obj_ontop mousepad desk)\\n(clean light)\\n(inside_room chair bedroom)\\n(obj_next_to mouse chair)\\n(obj_next_to stereo desk)\\n(inside_room mouse bedroom)\\n(obj_ontop mouse desk)\\n(movable mouse)\\n(movable stereo)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to light cpuscreen)\\n(obj_next_to chair mouse)\\n(obj_next_to chair keyboard)\\n(obj_next_to mousepad mouse)\\n(inside_room light bathroom)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(inside_room stereo bedroom)\\n(inside_room mousepad bedroom)\\n(obj_next_to mouse mousepad)\\n(obj_ontop keyboard desk)\\n(obj_next_to light light)\\n(obj_next_to cpuscreen mouse)\\n(obj_next_to mousepad keyboard)\\n(surfaces stereo)\\n(plugged_in stereo)\\n(obj_next_to light desk)\\n(obj_next_to cpuscreen desk)\\n(obj_next_to chair light)\\n(obj_next_to cpuscreen light)\\n(obj_next_to desk light)\\n(clean stereo)\\n(has_switch stereo)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to desk stereo)\\n(obj_next_to desk mousepad)\\n(obj_next_to mousepad desk)\\n(grabbable mouse)\\n(can_open stereo)\\n(plugged_in light)\\n(obj_next_to mouse desk)\\n(obj_next_to keyboard mouse)\\n(off stereo)\\n(grabbable chair)\\n(closed stereo)\\n(obj_next_to cpuscreen chair)\\n(obj_next_to keyboard light)\\n(grabbable stereo)\\n(inside character bathroom)\\n(off light)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(inside_room desk bedroom)\\n(obj_next_to keyboard cpuscreen)\\n(obj_next_to mousepad chair)\\n(obj_next_to chair mousepad)\\n(has_switch light)\\n(surfaces desk)\\n(obj_next_to desk mouse)\\n(movable chair)\\n(obj_next_to desk chair)\\n(obj_next_to chair cpuscreen)\\n(obj_next_to keyboard chair)\\n(grabbable keyboard)\\n(inside_room cpuscreen bedroom)\\n(obj_next_to desk cpuscreen)\\n(obj_next_to chair desk)\\n(obj_next_to mouse keyboard)\\n(has_plug mouse)\\n(obj_next_to chair stereo)\\n(obj_next_to mouse cpuscreen)\\n(inside_room keyboard bedroom)\\n(obj_next_to light keyboard)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside_room ?obj bedroom) (inside_room character bedroom) (not (obj_next_to ?char ?obj)))\\n :effect (obj_next_to ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (not (on ?obj)))\\n :effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nmusic_stand home_office remote_control bedroom chair computer dvd_player - object\\n)\\n(:init\\n(grabbable remote_control)\\n(surfaces music_stand)\\n(clean dvd_player)\\n(surfaces chair)\\n(obj_next_to dvd_player music_stand)\\n(obj_next_to chair music_stand)\\n(can_open music_stand)\\n(obj_next_to music_stand chair)\\n(can_open dvd_player)\\n(plugged_in dvd_player)\\n(facing chair computer)\\n(closed dvd_player)\\n(movable chair)\\n(movable remote_control)\\n(obj_next_to computer chair)\\n(sittable chair)\\n(containers music_stand)\\n(has_switch computer)\\n(off dvd_player)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(obj_inside music_stand home_office)\\n(grabbable dvd_player)\\n(obj_next_to music_stand dvd_player)\\n(inside_room chair bedroom)\\n(grabbable chair)\\n(obj_next_to remote_control music_stand)\\n(lookable computer)\\n(surfaces dvd_player)\\n(obj_next_to music_stand remote_control)\\n(has_plug dvd_player)\\n(movable dvd_player)\\n(has_switch dvd_player)\\n(obj_inside computer home_office)\\n(inside character bedroom)\\n(inside_room computer bedroom)\\n(obj_inside chair home_office)\\n(obj_next_to chair computer)\\n(obj_inside dvd_player home_office)\\n(movable music_stand)\\n)\\n(:goal\\n(and\\n(closed dvd_player)\\n(on dvd_player)\\n(plugged_in dvd_player)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room ?obj bedroom) (not (next_to ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (inside character bedroom)) (inside_room character kitchen))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (not (on ?obj)))\\n:effect (and (on ?obj) (not (has_switch ?obj))))\"}"
    },
    {
        "identifier": "385_2",
        "llm_output": "{\n\"output\": \"( :action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (when (off ?obj) (not (off ?obj)))\\n    (when (on ?obj) (not (on ?obj)))\\n  )\\n)\"}"
    },
    {
        "identifier": "403_1",
        "llm_output": "{\n\"output\": \n\"(**:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character ?room) (inside_room ?room ?obj) (not (= ?room ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "415_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (not (holds_rh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (not (next_to ?char ?obj)) (movable ?char))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj) (not (on_char ?obj ?char)))\\n  :effect (and (on_char ?obj ?char) (not (holds_rh ?char ?obj))))\"}"
    },
    {
        "identifier": "462_2",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom stereo headset bedroom chair - object\\n)\\n(:init\\n(obj_next_to stereo chair)\\n(grabbable headset)\\n(surfaces chair)\\n(can_open stereo)\\n(inside_room stereo bedroom)\\n(movable chair)\\n(sittable chair)\\n(has_plug stereo)\\n(off stereo)\\n(surfaces stereo)\\n(plugged_in stereo)\\n(inside_room chair bedroom)\\n(obj_next_to chair stereo)\\n(movable headset)\\n(grabbable chair)\\n(obj_next_to headset stereo)\\n(closed stereo)\\n(inside_room headset bedroom)\\n(has_switch stereo)\\n(clean stereo)\\n(obj_next_to stereo headset)\\n(grabbable stereo)\\n(inside character bathroom)\\n(movable stereo)\\n(clothes headset)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition ()\\n :effect (and (inside ?char bedroom))\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char bedroom) (next_to ?char ?obj))\\n :effect (and (not (off ?obj)) (not (on ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "463_2",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office stereo - object\\n)\\n(:init\\n(inside_room stereo bedroom)\\n(plugged_in stereo)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(inside character home_office)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character home_office) (inside_room stereo home_office))\\n:effect (next_to ?char stereo)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char stereo) (off stereo))\\n:effect (and (on stereo) (not (off stereo)) (when (closed stereo) (not (closed stereo))))\\n)\\n)\"}"
    },
    {
        "identifier": "503_2",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ) \\n:effect () \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( off ?obj ) ( has_switch ?obj ) ) \\n:effect ( not ( off ?obj ) ) \\n) \"}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office phone dining_room headset - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(inside_room phone dining_room)\\n(grabbable headset)\\n(obj_next_to headset phone)\\n(grabbable phone)\\n(has_plug phone)\\n(movable headset)\\n(obj_next_to phone headset)\\n(has_switch phone)\\n(inside character dining_room)\\n(clothes headset)\\n(obj_inside headset home_office)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(on_char headset character)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (inside ?char ?room) (different_room ?room ?dest_room) (obj_inside ?dest ?dest_room))\\n:effect (and (inside ?char ?dest_room) (not (inside ?char ?room)))\\n)\\n(:action put_on_character\\n:parameters (?char - character ?obj - object)\\n:precondition (and (holds_rh ?char ?obj) (wearable ?obj))\\n:effect (and (on ?obj) (on_char ?obj ?char) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n)\"}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office stereo - object\\n)\\n(:init\\n(plugged_in stereo)\\n(obj_inside stereo home_office)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(inside character bedroom)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char bedroom) (next_to bedroom home_office))\\n:effect (and (inside ?char home_office) (not (inside ?char bedroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char home_office) (next_to ?char stereo) (has_switch stereo))\\n:effect (and (on stereo) (not (off stereo)) (facing ?char stereo))\\n)\"}"
    },
    {
        "identifier": "773_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nstereo - object\\n) \\n(:init\\n(plugged_in stereo)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n) \\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n) \\n)\\n)\\n\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition ()\\n :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj))\\n :effect (and (not (off ?obj)) (on ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "910_2",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office stereo - object\\n)\\n(:init\\n(plugged_in stereo)\\n(obj_inside stereo home_office)\\n(has_plug stereo)\\n(has_switch stereo)\\n(grabbable stereo)\\n(inside character bedroom)\\n(off stereo)\\n(movable stereo)\\n(closed stereo)\\n(surfaces stereo)\\n(clean stereo)\\n(can_open stereo)\\n)\\n(:goal\\n(and\\n(closed stereo)\\n(on stereo)\\n(plugged_in stereo)\\n)\\n) \\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room - object) (not (= ?room ?obj)))\\n:effect (and (inside ?char ?obj) (not (inside ?char ?room)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n:effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "953_1",
        "llm_output": "{\n\"output\": \"(define (problem Listen_to_music)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nmusic_stand bathroom home_office cd_player - object\\n)\\n(:init\\n(surfaces music_stand)\\n(obj_next_to music_stand cd_player)\\n(obj_next_to cd_player music_stand)\\n(can_open music_stand)\\n(movable cd_player)\\n(containers music_stand)\\n(can_open cd_player)\\n(has_switch cd_player)\\n(obj_inside music_stand home_office)\\n(closed cd_player)\\n(clean cd_player)\\n(off cd_player)\\n(obj_inside cd_player home_office)\\n(plugged_in cd_player)\\n(grabbable cd_player)\\n(inside character bathroom)\\n(surfaces cd_player)\\n(has_plug cd_player)\\n(movable music_stand)\\n)\\n(:goal\\n(and\\n(closed cd_player)\\n(on cd_player)\\n(plugged_in cd_player)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bathroom) (next_to ?obj bathroom))\\n:effect (and (inside character ?obj) (not (inside character bathroom)))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (not (on ?obj)))\\n:effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office hair couch remote_control bedroom television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_next_to couch remote_control)\\n(clean television)\\n(surfaces couch)\\n(body_part hair)\\n(obj_inside couch home_office)\\n(movable remote_control)\\n(lieable couch)\\n(movable hair)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(lookable television)\\n(obj_next_to remote_control couch)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(movable couch)\\n(cuttable hair)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(grabbable hair)\\n(inside character bedroom)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room))\\n:effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n:effect (on ?obj)\\n)}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) ) \\n:effect ( and ( not ( inside ?char ?room ) ) ( next_to ?char ?obj ) ) ) \\n(\\n :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) ) \\n:effect ( facing ?char ?obj ) ) \\n(\\n :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( not ( on ?obj ) ) ) ) \\n:effect ( on ?obj ) ) \"}"
    },
    {
        "identifier": "134_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (hold_rh ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ) \\n:effect ( and ( next_to ?obj ?char ) ) \\n) \\n(\\n :action turn_to\\n :parameters ( ?char - character ?obj - object )\\n :precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj ) ) \\n:effect ( and ( facing ?char ?obj ) ) \\n) \\n(\\n :action switch_on\\n :parameters ( ?char - character ?obj - object )\\n :precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ) \\n)\\n\"}"
    },
    {
        "identifier": "197_2",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office remote_control electrical_outlet bedroom chair television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_next_to chair remote_control)\\n(surfaces chair)\\n(clean television)\\n(obj_next_to television remote_control)\\n(clean electrical_outlet)\\n(obj_next_to electrical_outlet remote_control)\\n(movable chair)\\n(movable remote_control)\\n(obj_next_to chair television)\\n(obj_next_to chair electrical_outlet)\\n(obj_next_to remote_control television)\\n(sittable chair)\\n(plugged_in television)\\n(obj_inside electrical_outlet home_office)\\n(obj_next_to television chair)\\n(lookable television)\\n(has_switch electrical_outlet)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(obj_next_to electrical_outlet chair)\\n(off television)\\n(obj_next_to remote_control electrical_outlet)\\n(inside_room chair bedroom)\\n(grabbable chair)\\n(obj_next_to remote_control chair)\\n(off electrical_outlet)\\n(has_switch television)\\n(inside character bedroom)\\n(obj_inside television home_office)\\n(obj_inside chair home_office)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character bedroom) (obj_inside ?obj bedroom) (not (obj_next_to ?char ?obj)))\\n :effect (and (obj_next_to ?char ?obj) (not (inside character bedroom)) (inside character bedroom))\\n)\\n(:action turn_to\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character bedroom) (obj_inside ?obj bedroom) (obj_next_to ?char ?obj))\\n :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character bedroom) (obj_inside ?obj bedroom) (obj_next_to ?char ?obj) (has_switch ?obj) (not (on ?obj)))\\n :effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "21_2",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch remote_control table television dining_room - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_next_to couch remote_control)\\n(clean television)\\n(surfaces couch)\\n(surfaces table)\\n(inside_room television dining_room)\\n(obj_inside couch home_office)\\n(obj_next_to television table)\\n(obj_ontop remote_control table)\\n(movable remote_control)\\n(lieable couch)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(lookable television)\\n(obj_next_to remote_control couch)\\n(movable table)\\n(obj_next_to table television)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(inside character dining_room)\\n(movable couch)\\n(obj_next_to table couch)\\n(facing couch television)\\n(sittable couch)\\n(inside_room table dining_room)\\n(has_switch television)\\n(obj_inside table home_office)\\n(obj_inside television home_office)\\n(obj_next_to couch table)\\n(obj_inside table couch)\\n(obj_next_to television couch)\\n(facing table television)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside character dining_room) (inside character home_office))\\n :effect (and (when (and (inside character dining_room) (inside room dining_room)) (inside character dining_room)) (when (and (inside character home_office) (inside room home_office)) (inside character home_office)))\\n)\\n(:action turn_to\\n :parameters (?char - character ?obj - object)\\n :precondition (and (facing character television) (inside character dining_room))\\n :effect (facing character television)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch television) (inside character dining_room) (next_to character television))\\n :effect (on television)\\n)\\n)\"}"
    },
    {
        "identifier": "225_2",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch remote_control coffee_table bedroom television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_next_to couch remote_control)\\n(clean television)\\n(surfaces couch)\\n(obj_inside couch home_office)\\n(movable remote_control)\\n(obj_next_to couch coffee_table)\\n(movable coffee_table)\\n(lieable couch)\\n(obj_next_to coffee_table couch)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(obj_ontop remote_control coffee_table)\\n(lookable television)\\n(obj_next_to remote_control couch)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(movable couch)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(surfaces coffee_table)\\n(inside character bedroom)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n(obj_inside coffee_table home_office)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (inside ?char ?room - object) (obj_inside ?obj ?room))\\n :effect (and (inside ?char ?room) (not (inside ?char bedroom)))\\n)\\n(:action turn_to\\n :parameters (?char - character ?obj - object)\\n :precondition (and (facing ?char ?obj1 - object) (not (equal ?obj ?obj1)))\\n :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n :parameters (?char - character ?obj - object)\\n :precondition (and (has_switch ?obj) (off ?obj))\\n :effect (on ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "259_1",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside character ?room - object ) ( inside ?obj ?room ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( facing ?char ?obj1 - object ) ) ) ) \\n( :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj1 - object ) ) ) \\n:effect ( and ( facing ?char ?obj ) ) ) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( ontop ?char ?obj ) ) ) \\n:effect ( and ( on ?obj ) ) )\"}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside character dining_room)\\n    (inside character home_office)\\n    (obj_inside television home_office)\\n    (obj_next_to television couch)\\n    (obj_next_to couch television)\\n  )\\n  :effect (and\\n    (when (and (inside character dining_room) (not (obj_next_to ?char ?obj))) (obj_next_to ?char ?obj))\\n    (when (and (inside character home_office) (not (obj_next_to ?char ?obj))) (obj_next_to ?char ?obj))\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (facing couch television)\\n    (facing character couch)\\n  )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "329_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside ?char ?room ) ) ) ) \\n(\\n :action turn_to \\n :parameters ( ?char - character ?obj - object ) \\n :precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj ) ) ) \\n :effect ( facing ?char ?obj ) ) \\n(\\n :action switch_on \\n :parameters ( ?char - character ?obj - object ) \\n :precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( movable ?obj ) ( off ?obj ) ) ) \\n :effect ( on ?obj ) ) \"}"
    },
    {
        "identifier": "342_2",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch remote_control television dining_room - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(clean television)\\n(surfaces couch)\\n(obj_next_to television remote_control)\\n(inside_room television dining_room)\\n(obj_inside couch home_office)\\n(movable remote_control)\\n(obj_next_to remote_control television)\\n(lieable couch)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(lookable television)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(inside character dining_room)\\n(movable couch)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character dining_room) (inside character home_office))\\n:effect (and (inside character home_office) (next_to character television))\\n)\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to character television)\\n:effect (facing character television)\\n)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch television) (next_to character television) (grabbable remote_control))\\n:effect (on television)\\n)\\n)\"}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside character dining_room)\\n    (inside_room television dining_room)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "383_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (not (inside ?char ?room))\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (when (plugged_in ?obj) (plugged_in ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "411_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) \\n:effect ( and ( when ( inside ?char ?room ) ( not ( inside ?char ?room ) ) ) ( next_to ?char ?obj ) ) ) \\n) \\n( :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) \\n:effect ( facing ?char ?obj ) ) \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( not ( on ?obj ) ) ) \\n:effect ( and ( on ?obj ) ( when ( off ?obj ) ( not ( off ?obj ) ) ) ) \\n) \"}"
    },
    {
        "identifier": "454_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room - object)\\n    (obj_inside ?obj ?room)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (when (off ?obj) (not (off ?obj)))\\n  )\\n)\"}"
    },
    {
        "identifier": "459_1",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside character ?room - object ) ( inside ?obj ?room ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( facing ?char ?obj1 - object ) ) ) ) \\n( :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj1 - object ) ) ) \\n:effect ( and ( facing ?char ?obj ) ) ) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( ontop ?char ?obj ) ) ) \\n:effect ( and ( on ?obj ) ) )\"}"
    },
    {
        "identifier": "548_2",
        "llm_output": "{\n\"output\": \"(define (problem Watch_TV)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nremote_control television - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_switch television)\\n(has_plug television)\\n(plugged_in television)\\n(off television)\\n(clean television)\\n(lookable television)\\n(has_switch remote_control)\\n(movable remote_control)\\n)\\n(:goal\\n(and\\n(on television)\\n(plugged_in television)\\n(facing character television)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj))\\n:effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (movable ?obj))\\n:effect (on ?obj)\\n) \"}"
    },
    {
        "identifier": "595_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) \\n:effect ( and ( next_to ?char ?obj ) ) \\n) \\n( :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) \\n:effect ( facing ?char ?obj ) \\n) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( not ( on ?obj ) ) ) \\n:effect ( and ( on ?obj ) ) \\n) \\n\"}"
    },
    {
        "identifier": "684_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside character dining_room)\\n    (inside_room television dining_room)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "74_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) ) \\n:effect ( and ( not ( inside ?char ?room ) ) ( next_to ?char ?obj ) ) ) \\n(\\n :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) ) \\n:effect ( facing ?char ?obj ) ) \\n(\\n :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( not ( on ?obj ) ) ) ) \\n:effect ( on ?obj ) ) \"}"
    },
    {
        "identifier": "806_1",
        "llm_output": "{\n\"output\": \n\"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside character ?room - object ) ( inside ?obj ?room ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( facing ?char ?obj1 - object ) ) ) ) \\n( :action turn_to \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj1 - object ) ) ) \\n:effect ( and ( facing ?char ?obj ) ) ) \\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( ontop ?char ?obj ) ) ) \\n:effect ( and ( on ?obj ) ) )\"}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside ?char ?room ) ) ) ) \\n(\\n:action turn_to\\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( next_to ?char ?obj ) ( facing ?char ?obj ) ) )\\n:effect ( facing ?char ?obj ) ) \\n(\\n:action switch_on\\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( movable ?obj ) ( off ?obj ) ) )\\n:effect ( and ( on ?obj ) ( when ( plugged_in ?obj ) ( not ( plugged_in ?obj ) ) ) ) ) \"}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (next_to bedroom ?obj) (not (inside ?char ?obj)))\\n  :effect (and (inside ?char ?obj) (not (inside ?char bedroom)) (next_to ?obj dining_room))\\n)\"}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?dest - object)\\n  :precondition (and (inside character ?room) (inside ?dest ?room) (not (next_to ?char ?dest)))\\n  :effect (and (next_to ?char ?dest) (not (inside character ?room)) (inside character ?dest))\\n)\"}"
    },
    {
        "identifier": "171_2",
        "llm_output": "{\n\"output\": \"( :action open \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( closed ?obj ) ( next_to ?char ?obj ) ( can_open ?obj ) )\\n:effect ( not ( closed ?obj ) ) \\n)\\n( :action grab \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( next_to ?char ?obj ) ( grabbable ?obj ) )\\n:effect ( holds_rh ?char ?obj ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( next_to ?obj1 - object ?char ) ( next_to ?obj2 - object ?obj1 ) ( different ?obj1 ?obj2 ?obj ) )\\n:effect ( and ( not ( next_to ?char ?obj1 ) ) ( not ( next_to ?obj1 ?char ) ) ( next_to ?char ?obj2 ) ( next_to ?obj2 ?char ) ) \\n)\"}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n\\n::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj ?char) (not (inside ?char ?room)) (forall (?room - object) (not (inside ?char ?room))))\\n:effect (and (inside ?char ?obj) (not (next_to ?obj ?char)) (not (forall (?room - object) (inside ?char ?room))))\"}"
    },
    {
        "identifier": "181_2",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( grabbable ?obj ) ) ) \\n) \\n(:action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?obj1 ?obj2 ) ( inside_room ?char ?obj1 ) ( inside_room ?obj2 ?obj3 ) ( not ( inside_room ?char ?obj2 ) ) ) \\n:effect ( and ( inside_room ?char ?obj2 ) ( not ( next_to ?obj1 ?obj2 ) ) ( not ( inside_room ?char ?obj1 ) ) ) \\n) \"}"
    },
    {
        "identifier": "26_1",
        "llm_output": "{\n\"output\": \n\"(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (not (next_to ?char ?dest)) (not (equal ?dest ?char)))\\n:effect (and (next_to ?char ?dest) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\"}"
    },
    {
        "identifier": "286_2",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (not (on ?obj))) \\n:effect (not (closed ?obj)) \\n)\\n(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))) \\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj))) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?room))) \\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?other_obj))) \\n)\"}"
    },
    {
        "identifier": "291_1",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(::action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (not (next_to ?char ?dest)) (inside character ?room))\\n:effect (and (inside character ?room) (next_to ?char ?dest))\\n)\"}"
    },
    {
        "identifier": "317_2",
        "llm_output": "{\n\"output\": \"( :action open \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( closed ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( not ( closed ?obj ) ) \\n)\\n( :action grab \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( holds_rh ?char ?obj ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( inside ?char ?room ) ( inside ?obj ?room ) ) \\n:effect ( next_to ?char ?obj ) \\n)\"}"
    },
    {
        "identifier": "488_2",
        "llm_output": "{\n\"output\": \"(define (problem Drink)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ncup water sink bedroom dining_room - object\\n)\\n(:init\\n(recipient sink)\\n(inside_room sink dining_room)\\n(containers sink)\\n(inside_room water dining_room)\\n(obj_ontop water sink)\\n(recipient cup)\\n(inside character bedroom)\\n(movable cup)\\n(drinkable water)\\n(inside_room cup dining_room)\\n(pourable cup)\\n(pourable water)\\n(grabbable cup)\\n)\\n(:goal\\n(and\\n(holds_rh character cup)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (inside ?char ?room) (inside_room ?dest ?room) (not (= ?dest ?room)))\\n:effect (and (inside ?char (inside_room ?dest)) (not (inside ?char (inside_room ?dest))))\\n)\"}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{\n\"output\": \"(define (problem Drink)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office dining_room water drinking_glass - object\\n)\\n(:init\\n(inside_room water dining_room)\\n(pourable drinking_glass)\\n(drinkable water)\\n(grabbable drinking_glass)\\n(inside character home_office)\\n(movable drinking_glass)\\n(obj_next_to drinking_glass water)\\n(obj_next_to water drinking_glass)\\n(inside_room drinking_glass dining_room)\\n(pourable water)\\n(recipient drinking_glass)\\n)\\n(:goal\\n(and\\n(holds_rh character drinking_glass)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_rh ?char ?obj) )\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside_room ?obj ?room) (inside_room ?char ?room) )\\n:effect (and (next_to ?char ?obj) )\\n)\\n)\"}"
    },
    {
        "identifier": "528_1",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (has_switch ?obj)) \\n:effect (not (closed ?obj)) \\n)\\n(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?char ?obj) (grabbable ?obj)) \\n:effect (holds_rh ?char ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (next_to ?char ?obj) \\n:effect (next_to ?char ?obj) \\n)\"}"
    },
    {
        "identifier": "532_1",
        "llm_output": "{\n\"output\": \n\"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( holds_rh ?char ?obj ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?obj1 ?obj2 ) ( next_to ?obj3 ?obj4 ) ( next_to ?char ?obj5 ) ( not ( next_to ?char ?obj ) ) ) \\n:effect ( and ( not ( next_to ?obj1 ?obj2 ) ) ( not ( next_to ?obj3 ?obj4 ) ) ( not ( next_to ?char ?obj5 ) ) ( next_to ?char ?obj ) ) \\n)\"}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{\n\"output\": \n\"(**:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?room - object)\\n:precondition (and (inside ?char ?room1) (obj_next_to ?room1 ?room))\\n:effect (and (inside ?char ?room) (not (inside ?char ?room1))))\\n\"}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{\n\"output\": \"( :action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( can_open ?obj ) ( closed ?obj ) ) \\n:effect ( not ( closed ?obj ) ) ( not ( can_open ?obj ) ) ) \\n)\\n( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( not ( holds_rh ?char ?obj ) ) ( not ( holds_lh ?char ?obj ) ) ) \\n:effect ( when ( next_to ?char ?obj ) ( holds_rh ?char ?obj ) ) ( when ( next_to ?char ?obj ) ( holds_lh ?char ?obj ) ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room ) ( inside_room ?obj ?room ) ( not ( next_to ?char ?obj ) ) ) \\n:effect ( not ( inside ?char ?room ) ) ( next_to ?char ?obj ) ( not ( inside_room ?obj ?room ) ) ) \\n)\"}"
    },
    {
        "identifier": "662_1",
        "llm_output": "{\n\"output\": \"(define (problem Drink)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nwater_glass bedroom dining_room water - object\\n)\\n(:init\\n(inside_room water dining_room)\\n(inside character bedroom)\\n(pourable water_glass)\\n(movable water_glass)\\n(recipient water_glass)\\n(grabbable water_glass)\\n(inside_room water_glass dining_room)\\n(drinkable water)\\n(pourable water)\\n)\\n(:goal\\n(and\\n(holds_rh character water_glass)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room1) (inside_room ?obj ?room2) (obj_next_to ?room1 ?room2))\\n:effect (and (inside ?char ?room2) (not (inside ?char ?room1)) (next_to ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (not (inside ?char ?room)) (inside_room ?obj ?room))\\n  :effect (and (inside ?char ?room) (next_to ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "787_1",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( ontop ?obj ?char ) ) ( not ( inside ?char ?obj ) ) ) ) \\n) \\n(:action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( character ?char ) ( object ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside ?char ?obj ) ) ( when ( not ( next_to ?char ?obj ) ) ( not ( next_to ?char ?obj ) ) ) ) \\n)\"}"
    },
    {
        "identifier": "788_1",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (next_to ?char ?obj)) \\n:effect (not (closed ?obj)) \\n)\\n(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (grabbable ?obj) (next_to ?char ?obj)) \\n:effect (holds_rh ?char ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (next_to ?char ?obj) \\n:effect (next_to ?char ?obj) \\n)\"}"
    },
    {
        "identifier": "814_1",
        "llm_output": "{\n\"output\": \"( :action open \\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( closed ?obj ) ( next_to ?char ?obj ) ) )\\n:effect ( not ( closed ?obj ) ) \\n)\\n(\\n:action grab\\n:parameters ( ?char - character ?obj - object )\\n:precondition ( and ( next_to ?char ?obj ) ( grabbable ?obj ) ) )\\n:effect ( holds_rh ?char ?obj ) \\n)\\n(\\n:action walk_towards\\n:parameters ( ?char - character ?dest_room - object )\\n:precondition ( and ( inside ?char ?init_room ) ( obj_next_to ?init_room ?dest_room ) ) \\n:effect ( and ( inside ?char ?dest_room ) ( not ( inside ?char ?init_room ) ) ) \\n)\"}"
    },
    {
        "identifier": "850_2",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object) \\n:precondition (and (closed ?obj) (next_to ?char ?obj) (can_open ?obj)) \\n:effect (not (closed ?obj)) \\n)\\n(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (next_to ?char ?obj) (grabbable ?obj)) \\n:effect (holds_rh ?char ?obj) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition (next_to ?char ?obj) \\n:effect (next_to ?obj ?char) \\n)\"}"
    },
    {
        "identifier": "861_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?obj1 ?obj2) (not (next_to ?char ?obj))))\\n  :effect (and (next_to ?char ?obj) (not (next_to ?obj1 ?obj2))))\"}"
    },
    {
        "identifier": "878_2",
        "llm_output": "{\n\"output\": \"(define (problem Drink)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office water_glass water cupboard dining_room - object\\n)\\n(:init\\n(containers cupboard)\\n(obj_next_to cupboard water_glass)\\n(can_open cupboard)\\n(inside_room water dining_room)\\n(obj_inside water cupboard)\\n(inside_room cupboard dining_room)\\n(closed cupboard)\\n(movable water_glass)\\n(pourable water_glass)\\n(recipient water_glass)\\n(grabbable water_glass)\\n(inside_room water_glass dining_room)\\n(drinkable water)\\n(inside character home_office)\\n(obj_inside water_glass cupboard)\\n(clean cupboard)\\n(obj_next_to water_glass cupboard)\\n(pourable water)\\n)\\n(:goal\\n(and\\n(holds_rh character water_glass)\\n)\\n)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (next_to ?char ?obj))\\n:effect (not (closed ?obj))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (inside_room ?char ?room))\\n:effect (and (next_to ?char ?obj) (inside_room ?char ?room))\\n) \"}"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj))))\\n\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?room)))\\n:effect (and (next_to ?char ?obj) (not (inside ?char ?room))))\"}"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{\n\"output\": \"(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (grabbable ?obj) (next_to ?char ?obj)) \\n:effect (and (holds_rh ?char ?obj) (not (obj_ontop ?obj ?obj))) \\n) \\n(:action walk_towards \\n:parameters (?char - character ?dest - object) \\n:precondition (next_to ?char ?dest) \\n:effect (and (next_to ?char ?dest) (not (next_to ?char ?obj))) \\n) \\n\"}"
    },
    {
        "identifier": "15_2",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office address_book - object\\n)\\n(:init\\n(can_open address_book)\\n(grabbable address_book)\\n(readable address_book)\\n(inside character bathroom)\\n(has_paper address_book)\\n(cuttable address_book)\\n(obj_inside address_book home_office)\\n(movable address_book)\\n)\\n(:goal\\n(and\\n(holds_rh character address_book)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (inside ?char bathroom)) (inside ?char bathroom))\\n)\"}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom novel home_office computer chair - object\\n)\\n(:init\\n(surfaces chair)\\n(facing chair computer)\\n(readable novel)\\n(movable chair)\\n(obj_next_to novel chair)\\n(obj_next_to computer chair)\\n(sittable chair)\\n(has_switch computer)\\n(obj_inside novel home_office)\\n(has_paper novel)\\n(obj_next_to chair novel)\\n(movable novel)\\n(cuttable novel)\\n(grabbable chair)\\n(grabbable novel)\\n(lookable computer)\\n(can_open novel)\\n(obj_inside computer home_office)\\n(inside character bathroom)\\n(obj_inside chair home_office)\\n(obj_next_to chair computer)\\n)\\n(:goal\\n(and\\n(holds_rh character novel)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (not (next_to ?char ?dest)) (not (inside ?char ?destroom - object)) (obj_next_to ?dest ?destroom) )\\n:effect (and (next_to ?char ?dest) (inside ?char ?destroom) )\\n)\\n)\"}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{\n\"output\": \n\"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( holds_rh ?char ?obj ) ) ) \\n\\n:action walk_towards \\n:parameters ( ?char - character ?dest - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( not ( same_room ?dest ?obj ) ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( next_to ?char ?dest ) ( inside ?char ( room_of ?dest ) ) ) ) \"}"
    },
    {
        "identifier": "192_1",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ncouch novel - object\\n) \\n(:init\\n(obj_next_to couch novel)\\n(lieable couch)\\n(movable novel)\\n(cuttable novel)\\n(surfaces couch)\\n(has_paper novel)\\n(movable couch)\\n(grabbable novel)\\n(obj_next_to novel couch)\\n(readable novel)\\n(sittable couch)\\n(can_open novel)\\n)\\n(:goal\\n(and\\n(holds_rh character novel)\\n)\\n) \\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj) )\\n :effect (and (next_to ?char ?obj) (not (next_to ?obj ?char)))\\n)\\n)\"}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( next_to ?char ?obj ) ) ) \\n) \\n(\\n :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside ?char bedroom ) ) ) \\n) \\n\"}"
    },
    {
        "identifier": "221_2",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (on ?obj)))\\n\\n::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (= ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj))))\"}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom novel home_office - object\\n)\\n(:init\\n(movable novel)\\n(cuttable novel)\\n(obj_inside novel home_office)\\n(inside character bathroom)\\n(sitting character)\\n(has_paper novel)\\n(grabbable novel)\\n(readable novel)\\n(can_open novel)\\n)\\n(:goal\\n(and\\n(holds_rh character novel)\\n)\\n) \\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (= ?obj bathroom)) (or (inside ?char ?obj) (next_to ?char ?obj)))\\n:effect (and (inside ?char ?obj) (not (inside ?char bathroom)))\\n)\\n(:action standup\\n:parameters (?char - character)\\n:precondition (sitting ?char)\\n:effect (and (not (sitting ?char)) (not (lying ?char))))\\n)\"}"
    },
    {
        "identifier": "341_1",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nnovel home_office couch coffee_table spectacles cupboard plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(recipient plate)\\n(obj_next_to coffee_table novel)\\n(movable spectacles)\\n(obj_next_to novel coffee_table)\\n(surfaces couch)\\n(obj_next_to couch spectacles)\\n(grabbable spectacles)\\n(obj_inside couch home_office)\\n(obj_inside spectacles home_office)\\n(obj_next_to spectacles couch)\\n(readable novel)\\n(obj_next_to novel spectacles)\\n(obj_next_to couch coffee_table)\\n(grabbable plate)\\n(lieable couch)\\n(movable coffee_table)\\n(obj_next_to coffee_table couch)\\n(closed cupboard)\\n(obj_inside novel home_office)\\n(has_paper novel)\\n(clean cupboard)\\n(inside_room cupboard dining_room)\\n(surfaces plate)\\n(obj_inside novel cupboard)\\n(obj_next_to couch novel)\\n(containers cupboard)\\n(movable novel)\\n(can_open cupboard)\\n(obj_next_to spectacles novel)\\n(cuttable novel)\\n(inside character dining_room)\\n(movable couch)\\n(grabbable novel)\\n(obj_next_to novel couch)\\n(sittable couch)\\n(can_open novel)\\n(surfaces coffee_table)\\n(movable plate)\\n(clothes spectacles)\\n(obj_inside spectacles cupboard)\\n(obj_inside coffee_table home_office)\\n)\\n(:goal\\n(and\\n(holds_rh character novel)\\n(holds_lh character spectacles)\\n)\\n)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (can_open ?obj))\\n:effect (not (closed ?obj))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (and (holds_lh ?char ?obj) (not (grabbable ?obj))))\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (next_to ?char ?obj))\\n\"}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (next_to ?char ?dest) )\\n:effect (and (next_to ?char ?dest) (forall (?obj - object) (when (and (next_to ?char ?obj) (not (= ?obj ?dest))) (not (next_to ?char ?obj)))) )\\n)\"}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (on ?obj)))\\n\\n::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (= ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj))))\"}"
    },
    {
        "identifier": "508_2",
        "llm_output": "{\n\"output\": \n\"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( obj_inside ?obj home_office ) ) ( not ( inside ?char bedroom ) ) ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( obj_inside ?obj home_office ) ( inside ?char bedroom ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside ?char bedroom ) ) ) ) \\n)\"}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{\n\"output\": \"(:action grab \\n:parameters (?char - character ?obj - object) \\n:precondition (and (grabbable ?obj) (next_to ?char ?obj)) \\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj))) \\n)\\n(:action walk_towards \\n:parameters (?char - character ?dest - object) \\n:precondition (and (next_to ?char ?dest_1) (not (= ?dest ?dest_1))) \\n:effect (and (inside ?char ?dest) (not (inside ?char ?dest_1)) (not (next_to ?char ?dest_1))) \\n)\"}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{\n\"output\": \n\"(define (problem Read_book)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom couch home_office novel - object\\n)\\n    (:init\\n    (obj_next_to couch novel)\\n    (lieable couch)\\n    (movable novel)\\n    (cuttable novel)\\n    (surfaces couch)\\n    (obj_inside novel home_office)\\n    (inside character bathroom)\\n    (has_paper novel)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (grabbable novel)\\n    (obj_next_to novel couch)\\n    (readable novel)\\n    (sittable couch)\\n    (can_open novel)\\n)\\n    (:goal\\n    (and\\n        (holds_rh character novel)\\n    )\\n)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n  :effect (and (holds_rh ?char ?obj) )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) )\\n  :effect (and (inside ?char bathroom) (next_to ?char couch) )\\n)\"}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{\n\"output\": \n\"( :action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( closed ?obj ) ( next_to ?char ?obj ) ) ) \\n:effect ( not ( closed ?obj ) ) ) \\n\\n( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) ) \\n:effect ( holds_rh ?char ?obj ) ) \\n\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( next_to ?obj ?char ) ) )\"}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( holds_rh ?char ?obj ) ) ) \\n\\n:action walk_towards \\n:parameters ( ?char - character ?dest - object ) \\n:precondition ( and ( inside ?char ?room ) ( obj_inside ?dest ?room ) ) \\n:effect ( and ( not ( inside ?char ?room ) ) ( inside ?char ?dest ) ) )\"}"
    },
    {
        "identifier": "688_2",
        "llm_output": "{\n\"output\": \n\"::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (holds_lh ?char ?obj)))\\n\\n::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (= ?obj ?char)))\\n:effect (and (next_to ?char ?obj) (not (inside ?char bedroom)) (not (inside ?char ?obj))))\"}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom bedroom chair novel - object\\n)\\n(:init\\n(sittable chair)\\n(movable novel)\\n(surfaces chair)\\n(cuttable novel)\\n(inside_room chair bedroom)\\n(inside character bathroom)\\n(has_paper novel)\\n(grabbable chair)\\n(movable chair)\\n(inside_room novel bedroom)\\n(grabbable novel)\\n(readable novel)\\n(obj_next_to chair novel)\\n(can_open novel)\\n(obj_next_to novel chair)\\n)\\n(:goal\\n(and\\n(holds_rh character novel)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (obj_next_to ?char ?obj)) (not (obj_next_to ?obj ?char))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (inside ?char ?room) (inside_room ?dest ?room) (not (= ?dest ?room)) (obj_next_to ?char ?dest) (not (obj_next_to ?dest ?char)))\\n:effect (and (inside ?char ?dest) (inside_room ?char ?dest) (not (inside_room ?char ?room)) (not (obj_next_to ?char ?dest)) (obj_next_to ?dest ?char))\\n)\\n\"}"
    },
    {
        "identifier": "821_1",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( not ( holds_rh ?char ?obj ) ) ( not ( holds_lh ?char ?obj ) ) ( obj_next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ) ) \\n \\n:action walk_towards \\n:parameters ( ?char - character ?dest - object ) \\n:precondition ( and ( not ( next_to ?char ?dest ) ) ) \\n:effect ( and ( next_to ?char ?dest ) ) )\"}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{\n\"output\": \n\"(**:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (obj_ontop ?obj ?char)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj2)) (obj_next_to ?obj2 ?obj))\\n)\"}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{\n\"output\": \"(define (problem Read_book)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nnovel bookmark desk mouse couch keyboard cpuscreen television mousepad - object\\n)\\n(:init\\n(has_plug television)\\n(obj_next_to cpuscreen mousepad)\\n(movable mousepad)\\n(surfaces couch)\\n(obj_ontop novel desk)\\n(obj_next_to mousepad mouse)\\n(obj_next_to mousepad desk)\\n(obj_next_to desk couch)\\n(grabbable mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(surfaces desk)\\n(has_plug keyboard)\\n(obj_next_to desk mousepad)\\n(readable novel)\\n(obj_next_to desk mouse)\\n(lieable couch)\\n(obj_next_to mouse mousepad)\\n(obj_next_to mouse desk)\\n(obj_ontop keyboard desk)\\n(has_paper bookmark)\\n(obj_next_to couch television)\\n(obj_next_to keyboard mouse)\\n(obj_next_to cpuscreen mouse)\\n(grabbable keyboard)\\n(has_paper novel)\\n(lookable television)\\n(obj_next_to desk cpuscreen)\\n(obj_ontop mousepad desk)\\n(obj_next_to mousepad keyboard)\\n(obj_next_to couch novel)\\n(obj_next_to mouse keyboard)\\n(movable novel)\\n(obj_next_to cpuscreen desk)\\n(has_plug mouse)\\n(cuttable novel)\\n(obj_next_to desk novel)\\n(movable couch)\\n(grabbable novel)\\n(obj_next_to novel couch)\\n(facing couch television)\\n(obj_next_to bookmark desk)\\n(obj_next_to couch desk)\\n(sittable couch)\\n(can_open novel)\\n(obj_next_to mousepad cpuscreen)\\n(movable bookmark)\\n(obj_ontop mouse desk)\\n(obj_next_to mouse cpuscreen)\\n(grabbable bookmark)\\n(has_switch television)\\n(movable desk)\\n(movable mouse)\\n(obj_next_to novel desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to desk bookmark)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(obj_next_to television couch)\\n(obj_next_to keyboard cpuscreen)\\n)\\n(:goal\\n(and\\n(holds_lh character novel)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_lh ?char ?obj) (not (grabbable ?obj)) )\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj2 - object) (obj_next_to ?obj2 ?obj) )\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj2)) )\\n)\"}"
    },
    {
        "identifier": "897_2",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( next_to ?char ?obj ) ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside character dining_room ) ( inside_room ?obj dining_room ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( inside character dining_room ) ) ) \\n)\"}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "{\n\"output\": \"(define (problem Cook_some_food)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    pot water food_vegetable bedroom oven dining_room - object\\n)\\n    (:init\\n    (inside_room water dining_room)\\n    (can_open pot)\\n    (off oven)\\n    (obj_next_to oven water)\\n    (closed oven)\\n    (obj_next_to oven pot)\\n    (recipient pot)\\n    (pourable water)\\n    (plugged_in oven)\\n    (obj_inside pot oven)\\n    (movable food_vegetable)\\n    (inside_room pot dining_room)\\n    (clean oven)\\n    (obj_next_to oven food_vegetable)\\n    (cuttable food_vegetable)\\n    (grabbable pot)\\n    (has_plug oven)\\n    (can_open oven)\\n    (containers oven)\\n    (grabbable food_vegetable)\\n    (drinkable water)\\n    (obj_next_to water oven)\\n    (inside character bedroom)\\n    (inside_room oven dining_room)\\n    (obj_next_to pot oven)\\n    (movable pot)\\n    (eatable food_vegetable)\\n    (obj_next_to food_vegetable oven)\\n    (inside_room food_vegetable dining_room)\\n    (has_switch oven)\\n)\\n    (:goal\\n    (and\\n        (closed oven)\\n        (on oven)\\n        (plugged_in oven)\\n        (obj_ontop pot oven)\\n    )\\n)\\n    )\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n            (inside ?char ?obj1)\\n            (next_to ?char ?obj2)\\n            (hold_lh ?char ?obj1)\\n            (sittable ?obj2)\\n        )\\n  :effect (and\\n            (not (inside ?char ?obj1))\\n            (not (hold_lh ?char ?obj1))\\n            (on ?obj1 ?obj2)\\n        )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n            (inside_room ?char ?room)\\n            (inside_room ?obj ?room)\\n            (not (next_to ?char ?obj))\\n        )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n            (next_to ?char ?obj)\\n            (has_switch ?obj)\\n            (off ?obj)\\n        )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n            (next_to ?char ?obj)\\n            (grabbable ?obj)\\n        )\\n  :effect (and\\n            (hold_rh ?char ?obj)\\n            (not (grabbable ?obj))\\n        )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n            (next_to ?char ?obj)\\n            (can_open ?obj)\\n            (not (closed ?obj))\\n        )\\n  :effect (closed ?obj)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n            (next_to ?char ?obj)\\n            (can_open ?obj)\\n            (closed ?obj)\\n        )\\n  :effect (not (closed ?obj))\\n)\"}"
    },
    {
        "identifier": "392_2",
        "llm_output": "{\n\"output\": \"(define (problem Cook_some_food)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nfreezer oven pot - object\\n)\\n(:init\\n(can_open pot)\\n(off oven)\\n(closed oven)\\n(closed freezer)\\n(clean freezer)\\n(plugged_in freezer)\\n(obj_next_to oven pot)\\n(has_switch freezer)\\n(recipient pot)\\n(plugged_in oven)\\n(obj_inside pot oven)\\n(clean oven)\\n(obj_inside pot freezer)\\n(can_open freezer)\\n(grabbable pot)\\n(has_plug oven)\\n(can_open oven)\\n(containers oven)\\n(obj_next_to pot freezer)\\n(has_plug freezer)\\n(obj_next_to pot oven)\\n(obj_next_to freezer pot)\\n(movable pot)\\n(containers freezer)\\n(has_switch oven)\\n)\\n(:goal\\n(and\\n(closed oven)\\n(on oven)\\n(plugged_in oven)\\n(obj_ontop pot oven)\\n)\\n) \\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (sittable ?obj2))\\n:effect (and (not (holds_rh ?char ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (movable ?char))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (not (open ?obj)) (closed ?obj))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (not (closed ?obj)) (open ?obj))\\n)\\n)\\n\"}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{\n\"output\": \n\"( :action put_on \\n:parameters ( ?char - character ?obj1 - object ?obj2 - object ) \\n:precondition ( and ( grabbable ?obj1 ) ( next_to ?char ?obj2 ) ( ontop ?char ?obj1 ) ) \\n:effect ( and ( not ( ontop ?char ?obj1 ) ) ( ontop ?obj1 ?obj2 ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?obj1 ?char ) ( next_to ?obj2 ?char ) ( different ?obj1 ?obj2 ) ) \\n:effect ( and ( not ( next_to ?obj1 ?char ) ) ( next_to ?obj2 ?char ) ) \\n)\\n( :action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( not ( off ?obj ) ) \\n)\\n( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( holds_rh ?char ?obj ) \\n)\\n( :action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( closed ?obj ) ) \\n:effect ( not ( closed ?obj ) ) \\n)\"}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office hair couch bedroom television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (movable hair)\\n    (obj_next_to couch television)\\n    (grabbable hair)\\n    (obj_inside hair home_office)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (body_part hair)\\n    (cuttable hair)\\n    (obj_inside couch home_office)\\n    (facing couch television)\\n    (obj_next_to television couch)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside ?char bedroom)\\n        (obj_inside ?obj home_office)\\n        (obj_next_to ?obj ?char)\\n    )\\n  :effect (and\\n        (inside ?char home_office)\\n        (next_to ?char ?obj)\\n    )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (sitting ?char)\\n        (ontop ?char ?obj)\\n    )\\n)\"}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "204_2",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_inside ?obj ?room ) ( movable ?char ) ( not ( next_to ?char ?obj ) ) ) \\n:effect ( and ( when ( inside ?char ?room1 ) ( not ( inside ?char ?room1 ) ) ) ( next_to ?char ?obj ) ) ) \\n \\n:action lie \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( sittable ?obj ) ( next_to ?char ?obj ) ( not ( lying ?char ) ) ) \\n:effect ( and ( lying ?char ) ( when ( sitting ?char ) ( not ( sitting ?char ) ) ) ( when ( ontop ?char ?obj2 ) ( not ( ontop ?char ?obj2 ) ) ) ( ontop ?char ?obj ) ) ) \"}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office couch light television dining_room - object\\n)\\n    (:init\\n    (has_plug television)\\n    (has_switch light)\\n    (has_plug light)\\n    (surfaces couch)\\n    (inside_room television dining_room)\\n    (obj_inside couch home_office)\\n    (plugged_in light)\\n    (lieable couch)\\n    (obj_next_to couch television)\\n    (obj_next_to light light)\\n    (lookable television)\\n    (clean light)\\n    (inside character dining_room)\\n    (movable couch)\\n    (facing couch television)\\n    (sittable couch)\\n    (has_switch television)\\n    (off light)\\n    (facing light television)\\n    (obj_inside television home_office)\\n    (obj_next_to television couch)\\n    (inside_room light dining_room)\\n    (obj_inside light home_office)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n    )\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char dining_room) (inside ?obj dining_room) (movable ?obj) (not (next_to ?char ?obj)))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj) (not (sitting ?char)))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "297_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    mat home_office couch pillow window bedroom chair drawing television wall curtain floor_lamp floor - object\\n)\\n    (:init\\n    (obj_next_to mat wall)\\n    (obj_next_to floor pillow)\\n    (facing wall drawing)\\n    (obj_next_to mat curtain)\\n    (surfaces chair)\\n    (obj_next_to pillow floor)\\n    (facing window drawing)\\n    (obj_next_to television floor)\\n    (obj_next_to curtain mat)\\n    (obj_next_to window floor)\\n    (obj_next_to floor mat)\\n    (surfaces mat)\\n    (sittable chair)\\n    (obj_next_to curtain pillow)\\n    (facing drawing drawing)\\n    (obj_next_to pillow couch)\\n    (lookable television)\\n    (obj_next_to mat television)\\n    (obj_inside window home_office)\\n    (has_switch floor_lamp)\\n    (inside_room chair bedroom)\\n    (obj_next_to pillow drawing)\\n    (obj_next_to floor drawing)\\n    (obj_inside wall home_office)\\n    (cuttable drawing)\\n    (obj_next_to window wall)\\n    (facing couch television)\\n    (sittable couch)\\n    (has_switch television)\\n    (obj_next_to mat drawing)\\n    (obj_next_to curtain couch)\\n    (inside_room mat bedroom)\\n    (obj_next_to pillow pillow)\\n    (obj_next_to wall mat)\\n    (obj_next_to television mat)\\n    (obj_next_to couch drawing)\\n    (has_plug television)\\n    (obj_next_to curtain wall)\\n    (surfaces floor)\\n    (obj_next_to drawing drawing)\\n    (obj_next_to wall couch)\\n    (obj_next_to curtain curtain)\\n    (on floor_lamp)\\n    (obj_ontop curtain floor)\\n    (obj_inside curtain curtain)\\n    (facing wall television)\\n    (inside_room pillow bedroom)\\n    (obj_next_to floor couch)\\n    (sittable mat)\\n    (lookable drawing)\\n    (obj_next_to mat window)\\n    (obj_ontop drawing wall)\\n    (grabbable mat)\\n    (obj_inside floor home_office)\\n    (obj_next_to wall television)\\n    (obj_next_to wall curtain)\\n    (facing drawing television)\\n    (facing floor television)\\n    (obj_next_to wall pillow)\\n    (obj_next_to drawing pillow)\\n    (obj_inside curtain home_office)\\n    (obj_next_to floor curtain)\\n    (obj_next_to mat floor)\\n    (obj_next_to chair mat)\\n    (obj_inside floor_lamp home_office)\\n    (obj_next_to mat chair)\\n    (cover_object curtain)\\n    (obj_next_to drawing wall)\\n    (inside character bedroom)\\n    (obj_next_to mat mat)\\n    (obj_inside chair home_office)\\n    (movable pillow)\\n    (inside_room window bedroom)\\n    (obj_next_to curtain window)\\n    (obj_next_to drawing couch)\\n    (obj_next_to wall window)\\n    (obj_next_to television wall)\\n    (inside_room wall bedroom)\\n    (obj_next_to drawing floor)\\n    (movable mat)\\n    (obj_next_to floor_lamp chair)\\n    (clean floor_lamp)\\n    (lieable couch)\\n    (obj_inside mat home_office)\\n    (obj_next_to mat couch)\\n    (obj_next_to mat pillow)\\n    (obj_inside pillow couch)\\n    (obj_next_to pillow chair)\\n    (movable curtain)\\n    (obj_next_to couch window)\\n    (lieable mat)\\n    (obj_next_to chair floor)\\n    (inside_room floor bedroom)\\n    (obj_next_to chair drawing)\\n    (obj_next_to couch pillow)\\n    (grabbable chair)\\n    (obj_next_to chair pillow)\\n    (obj_next_to floor floor)\\n    (facing mat drawing)\\n    (obj_next_to pillow curtain)\\n    (obj_next_to wall drawing)\\n    (plugged_out floor_lamp)\\n    (facing chair drawing)\\n    (obj_next_to drawing mat)\\n    (facing curtain television)\\n    (obj_next_to wall floor)\\n    (obj_next_to couch mat)\\n    (obj_inside television home_office)\\n    (obj_next_to window couch)\\n    (inside_room drawing bedroom)\\n    (obj_next_to wall chair)\\n    (movable drawing)\\n    (obj_next_to pillow window)\\n    (obj_inside pillow home_office)\\n    (obj_next_to window pillow)\\n    (obj_next_to floor television)\\n    (obj_inside drawing home_office)\\n    (has_paper drawing)\\n    (obj_next_to curtain floor)\\n    (obj_next_to floor wall)\\n    (surfaces couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to chair floor_lamp)\\n    (facing floor drawing)\\n    (movable chair)\\n    (obj_next_to wall wall)\\n    (inside_room curtain bedroom)\\n    (obj_next_to couch wall)\\n    (obj_next_to couch television)\\n    (obj_next_to pillow mat)\\n    (facing mat television)\\n    (obj_next_to drawing chair)\\n    (grabbable drawing)\\n    (facing television drawing)\\n    (obj_ontop couch mat)\\n    (obj_next_to couch curtain)\\n    (obj_next_to window mat)\\n    (facing pillow drawing)\\n    (obj_next_to window curtain)\\n    (obj_next_to floor window)\\n    (obj_next_to chair wall)\\n    (facing pillow television)\\n    (obj_next_to couch floor)\\n    (movable floor_lamp)\\n    (movable couch)\\n    (grabbable pillow)\\n    (facing curtain drawing)\\n    (can_open curtain)\\n    (obj_next_to floor chair)\\n    (obj_next_to pillow wall)\\n    (obj_next_to television couch)\\n)\\n    (:goal\\n    (and\\n        (lying character)\\n        (ontop character couch)\\n    )\\n)\\n    )\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside character bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (inside character bedroom) (next_to ?char ?obj))\\n) \\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n) \"}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "300_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "321_1",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char bedroom ) ( next_to ?obj couch ) ) \\n:effect ( and ( inside ?char home_office ) ( next_to ?char ?obj ) ) ) \\n \\n:action sit \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( ontop ?char ?obj ) ( sittable ?obj ) ) \\n:effect ( and ( sitting ?char ) ( off ?obj ) ) ) \"}"
    },
    {
        "identifier": "332_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "379_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towardsn:parameters (?char - character ?obj - object):precondition ():effect ()::action lien:parameters (?char - character ?obj - object):precondition (and (lieable ?obj) (next_to ?char ?obj)):effect (and (lying ?char) (not (inside ?char bedroom)) (ontop ?char ?obj))\"}"
    },
    {
        "identifier": "387_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "390_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "3_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "416_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ncouch television - object\\n)\\n(:init\\n(lieable couch)\\n(has_plug television)\\n(has_switch television)\\n(obj_next_to couch television)\\n(surfaces couch)\\n(lookable television)\\n(obj_next_to television couch)\\n(movable couch)\\n(facing couch television)\\n(sittable couch)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character couch)\\n)\\n) \\n)\\n(\\naction walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n\\t(next_to ?char ?obj)\\n)\\n :effect (and\\n\\t(next_to ?char ?obj)\\n)\\n)\\n)\\n(\\naction lie\\n :parameters (?char - character ?obj - object)\\n :precondition (and\\n\\t(sittable ?obj)\\n\\t(next_to ?char ?obj)\\n)\\n :effect (and\\n\\t(lying ?char)\\n\\t(ontop ?char ?obj)\\n)\\n)\\n)\"}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towardsn:parameters (?char - character ?obj - object):precondition ():effect ()::action lien:parameters (?char - character ?obj - object):precondition (and (lieable ?obj) (next_to ?char ?obj)):effect (and (lying ?char) (not (inside ?char bedroom)) (ontop ?char ?obj))\"}"
    },
    {
        "identifier": "442_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "447_2",
        "llm_output": "{\n\"output\": \"( :action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room - object ) ( obj_next_to ?obj ?room ) ) \\n:effect ( and ( not ( inside ?char ?room ) ) ( next_to ?char ?obj ) ) ) \\n \\n:action sit \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( sittable ?obj ) ( on ?obj ) ) \\n:effect ( and ( sitting ?char ) ( ontop ?char ?obj ) ( not ( next_to ?char ?obj ) ) ( not ( on ?obj ) ) ) ) \"}"
    },
    {
        "identifier": "449_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch remote_control television dining_room - object\\n)\\n(:init\\n(grabbable remote_control)\\n(has_plug television)\\n(obj_next_to couch remote_control)\\n(clean television)\\n(surfaces couch)\\n(inside_room television dining_room)\\n(obj_inside couch home_office)\\n(movable remote_control)\\n(lieable couch)\\n(plugged_in television)\\n(obj_next_to couch television)\\n(lookable television)\\n(obj_next_to remote_control couch)\\n(obj_inside remote_control home_office)\\n(has_switch remote_control)\\n(off television)\\n(inside character dining_room)\\n(movable couch)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character couch)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char dining_room) (inside ?obj dining_room) (not (next_to ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action lie\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (lieable ?obj))\\n:effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n)\"}"
    },
    {
        "identifier": "455_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom couch home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bathroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bathroom) (obj_next_to ?obj television))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bathroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "456_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect (and\\n    (not (inside ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "473_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch sheets - object\\n)\\n    (:init\\n    (lieable couch)\\n    (obj_next_to sheets couch)\\n    (surfaces couch)\\n    (cover_object sheets)\\n    (movable sheets)\\n    (movable couch)\\n    (obj_next_to couch sheets)\\n    (grabbable sheets)\\n    (sittable couch)\\n)\\n) \\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n) \\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n) \\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "490_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom couch home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bathroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bathroom) (obj_next_to ?obj television))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bathroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "563_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (not (next_to ?char ?obj)))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "567_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office couch light stereo television dining_room - object\\n)\\n(:init\\n(has_plug television)\\n(obj_inside stereo home_office)\\n(has_switch light)\\n(has_plug light)\\n(surfaces couch)\\n(inside_room television dining_room)\\n(obj_inside couch home_office)\\n(can_open stereo)\\n(plugged_in light)\\n(lieable couch)\\n(obj_next_to couch television)\\n(obj_next_to light light)\\n(has_plug stereo)\\n(off stereo)\\n(lookable television)\\n(surfaces stereo)\\n(clean light)\\n(plugged_out stereo)\\n(closed stereo)\\n(inside character dining_room)\\n(movable couch)\\n(clean stereo)\\n(has_switch stereo)\\n(facing couch television)\\n(sittable couch)\\n(has_switch television)\\n(grabbable stereo)\\n(off light)\\n(facing light television)\\n(movable stereo)\\n(obj_inside television home_office)\\n(obj_next_to television couch)\\n(inside_room light dining_room)\\n(obj_inside light home_office)\\n)\\n(:goal\\n(and\\n(lying character)\\n(ontop character couch)\\n)\\n)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n(inside character dining_room)\\n(obj_inside ?obj dining_room)\\n(not (next_to ?char ?obj))\\n)\\n:effect (next_to ?char ?obj)\\n)\\n(:action lie\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n(next_to ?char ?obj)\\n(lieable ?obj)\\n(sitting ?char)\\n)\\n:effect (and\\n(lying ?char)\\n(not (sitting ?char))\\n(ontop ?char ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "570_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom couch home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bathroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bathroom) (obj_next_to ?obj television))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bathroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "674_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office couch dining_room television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside_room television dining_room)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (inside character dining_room)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (lying character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char dining_room) (inside ?char dining_room) (obj_next_to ?char ?obj))\\n  :effect (and (inside ?char dining_room) (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lieable ?obj) (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "6_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office couch dining_room television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (plugged_in television)\\n    (off television)\\n    (obj_next_to couch television)\\n    (clean television)\\n    (surfaces couch)\\n    (inside_room television dining_room)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (inside character dining_room)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char dining_room) (inside ?char home_office))\\n  :effect (and (inside ?char home_office) (next_to ?char couch))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char couch) (not (sitting ?char)))\\n  :effect (and (sitting ?char) (ontop ?char couch))\\n)\"}"
    },
    {
        "identifier": "742_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "762_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towardsn:parameters (?char - character ?obj - object):precondition ():effect ()::action lien:parameters (?char - character ?obj - object):precondition (and (lieable ?obj) (next_to ?char ?obj)):effect (and (lying ?char) (not (inside ?char bedroom)) (ontop ?char ?obj))\"}"
    },
    {
        "identifier": "793_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office couch dining_room television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (plugged_in television)\\n    (off television)\\n    (obj_next_to couch television)\\n    (clean television)\\n    (surfaces couch)\\n    (inside_room television dining_room)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (inside character dining_room)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    )\\n    (:goal\\n    (and\\n        (lying character)\\n        (ontop character couch)\\n    )\\n    )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char dining_room) (not (next_to ?char ?obj)))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (lying ?char)\\n)\"}"
    },
    {
        "identifier": "798_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    bathroom couch home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bathroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bathroom) (obj_next_to ?obj television))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bathroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "932_2",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "941_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n) \\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "96_1",
        "llm_output": "{\n\"output\": \"(define (problem Relax_on_sofa)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    couch bedroom home_office television - object\\n)\\n    (:init\\n    (lieable couch)\\n    (has_plug television)\\n    (has_switch television)\\n    (obj_next_to couch television)\\n    (surfaces couch)\\n    (inside character bedroom)\\n    (lookable television)\\n    (obj_inside television home_office)\\n    (movable couch)\\n    (obj_inside couch home_office)\\n    (obj_next_to television couch)\\n    (facing couch television)\\n    (sittable couch)\\n)\\n    (:goal\\n    (and\\n        (sitting character)\\n        (ontop character couch)\\n    )\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char bedroom) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char bedroom)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (not (next_to ?char ?obj)) (not (movable ?obj)))\\n)\"}"
    },
    {
        "identifier": "976_1",
        "llm_output": "{\n\"output\": \n\"::action walk_towardsn:parameters (?char - character ?obj - object):precondition ():effect ()::action lien:parameters (?char - character ?obj - object):precondition (and (lieable ?obj) (next_to ?char ?obj)):effect (and (lying ?char) (not (inside ?char bedroom)) (ontop ?char ?obj))\"}"
    },
    {
        "identifier": "149_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    home_office phone couch table food_food dining_room - object\\n)\\n    (:init\\n    (inside_room food_food dining_room)\\n    (obj_inside food_food home_office)\\n    (inside_room phone dining_room)\\n    (obj_next_to table food_food)\\n    (grabbable phone)\\n    (surfaces couch)\\n    (surfaces table)\\n    (sitting character)\\n    (has_switch phone)\\n    (obj_inside couch home_office)\\n    (obj_next_to phone table)\\n    (movable phone)\\n    (obj_inside phone home_office)\\n    (lieable couch)\\n    (movable food_food)\\n    (obj_ontop phone table)\\n    (movable table)\\n    (obj_ontop food_food table)\\n    (grabbable food_food)\\n    (obj_next_to table phone)\\n    (inside character dining_room)\\n    (movable couch)\\n    (eatable food_food)\\n    (obj_next_to table couch)\\n    (sittable couch)\\n    (inside_room table dining_room)\\n    (has_plug phone)\\n    (obj_inside table home_office)\\n    (obj_next_to couch table)\\n    (obj_inside table couch)\\n    (obj_next_to food_food table)\\n    (cuttable food_food)\\n)\\n    (:goal\\n    (and\\n        (holds_rh character phone)\\n    )\\n)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n  :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (not (= ?char ?obj)))\\n  :effect (and (next_to ?char ?obj) (inside_room ?char (inside_room ?obj)))\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (and (not (sitting ?char)) (not (lying ?char))))\\n)\"}"
    },
    {
        "identifier": "154_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom dining_room phone button - object\\n)\\n(:init\\n(movable button)\\n(inside_room phone dining_room)\\n(grabbable phone)\\n(has_plug phone)\\n(has_switch phone)\\n(inside_room phone bedroom)\\n(obj_next_to button phone)\\n(inside character dining_room)\\n(obj_next_to phone button)\\n(inside_room button bedroom)\\n(grabbable button)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (inside ?char dining_room)) (inside ?char bedroom)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char dining_room) (inside_room ?obj bedroom) (next_to ?obj button))\\n:effect (and (inside ?char bedroom) (next_to ?char ?obj) (not (inside ?char dining_room))))\\n)\"}"
    },
    {
        "identifier": "180_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nphone door hair trashcan light powersocket doorjamb drawing wall_clock wall ceiling floor - object\\n)\\n(:init\\n(obj_next_to phone doorjamb)\\n(facing wall drawing)\\n(obj_next_to wall powersocket)\\n(grabbable phone)\\n(has_plug light)\\n(obj_next_to drawing doorjamb)\\n(sitting character)\\n(obj_inside hair trashcan)\\n(lookable wall_clock)\\n(obj_next_to floor trashcan)\\n(facing light wall_clock)\\n(movable hair)\\n(obj_next_to door light)\\n(obj_next_to floor light)\\n(facing drawing drawing)\\n(clean phone)\\n(obj_next_to light wall)\\n(obj_next_to wall door)\\n(obj_next_to wall_clock trashcan)\\n(obj_next_to door wall_clock)\\n(obj_next_to ceiling phone)\\n(obj_next_to light drawing)\\n(obj_next_to wall trashcan)\\n(obj_next_to door powersocket)\\n(grabbable wall_clock)\\n(facing trashcan drawing)\\n(obj_next_to trashcan hair)\\n(obj_next_to floor drawing)\\n(obj_next_to wall light)\\n(obj_next_to floor door)\\n(obj_next_to light wall_clock)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(cuttable drawing)\\n(facing door drawing)\\n(obj_next_to light floor)\\n(obj_next_to trashcan light)\\n(obj_next_to phone light)\\n(obj_ontop ceiling wall)\\n(obj_next_to drawing wall_clock)\\n(obj_next_to trashcan wall)\\n(obj_next_to light doorjamb)\\n(obj_next_to doorjamb phone)\\n(obj_next_to phone door)\\n(obj_next_to trashcan powersocket)\\n(facing ceiling wall_clock)\\n(obj_next_to phone powersocket)\\n(obj_next_to door drawing)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(obj_next_to doorjamb phone)\\n(obj_next_to wall_clock wall)\\n(obj_next_to wall ceiling)\\n(obj_next_to floor phone)\\n(obj_next_to wall_clock light)\\n(obj_ontop doorjamb floor)\\n(obj_next_to trashcan phone)\\n(containers trashcan)\\n(obj_next_to phone wall)\\n(obj_next_to light light)\\n(facing powersocket wall_clock)\\n(obj_next_to doorjamb wall)\\n(obj_next_to doorjamb trashcan)\\n(has_switch wall_clock)\\n(obj_next_to wall doorjamb)\\n(obj_next_to doorjamb drawing)\\n(lookable drawing)\\n(facing door wall_clock)\\n(obj_next_to trashcan door)\\n(obj_ontop drawing wall)\\n(can_open trashcan)\\n(obj_next_to doorjamb ceiling)\\n(obj_next_to doorjamb door)\\n(facing floor wall_clock)\\n(obj_next_to drawing phone)\\n(obj_next_to drawing door)\\n(grabbable hair)\\n(obj_next_to wall_clock doorjamb)\\n(facing powersocket drawing)\\n(obj_next_to drawing wall)\\n(obj_next_to wall phone)\\n(obj_next_to hair trashcan)\\n(facing phone drawing)\\n(facing wall wall_clock)\\n(obj_next_to powersocket trashcan)\\n(obj_next_to powersocket door)\\n(obj_next_to powersocket drawing)\\n(obj_ontop door floor)\\n(obj_next_to light door)\\n(movable wall_clock)\\n(obj_next_to drawing floor)\\n(movable phone)\\n(obj_next_to phone drawing)\\n(movable trashcan)\\n(obj_next_to drawing ceiling)\\n(obj_next_to powersocket light)\\n(obj_next_to door floor)\\n(facing wall_clock drawing)\\n(facing doorjamb wall_clock)\\n(facing light drawing)\\n(obj_next_to phone wall_clock)\\n(obj_next_to light ceiling)\\n(obj_next_to powersocket wall)\\n(cuttable hair)\\n(obj_next_to floor floor)\\n(obj_next_to ceiling wall_clock)\\n(obj_next_to drawing powersocket)\\n(obj_next_to wall drawing)\\n(obj_next_to door wall)\\n(obj_next_to wall wall_clock)\\n(obj_next_to drawing light)\\n(obj_next_to wall floor)\\n(obj_next_to trashcan doorjamb)\\n(obj_next_to wall_clock door)\\n(obj_next_to light powersocket)\\n(movable drawing)\\n(obj_next_to ceiling ceiling)\\n(facing ceiling drawing)\\n(obj_next_to phone floor)\\n(obj_next_to door trashcan)\\n(has_paper drawing)\\n(obj_next_to powersocket doorjamb)\\n(plugged_out phone)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to doorjamb wall_clock)\\n(obj_next_to ceiling wall)\\n(has_switch phone)\\n(can_open door)\\n(obj_next_to powersocket floor)\\n(body_part hair)\\n(facing floor drawing)\\n(obj_next_to ceiling doorjamb)\\n(obj_next_to wall wall)\\n(obj_next_to light phone)\\n(obj_next_to phone trashcan)\\n(obj_next_to door doorjamb)\\n(obj_next_to trashcan floor)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to ceiling drawing)\\n(grabbable drawing)\\n(obj_next_to doorjamb floor)\\n(off phone)\\n(obj_next_to floor doorjamb)\\n(obj_next_to trashcan drawing)\\n(has_plug wall_clock)\\n(obj_next_to phone ceiling)\\n(obj_next_to light trashcan)\\n(obj_next_to wall_clock phone)\\n(obj_next_to trashcan wall_clock)\\n(facing phone wall_clock)\\n(obj_next_to wall_clock drawing)\\n(facing doorjamb drawing)\\n(has_plug phone)\\n(obj_next_to wall_clock ceiling)\\n(obj_next_to drawing trashcan)\\n(obj_next_to ceiling light)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (not (next_to ?char ?obj)) (not(= ?obj character)))\\n :effect (next_to ?char ?obj)\\n)\\n(:action standup\\n :parameters (?char - character)\\n :precondition (sitting ?char)\\n :effect (and (not (sitting ?char)) (standing ?char))\\n)\\n)\"}"
    },
    {
        "identifier": "195_1",
        "llm_output": "{\n\"output\": \n\"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( ontop ?obj ?char ) ) ) ) \\n\\n:action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( not ( inside ?char ?room ) ) ( inside_room ?obj ?room ) ) \\n:effect ( and ( next_to ?char ?obj ) ( not ( next_to ?char ?obj2 ) ) ( inside ?char ?room ) ) )\"}"
    },
    {
        "identifier": "211_1",
        "llm_output": "{\n\"output\": \n\"(# ::action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(\\n ::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (not (facing ?char ?obj)))\\n:effect (and (facing ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "241_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "264_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom home_office phone desk shoe-shine_kit mouse keyboard cpuscreen mousepad - object\\n)\\n(:init\\n(obj_next_to cpuscreen mousepad)\\n(grabbable phone)\\n(obj_inside mouse home_office)\\n(movable mousepad)\\n(obj_next_to mousepad mouse)\\n(obj_next_to mousepad desk)\\n(has_switch phone)\\n(grabbable mouse)\\n(surfaces mousepad)\\n(grabbable shoe-shine_kit)\\n(obj_next_to desk keyboard)\\n(obj_next_to phone desk)\\n(surfaces desk)\\n(has_plug keyboard)\\n(obj_next_to desk mouse)\\n(movable phone)\\n(obj_inside phone home_office)\\n(obj_next_to mouse desk)\\n(obj_next_to mouse mousepad)\\n(obj_ontop phone desk)\\n(obj_ontop keyboard desk)\\n(obj_next_to keyboard mouse)\\n(obj_next_to cpuscreen mouse)\\n(grabbable keyboard)\\n(obj_next_to desk cpuscreen)\\n(obj_inside keyboard home_office)\\n(obj_ontop mousepad desk)\\n(obj_next_to mousepad keyboard)\\n(obj_inside mousepad home_office)\\n(obj_next_to shoe-shine_kit desk)\\n(obj_next_to mouse keyboard)\\n(obj_next_to cpuscreen desk)\\n(has_plug mouse)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to mouse cpuscreen)\\n(obj_next_to desk shoe-shine_kit)\\n(movable shoe-shine_kit)\\n(obj_ontop mouse desk)\\n(obj_inside desk home_office)\\n(obj_inside shoe-shine_kit home_office)\\n(obj_next_to desk phone)\\n(inside character bathroom)\\n(has_plug phone)\\n(movable mouse)\\n(movable desk)\\n(obj_next_to cpuscreen keyboard)\\n(obj_ontop cpuscreen desk)\\n(can_open shoe-shine_kit)\\n(movable keyboard)\\n(obj_next_to desk mousepad)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(obj_next_to keyboard mousepad)\\n(obj_ontop shoe-shine_kit desk)\\n(obj_next_to keyboard cpuscreen)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (not (inside ?char bathroom))))\\n:effect (and (next_to ?char ?obj) (not (inside ?char bathroom)) (not (inside ?char home_office))))\"}"
    },
    {
        "identifier": "265_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom phone home_office button - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(movable button)\\n(grabbable phone)\\n(inside character bathroom)\\n(has_plug phone)\\n(has_switch phone)\\n(obj_next_to button phone)\\n(obj_inside button home_office)\\n(obj_next_to phone button)\\n(grabbable button)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (inside ?char bathroom))))\\n)\"}"
    },
    {
        "identifier": "287_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nmat phone door trashcan light powersocket doorjamb table drawing wall_clock wall ceiling floor - object\\n)\\n(:init\\n(obj_next_to mat wall)\\n(obj_next_to phone doorjamb)\\n(facing wall drawing)\\n(obj_next_to wall powersocket)\\n(grabbable phone)\\n(has_plug light)\\n(obj_next_to drawing doorjamb)\\n(obj_next_to floor mat)\\n(lookable wall_clock)\\n(surfaces mat)\\n(obj_next_to floor trashcan)\\n(facing light wall_clock)\\n(obj_next_to doorjamb mat)\\n(obj_next_to door light)\\n(obj_next_to floor light)\\n(facing drawing drawing)\\n(obj_next_to mat light)\\n(obj_next_to light wall)\\n(obj_next_to wall door)\\n(obj_next_to wall_clock trashcan)\\n(obj_next_to door wall_clock)\\n(obj_next_to light mat)\\n(obj_next_to ceiling phone)\\n(obj_next_to light drawing)\\n(obj_next_to wall trashcan)\\n(obj_next_to door powersocket)\\n(grabbable wall_clock)\\n(facing trashcan drawing)\\n(obj_next_to floor drawing)\\n(obj_next_to wall light)\\n(obj_next_to floor door)\\n(obj_next_to light wall_clock)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(cuttable drawing)\\n(facing door drawing)\\n(obj_next_to light floor)\\n(obj_ontop table mat)\\n(obj_next_to trashcan light)\\n(obj_next_to phone light)\\n(obj_ontop ceiling wall)\\n(obj_next_to mat drawing)\\n(obj_next_to drawing wall_clock)\\n(obj_next_to trashcan wall)\\n(obj_next_to light doorjamb)\\n(obj_next_to door phone)\\n(obj_next_to phone door)\\n(obj_next_to wall mat)\\n(obj_next_to drawing table)\\n(obj_next_to trashcan powersocket)\\n(obj_next_to table drawing)\\n(facing ceiling wall_clock)\\n(obj_next_to phone powersocket)\\n(obj_next_to door drawing)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(obj_next_to doorjamb phone)\\n(obj_next_to wall_clock wall)\\n(obj_next_to wall ceiling)\\n(obj_next_to floor phone)\\n(obj_next_to wall_clock light)\\n(obj_next_to table wall)\\n(obj_ontop doorjamb floor)\\n(obj_next_to trashcan phone)\\n(containers trashcan)\\n(obj_next_to phone wall)\\n(obj_next_to light light)\\n(facing powersocket wall_clock)\\n(sittable mat)\\n(obj_next_to doorjamb wall)\\n(has_switch wall_clock)\\n(obj_next_to wall doorjamb)\\n(obj_ontop phone table)\\n(obj_next_to doorjamb trashcan)\\n(obj_next_to doorjamb drawing)\\n(lookable drawing)\\n(movable table)\\n(facing door wall_clock)\\n(obj_next_to trashcan door)\\n(obj_ontop drawing wall)\\n(grabbable mat)\\n(can_open trashcan)\\n(obj_ontop mat table)\\n(facing table drawing)\\n(obj_next_to doorjamb ceiling)\\n(obj_ontop table floor)\\n(obj_next_to doorjamb door)\\n(facing floor wall_clock)\\n(obj_next_to mat floor)\\n(obj_next_to drawing phone)\\n(obj_next_to drawing door)\\n(obj_next_to wall_clock doorjamb)\\n(facing powersocket drawing)\\n(obj_next_to drawing wall)\\n(obj_next_to wall phone)\\n(obj_next_to mat mat)\\n(obj_next_to table mat)\\n(facing phone drawing)\\n(facing wall wall_clock)\\n(obj_next_to powersocket trashcan)\\n(obj_next_to powersocket door)\\n(obj_next_to powersocket phone)\\n(surfaces table)\\n(obj_next_to powersocket drawing)\\n(obj_ontop door floor)\\n(obj_next_to light door)\\n(movable wall_clock)\\n(obj_next_to drawing floor)\\n(movable mat)\\n(movable phone)\\n(obj_next_to phone drawing)\\n(movable trashcan)\\n(obj_next_to drawing ceiling)\\n(obj_next_to powersocket light)\\n(obj_next_to door floor)\\n(facing wall_clock drawing)\\n(facing doorjamb wall_clock)\\n(lieable mat)\\n(facing light drawing)\\n(obj_next_to phone wall_clock)\\n(obj_next_to light ceiling)\\n(obj_next_to powersocket wall)\\n(obj_next_to ceiling wall_clock)\\n(obj_next_to floor floor)\\n(facing mat drawing)\\n(obj_next_to drawing powersocket)\\n(obj_next_to wall drawing)\\n(obj_next_to drawing mat)\\n(obj_next_to door wall)\\n(obj_next_to wall wall_clock)\\n(obj_next_to drawing light)\\n(obj_next_to wall floor)\\n(obj_next_to floor table)\\n(obj_next_to trashcan doorjamb)\\n(obj_next_to wall_clock door)\\n(obj_next_to light powersocket)\\n(movable drawing)\\n(obj_next_to ceiling ceiling)\\n(facing ceiling drawing)\\n(obj_next_to phone floor)\\n(obj_next_to door trashcan)\\n(has_paper drawing)\\n(obj_next_to powersocket doorjamb)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to doorjamb wall_clock)\\n(obj_next_to ceiling wall)\\n(has_switch phone)\\n(can_open door)\\n(obj_next_to wall table)\\n(obj_next_to powersocket floor)\\n(facing floor drawing)\\n(obj_next_to ceiling doorjamb)\\n(facing mat wall_clock)\\n(obj_next_to wall wall)\\n(obj_next_to light phone)\\n(obj_next_to phone trashcan)\\n(obj_next_to door doorjamb)\\n(obj_next_to mat table)\\n(obj_next_to trashcan floor)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to ceiling drawing)\\n(obj_next_to mat door)\\n(grabbable drawing)\\n(obj_next_to doorjamb floor)\\n(obj_next_to floor doorjamb)\\n(obj_next_to trashcan drawing)\\n(has_plug wall_clock)\\n(obj_next_to table floor)\\n(obj_next_to phone ceiling)\\n(obj_next_to light trashcan)\\n(obj_next_to wall_clock phone)\\n(obj_next_to trashcan wall_clock)\\n(facing phone wall_clock)\\n(obj_next_to mat doorjamb)\\n(obj_next_to wall_clock drawing)\\n(facing doorjamb drawing)\\n(has_plug phone)\\n(obj_next_to door mat)\\n(obj_next_to wall_clock ceiling)\\n(obj_next_to drawing trashcan)\\n(obj_next_to ceiling light)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?char ?obj1 - object) (next_to ?obj1 ?obj) (not (equal ?char ?obj1)) (not (equal ?obj1 ?obj)))\\n :effect (and (next_to ?char ?obj) (not (next_to ?char ?obj1)))\\n)\"}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n (:domain virtualhome)\\n (:objects\\n character - character\\n home_office phone dining_room - object\\n )\\n (:init\\n (obj_inside phone home_office)\\n (inside character phone dining_room)\\n (grabbable phone)\\n (has_plug phone)\\n (has_switch phone)\\n (inside character dining_room)\\n (movable phone)\\n )\\n (:goal\\n (and\\n (holds_rh character phone)\\n )\\n )\\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj)))\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?obj1 ?obj2) (not (= ?obj1 ?char)) (not (= ?obj2 ?char)))\\n :effect (and (next_to ?char ?obj) (not (next_to ?obj1 ?obj2)) )\\n)\"}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n (:domain virtualhome)\\n (:objects\\n character - character\\n home_office phone dining_room - object\\n )\\n (:init\\n (obj_inside phone home_office)\\n (inside character phone dining_room)\\n (grabbable phone)\\n (has_plug phone)\\n (has_switch phone)\\n (inside character dining_room)\\n (movable phone)\\n )\\n (:goal\\n (and\\n (holds_rh character phone)\\n )\\n )\\n)\\n(:action grab\\n :parameters (?char - character ?obj - object)\\n :precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n :effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj)))\\n)\\n(:action walk_towards\\n :parameters (?char - character ?obj - object)\\n :precondition (and (next_to ?obj1 ?obj2) (not (= ?obj1 ?char)) (not (= ?obj2 ?char)))\\n :effect (and (next_to ?char ?obj) (not (next_to ?obj1 ?obj2)) )\\n)\"}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{\n\"output\": \"( :action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( not ( next_to ?char ?obj ) ) ( holds_rh ?char ?obj ) ) ) \\n)\\n( :action walk_towards \\n:parameters ( ?char - character ?dest - object ) \\n:precondition ( and ( inside ?char ?init_loc - object ) ( obj_next_to ?init_loc ?dest ) ) \\n:effect ( and ( inside ?char ?dest ) ( not ( inside ?char ?init_loc ) ) ) ) \\n)\"}"
    },
    {
        "identifier": "436_1",
        "llm_output": "{\n\"output\": \n\"(**:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (inside ?char bathroom))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (= ?obj bathroom)))\\n:effect (and (next_to ?char ?obj) (inside ?char bathroom) (not (next_to ?char home_office)) (not (inside ?char home_office)) (not (equal ?obj home_office)))\\n)\"}"
    },
    {
        "identifier": "442_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "474_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom phone door trashcan light powersocket doorjamb drawing wall_clock wall ceiling dining_room floor - object\\n)\\n(:init\\n(obj_next_to phone doorjamb)\\n(facing wall drawing)\\n(obj_next_to wall powersocket)\\n(grabbable phone)\\n(has_plug light)\\n(obj_next_to drawing doorjamb)\\n(lookable wall_clock)\\n(inside_room ceiling bathroom)\\n(obj_next_to floor trashcan)\\n(inside_room door dining_room)\\n(facing light wall_clock)\\n(obj_next_to door light)\\n(obj_next_to floor light)\\n(facing drawing drawing)\\n(obj_next_to light wall)\\n(obj_next_to wall door)\\n(obj_next_to wall_clock trashcan)\\n(obj_next_to door wall_clock)\\n(obj_next_to ceiling phone)\\n(obj_next_to light drawing)\\n(obj_next_to wall trashcan)\\n(obj_next_to door powersocket)\\n(grabbable wall_clock)\\n(facing trashcan drawing)\\n(inside_room ceiling dining_room)\\n(obj_next_to floor drawing)\\n(obj_next_to wall light)\\n(obj_next_to floor door)\\n(obj_next_to light wall_clock)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(cuttable drawing)\\n(facing door drawing)\\n(obj_next_to light floor)\\n(obj_next_to trashcan light)\\n(obj_next_to phone light)\\n(obj_ontop ceiling wall)\\n(obj_next_to drawing wall_clock)\\n(obj_next_to trashcan wall)\\n(obj_next_to light doorjamb)\\n(obj_next_to door phone)\\n(obj_next_to phone door)\\n(obj_next_to trashcan powersocket)\\n(inside_room floor dining_room)\\n(facing powersocket wall_clock)\\n(obj_next_to phone powersocket)\\n(obj_next_to door drawing)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(inside_room light bathroom)\\n(obj_next_to doorjamb phone)\\n(obj_next_to wall_clock wall)\\n(obj_next_to wall ceiling)\\n(obj_next_to floor phone)\\n(obj_next_to wall_clock light)\\n(obj_ontop doorjamb floor)\\n(inside_room wall dining_room)\\n(obj_next_to trashcan phone)\\n(containers trashcan)\\n(obj_next_to phone wall)\\n(obj_next_to light light)\\n(facing powersocket drawing)\\n(obj_next_to doorjamb wall)\\n(obj_next_to doorjamb trashcan)\\n(has_switch wall_clock)\\n(obj_next_to wall doorjamb)\\n(obj_next_to doorjamb drawing)\\n(lookable drawing)\\n(facing door wall_clock)\\n(obj_next_to trashcan door)\\n(obj_ontop drawing wall)\\n(can_open trashcan)\\n(obj_next_to doorjamb ceiling)\\n(obj_next_to doorjamb door)\\n(inside_room wall_clock dining_room)\\n(facing floor wall_clock)\\n(obj_next_to drawing phone)\\n(obj_next_to drawing door)\\n(obj_next_to wall_clock doorjamb)\\n(facing powersocket drawing)\\n(obj_next_to drawing wall)\\n(obj_next_to wall phone)\\n(inside_room light dining_room)\\n(facing phone drawing)\\n(facing wall wall_clock)\\n(obj_next_to powersocket trashcan)\\n(obj_next_to powersocket door)\\n(obj_next_to powersocket phone)\\n(inside_room phone dining_room)\\n(obj_next_to powersocket drawing)\\n(obj_ontop door floor)\\n(obj_next_to light door)\\n(movable wall_clock)\\n(obj_next_to drawing floor)\\n(movable phone)\\n(obj_next_to phone drawing)\\n(movable trashcan)\\n(obj_next_to drawing ceiling)\\n(obj_next_to powersocket light)\\n(obj_next_to door floor)\\n(facing wall_clock drawing)\\n(facing doorjamb wall_clock)\\n(facing light drawing)\\n(obj_next_to phone wall_clock)\\n(obj_next_to light ceiling)\\n(obj_next_to powersocket wall)\\n(obj_next_to ceiling wall_clock)\\n(obj_next_to floor floor)\\n(obj_next_to drawing powersocket)\\n(obj_next_to wall drawing)\\n(obj_next_to door wall)\\n(obj_next_to wall wall_clock)\\n(obj_next_to drawing light)\\n(obj_next_to wall floor)\\n(inside character bathroom)\\n(obj_next_to trashcan doorjamb)\\n(obj_next_to wall_clock door)\\n(obj_next_to light powersocket)\\n(movable drawing)\\n(obj_next_to ceiling ceiling)\\n(facing ceiling drawing)\\n(obj_next_to phone floor)\\n(obj_next_to door trashcan)\\n(has_paper drawing)\\n(obj_next_to powersocket doorjamb)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to doorjamb wall_clock)\\n(obj_next_to ceiling wall)\\n(has_switch phone)\\n(can_open door)\\n(obj_next_to powersocket floor)\\n(facing floor drawing)\\n(obj_next_to ceiling doorjamb)\\n(obj_next_to wall wall)\\n(obj_next_to light phone)\\n(obj_next_to phone trashcan)\\n(obj_next_to door doorjamb)\\n(obj_next_to trashcan floor)\\n(inside_room doorjamb bathroom)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to ceiling drawing)\\n(grabbable drawing)\\n(obj_next_to doorjamb floor)\\n(obj_next_to floor doorjamb)\\n(obj_next_to trashcan drawing)\\n(has_plug wall_clock)\\n(obj_next_to phone ceiling)\\n(obj_next_to light trashcan)\\n(inside_room wall bathroom)\\n(obj_next_to wall_clock phone)\\n(obj_next_to trashcan wall_clock)\\n(facing phone wall_clock)\\n(obj_next_to wall_clock drawing)\\n(facing doorjamb drawing)\\n(inside_room door bathroom)\\n(inside_room powersocket dining_room)\\n(inside_room drawing dining_room)\\n(inside_room floor bathroom)\\n(has_plug phone)\\n(obj_next_to wall_clock ceiling)\\n(obj_next_to drawing trashcan)\\n(obj_next_to ceiling light)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (not (= ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj)))\"}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office phone dining_room hair - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(movable hair)\\n(inside_room phone dining_room)\\n(grabbable phone)\\n(grabbable hair)\\n(has_plug phone)\\n(has_switch phone)\\n(inside character dining_room)\\n(body_part hair)\\n(cuttable hair)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj))))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?dest_room - object)\\n:precondition (and (or (inside ?char dining_room) (inside ?char home_office)) (not (= ?dest_room dining_room)) (not (= ?dest_room home_office)) (not (next_to ?char ?dest_room)))\\n:effect (and (inside ?char ?dest_room) (not (inside ?char dining_room)) (not (inside ?char home_office))))\\n)\"}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office phone - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(grabbable phone)\\n(inside character bedroom)\\n(has_plug phone)\\n(has_switch phone)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (obj_inside ?obj home_office))))\\n) \\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (inside ?char ?obj)))\"}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nphone door trashcan light powersocket doorjamb button drawing television wall_clock wall ceiling floor - object\\n)\\n(:init\\n(obj_next_to phone doorjamb)\\n(facing wall drawing)\\n(obj_next_to wall powersocket)\\n(grabbable phone)\\n(has_plug light)\\n(obj_next_to drawing doorjamb)\\n(obj_next_to television floor)\\n(lookable wall_clock)\\n(obj_next_to floor trashcan)\\n(facing light wall_clock)\\n(obj_next_to door light)\\n(obj_next_to floor light)\\n(facing drawing drawing)\\n(obj_next_to light wall)\\n(obj_next_to wall door)\\n(obj_next_to wall_clock trashcan)\\n(lookable television)\\n(obj_next_to door wall_clock)\\n(obj_next_to ceiling phone)\\n(obj_next_to light drawing)\\n(obj_next_to wall trashcan)\\n(obj_next_to door powersocket)\\n(grabbable wall_clock)\\n(facing trashcan drawing)\\n(obj_next_to floor drawing)\\n(obj_next_to wall light)\\n(obj_next_to floor door)\\n(obj_next_to light wall_clock)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(cuttable drawing)\\n(facing door drawing)\\n(obj_next_to light floor)\\n(grabbable button)\\n(obj_next_to trashcan light)\\n(obj_next_to phone light)\\n(has_switch television)\\n(obj_ontop ceiling wall)\\n(obj_next_to drawing wall_clock)\\n(obj_next_to trashcan wall)\\n(obj_next_to light doorjamb)\\n(obj_next_to door phone)\\n(obj_next_to phone door)\\n(obj_next_to trashcan powersocket)\\n(has_plug television)\\n(facing ceiling wall_clock)\\n(obj_next_to phone powersocket)\\n(obj_next_to door drawing)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(obj_next_to doorjamb phone)\\n(obj_next_to wall_clock wall)\\n(obj_next_to wall ceiling)\\n(obj_next_to television ceiling)\\n(obj_next_to floor phone)\\n(obj_next_to wall_clock light)\\n(obj_ontop doorjamb floor)\\n(facing wall television)\\n(obj_next_to trashcan phone)\\n(containers trashcan)\\n(obj_next_to phone wall)\\n(obj_next_to light light)\\n(facing powersocket wall_clock)\\n(facing doorjamb television)\\n(obj_next_to doorjamb wall)\\n(obj_next_to doorjamb trashcan)\\n(has_switch wall_clock)\\n(obj_next_to wall doorjamb)\\n(obj_next_to doorjamb drawing)\\n(lookable drawing)\\n(facing door wall_clock)\\n(obj_next_to trashcan door)\\n(facing ceiling television)\\n(obj_ontop drawing wall)\\n(can_open trashcan)\\n(obj_next_to wall television)\\n(movable button)\\n(obj_next_to doorjamb ceiling)\\n(facing drawing television)\\n(facing floor television)\\n(obj_next_to doorjamb door)\\n(facing floor wall_clock)\\n(obj_next_to drawing phone)\\n(obj_next_to drawing door)\\n(obj_next_to wall_clock doorjamb)\\n(facing powersocket drawing)\\n(obj_next_to drawing wall)\\n(obj_next_to wall phone)\\n(obj_next_to ceiling television)\\n(facing phone drawing)\\n(facing wall wall_clock)\\n(obj_next_to powersocket trashcan)\\n(obj_next_to powersocket door)\\n(obj_next_to powersocket phone)\\n(obj_next_to television wall)\\n(obj_next_to powersocket drawing)\\n(obj_ontop door floor)\\n(obj_next_to light door)\\n(movable wall_clock)\\n(obj_next_to drawing floor)\\n(movable phone)\\n(obj_next_to phone drawing)\\n(movable trashcan)\\n(obj_next_to drawing ceiling)\\n(obj_next_to powersocket light)\\n(obj_next_to door floor)\\n(facing wall_clock drawing)\\n(facing doorjamb wall_clock)\\n(facing light drawing)\\n(obj_next_to phone wall_clock)\\n(obj_next_to light ceiling)\\n(facing television wall_clock)\\n(obj_next_to ceiling wall_clock)\\n(obj_next_to floor floor)\\n(obj_next_to powersocket wall)\\n(obj_next_to drawing powersocket)\\n(obj_next_to wall drawing)\\n(obj_next_to door wall)\\n(obj_next_to wall wall_clock)\\n(obj_next_to drawing light)\\n(obj_next_to wall floor)\\n(facing door television)\\n(obj_next_to trashcan doorjamb)\\n(obj_next_to wall_clock door)\\n(obj_next_to light powersocket)\\n(movable drawing)\\n(obj_next_to floor television)\\n(obj_next_to ceiling ceiling)\\n(facing ceiling drawing)\\n(obj_next_to phone floor)\\n(obj_next_to door trashcan)\\n(has_paper drawing)\\n(obj_next_to powersocket doorjamb)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to doorjamb wall_clock)\\n(obj_next_to ceiling wall)\\n(has_switch phone)\\n(can_open door)\\n(obj_next_to powersocket floor)\\n(facing floor drawing)\\n(obj_next_to ceiling doorjamb)\\n(facing phone television)\\n(obj_next_to wall wall)\\n(obj_next_to light phone)\\n(obj_next_to phone trashcan)\\n(obj_next_to door doorjamb)\\n(obj_next_to trashcan floor)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to ceiling drawing)\\n(grabbable drawing)\\n(facing television drawing)\\n(obj_next_to doorjamb floor)\\n(obj_next_to floor doorjamb)\\n(facing wall_clock television)\\n(obj_next_to trashcan drawing)\\n(has_plug wall_clock)\\n(obj_next_to phone ceiling)\\n(obj_next_to light trashcan)\\n(obj_next_to wall_clock phone)\\n(obj_next_to trashcan wall_clock)\\n(facing phone wall_clock)\\n(obj_next_to wall_clock drawing)\\n(facing doorjamb drawing)\\n(has_plug phone)\\n(facing light television)\\n(obj_next_to wall_clock ceiling)\\n(obj_next_to drawing trashcan)\\n(obj_next_to ceiling light)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) )\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj2 - object) (obj_next_to ?obj2 ?obj) )\\n:effect (and (next_to ?char ?obj) (not (next_to ?char ?obj2)) )\\n)\"}"
    },
    {
        "identifier": "70_1",
        "llm_output": "{\n\"output\": \n\"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office phone fork desk mouse keyboard cpuscreen mousepad dining_room - object\\n)\\n(:init\\n(obj_next_to cpuscreen mousepad)\\n(inside_room phone dining_room)\\n(grabbable phone)\\n(obj_inside mouse home_office)\\n(movable mousepad)\\n(obj_next_to mousepad mouse)\\n(obj_next_to mousepad desk)\\n(has_switch phone)\\n(grabbable mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_next_to phone desk)\\n(surfaces desk)\\n(has_plug keyboard)\\n(obj_next_to desk mouse)\\n(movable phone)\\n(obj_inside phone home_office)\\n(obj_next_to mouse desk)\\n(obj_next_to mouse mousepad)\\n(obj_ontop phone desk)\\n(grabbable fork)\\n(obj_ontop keyboard desk)\\n(obj_next_to keyboard mouse)\\n(clean phone)\\n(movable fork)\\n(obj_next_to cpuscreen mouse)\\n(grabbable keyboard)\\n(obj_next_to desk cpuscreen)\\n(obj_inside keyboard home_office)\\n(obj_ontop mousepad desk)\\n(obj_next_to mousepad keyboard)\\n(obj_inside mousepad home_office)\\n(obj_next_to mouse keyboard)\\n(obj_ontop fork desk)\\n(obj_next_to cpuscreen desk)\\n(has_plug mouse)\\n(inside character dining_room)\\n(obj_inside cpuscreen home_office)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to desk fork)\\n(obj_next_to mouse cpuscreen)\\n(plugged_in phone)\\n(obj_ontop mouse desk)\\n(obj_inside fork home_office)\\n(obj_next_to fork desk)\\n(obj_inside desk home_office)\\n(obj_next_to desk phone)\\n(has_plug phone)\\n(movable desk)\\n(movable mouse)\\n(obj_next_to cpuscreen keyboard)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to desk mousepad)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(obj_next_to keyboard cpuscreen)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) )\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) )\\n:effect (and (next_to ?char ?obj) )\\n)\\n\"}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom phone home_office hair - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(movable hair)\\n(grabbable phone)\\n(grabbable hair)\\n(inside character bathroom)\\n(has_plug phone)\\n(has_switch phone)\\n(body_part hair)\\n(cuttable hair)\\n(inside_room hair bathroom)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n) \\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (movable ?obj))))\\n) \\n(:action walk_towards\\n:parameters (?char - character ?dest - object)\\n:precondition (and (not (next_to ?char ?dest)) (not (inside ?char ?dest)))\\n:effect (and (next_to ?char ?dest) (not (inside ?char bathroom))))\\n)\"}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office phone - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(grabbable phone)\\n(inside character bedroom)\\n(has_plug phone)\\n(has_switch phone)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (obj_inside ?obj home_office))))\\n) \\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (inside ?char ?obj)))\"}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbedroom home_office phone - object\\n)\\n(:init\\n(obj_inside phone home_office)\\n(grabbable phone)\\n(inside character bedroom)\\n(has_plug phone)\\n(has_switch phone)\\n(movable phone)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj))))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (obj_inside ?obj home_office))))\\n) \\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (not (next_to ?char ?obj)) (not (inside ?char ?obj)))\\n:effect (and (next_to ?char ?obj) (inside ?char ?obj)))\"}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nhome_office phone desk mouse keyboard cpuscreen bedroom mousepad - object\\n)\\n(:init\\n(obj_next_to cpuscreen mousepad)\\n(grabbable phone)\\n(obj_inside mouse home_office)\\n(movable mousepad)\\n(obj_next_to mousepad mouse)\\n(obj_next_to mousepad desk)\\n(has_switch phone)\\n(grabbable mouse)\\n(surfaces mousepad)\\n(obj_next_to desk keyboard)\\n(obj_next_to phone desk)\\n(surfaces desk)\\n(has_plug keyboard)\\n(obj_next_to desk mouse)\\n(movable phone)\\n(inside_room mousepad bedroom)\\n(obj_inside phone home_office)\\n(obj_next_to mouse desk)\\n(obj_next_to mouse mousepad)\\n(obj_ontop phone desk)\\n(obj_ontop keyboard desk)\\n(obj_next_to keyboard mouse)\\n(obj_next_to cpuscreen mouse)\\n(grabbable keyboard)\\n(inside_room cpuscreen bedroom)\\n(obj_next_to desk cpuscreen)\\n(obj_inside keyboard home_office)\\n(obj_ontop mousepad desk)\\n(obj_next_to mousepad keyboard)\\n(obj_inside mousepad home_office)\\n(obj_next_to mouse keyboard)\\n(obj_next_to cpuscreen desk)\\n(has_plug mouse)\\n(obj_inside cpuscreen home_office)\\n(inside_room mouse bedroom)\\n(obj_next_to mousepad cpuscreen)\\n(obj_next_to mouse cpuscreen)\\n(obj_ontop mouse desk)\\n(obj_inside desk home_office)\\n(obj_next_to desk phone)\\n(inside character bedroom)\\n(has_plug phone)\\n(movable mouse)\\n(movable desk)\\n(inside_room keyboard bedroom)\\n(obj_next_to cpuscreen keyboard)\\n(obj_ontop cpuscreen desk)\\n(obj_next_to keyboard mousepad)\\n(movable keyboard)\\n(obj_next_to desk mousepad)\\n(obj_next_to keyboard desk)\\n(obj_ontop mouse mousepad)\\n(inside_room desk bedroom)\\n(obj_next_to keyboard cpuscreen)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) )\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) )\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) )\\n:effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)) )\\n)\"}"
    },
    {
        "identifier": "99_2",
        "llm_output": "{\n\"output\": \"(define (problem Pick_up_phone)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nmat phone door trashcan light powersocket doorjamb table drawing wall_clock wall ceiling floor - object\\n)\\n(:init\\n(obj_next_to mat wall)\\n(obj_next_to phone doorjamb)\\n(facing wall drawing)\\n(obj_next_to wall powersocket)\\n(grabbable phone)\\n(has_plug light)\\n(obj_next_to drawing doorjamb)\\n(obj_next_to floor mat)\\n(lookable wall_clock)\\n(surfaces mat)\\n(obj_next_to floor trashcan)\\n(facing light wall_clock)\\n(obj_next_to doorjamb mat)\\n(obj_next_to door light)\\n(obj_next_to floor light)\\n(facing drawing drawing)\\n(obj_next_to mat light)\\n(obj_next_to light wall)\\n(obj_next_to wall door)\\n(obj_next_to wall_clock trashcan)\\n(obj_next_to door wall_clock)\\n(obj_next_to light mat)\\n(obj_next_to ceiling phone)\\n(obj_next_to light drawing)\\n(obj_next_to wall trashcan)\\n(obj_next_to door powersocket)\\n(grabbable wall_clock)\\n(facing trashcan drawing)\\n(obj_next_to floor drawing)\\n(obj_next_to wall light)\\n(obj_next_to floor door)\\n(obj_next_to light wall_clock)\\n(obj_next_to doorjamb light)\\n(obj_next_to floor powersocket)\\n(cuttable drawing)\\n(facing door drawing)\\n(obj_next_to light floor)\\n(obj_ontop table mat)\\n(obj_next_to trashcan light)\\n(obj_next_to phone light)\\n(obj_ontop ceiling wall)\\n(obj_next_to mat drawing)\\n(obj_next_to drawing wall_clock)\\n(obj_next_to trashcan wall)\\n(obj_next_to light doorjamb)\\n(obj_next_to door phone)\\n(obj_next_to phone door)\\n(obj_next_to wall mat)\\n(obj_next_to drawing table)\\n(obj_next_to trashcan powersocket)\\n(obj_next_to table drawing)\\n(facing ceiling wall_clock)\\n(obj_next_to phone powersocket)\\n(obj_next_to door drawing)\\n(surfaces floor)\\n(obj_next_to drawing drawing)\\n(obj_next_to doorjamb phone)\\n(obj_next_to wall_clock wall)\\n(obj_next_to wall ceiling)\\n(obj_next_to floor phone)\\n(obj_next_to wall_clock light)\\n(obj_next_to table wall)\\n(obj_ontop doorjamb floor)\\n(obj_next_to trashcan phone)\\n(containers trashcan)\\n(obj_next_to phone wall)\\n(obj_next_to light light)\\n(facing powersocket wall_clock)\\n(sittable mat)\\n(obj_next_to doorjamb wall)\\n(has_switch wall_clock)\\n(obj_next_to wall doorjamb)\\n(obj_ontop phone table)\\n(obj_next_to doorjamb trashcan)\\n(obj_next_to doorjamb drawing)\\n(lookable drawing)\\n(movable table)\\n(facing door wall_clock)\\n(obj_next_to trashcan door)\\n(obj_ontop drawing wall)\\n(grabbable mat)\\n(can_open trashcan)\\n(obj_ontop mat table)\\n(facing table drawing)\\n(obj_next_to doorjamb ceiling)\\n(obj_ontop table floor)\\n(obj_next_to doorjamb door)\\n(facing floor wall_clock)\\n(obj_next_to mat floor)\\n(obj_next_to drawing phone)\\n(obj_next_to drawing door)\\n(obj_next_to wall_clock doorjamb)\\n(facing powersocket drawing)\\n(obj_next_to drawing wall)\\n(obj_next_to wall phone)\\n(obj_next_to mat mat)\\n(obj_next_to table mat)\\n(facing phone drawing)\\n(facing wall wall_clock)\\n(obj_next_to powersocket trashcan)\\n(obj_next_to powersocket door)\\n(obj_next_to powersocket phone)\\n(surfaces table)\\n(obj_next_to powersocket drawing)\\n(obj_ontop door floor)\\n(obj_next_to light door)\\n(movable wall_clock)\\n(obj_next_to drawing floor)\\n(movable mat)\\n(obj_next_to phone table)\\n(movable phone)\\n(obj_next_to phone drawing)\\n(movable trashcan)\\n(obj_next_to drawing ceiling)\\n(obj_next_to powersocket light)\\n(obj_next_to door floor)\\n(facing wall_clock drawing)\\n(facing doorjamb wall_clock)\\n(lieable mat)\\n(facing light drawing)\\n(obj_next_to phone wall_clock)\\n(obj_next_to light ceiling)\\n(obj_next_to table phone)\\n(obj_next_to powersocket wall)\\n(obj_next_to ceiling wall_clock)\\n(obj_next_to floor floor)\\n(facing mat drawing)\\n(obj_next_to drawing powersocket)\\n(obj_next_to wall drawing)\\n(obj_next_to drawing mat)\\n(obj_next_to door wall)\\n(obj_next_to wall wall_clock)\\n(obj_next_to drawing light)\\n(obj_next_to wall floor)\\n(obj_next_to floor table)\\n(obj_next_to trashcan doorjamb)\\n(obj_next_to wall_clock door)\\n(obj_next_to light powersocket)\\n(movable drawing)\\n(obj_next_to ceiling ceiling)\\n(facing ceiling drawing)\\n(obj_next_to phone floor)\\n(obj_next_to door trashcan)\\n(has_paper drawing)\\n(obj_next_to powersocket doorjamb)\\n(has_switch light)\\n(obj_next_to floor wall)\\n(obj_next_to doorjamb wall_clock)\\n(obj_next_to ceiling wall)\\n(has_switch phone)\\n(can_open door)\\n(obj_next_to wall table)\\n(obj_next_to powersocket floor)\\n(facing floor drawing)\\n(obj_next_to ceiling doorjamb)\\n(facing mat wall_clock)\\n(obj_next_to wall wall)\\n(obj_next_to light phone)\\n(obj_next_to phone trashcan)\\n(obj_next_to door doorjamb)\\n(obj_next_to mat table)\\n(obj_next_to trashcan floor)\\n(obj_next_to doorjamb powersocket)\\n(obj_next_to ceiling drawing)\\n(obj_next_to mat door)\\n(grabbable drawing)\\n(obj_next_to doorjamb floor)\\n(obj_next_to floor doorjamb)\\n(obj_next_to trashcan drawing)\\n(has_plug wall_clock)\\n(obj_next_to table floor)\\n(obj_next_to phone ceiling)\\n(obj_next_to light trashcan)\\n(obj_next_to wall_clock phone)\\n(obj_next_to trashcan wall_clock)\\n(facing phone wall_clock)\\n(obj_next_to mat doorjamb)\\n(obj_next_to wall_clock drawing)\\n(facing doorjamb drawing)\\n(has_plug phone)\\n(obj_next_to door mat)\\n(obj_next_to wall_clock ceiling)\\n(obj_next_to drawing trashcan)\\n(obj_next_to ceiling light)\\n)\\n(:goal\\n(and\\n(holds_rh character phone)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n:effect (and (next_to ?obj ?char) (not (next_to ?char ?obj)))\"}"
    },
    {
        "identifier": "183_2",
        "llm_output": "{\n\"output\": \"( :action put_on \\n:parameters ( ?char - character ?obj1 - object ?obj2 - object ) \\n:precondition ( and ( grabbable ?obj1 ) ( next_to ?char ?obj1 ) ( sittable ?obj2 ) ( next_to ?char ?obj2 ) ) \\n:effect ( and ( not ( grabbable ?obj1 ) ) ( on ?obj1 ?obj2 ) ( next_to ?char ?obj2 ) ) ) \\n \\n:action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room1 - object ) ( next_to ?room1 ?room2 - object ) ( not ( inside ?char ?room2 ) ) ) \\n:effect ( and ( inside ?char ?room2 ) ( not ( inside ?char ?room1 ) ) ) ) \\n \\n:action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ( not ( off ?obj ) ) ) ) \\n \\n:action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( grabbable ?obj ) ) ) ) \\n \\n:action close \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( not ( closed ?obj ) ) ) \\n:effect ( and ( closed ?obj ) ( not ( open ?obj ) ) ) ) \\n \\n:action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( closed ?obj ) ) \\n:effect ( and ( open ?obj ) ( not ( closed ?obj ) ) ) ) \\n\"}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{\n\"output\": \n\"(\n:action put_on \\n\n:parameters ( ?char - character ?obj1 - object ?obj2 - object ) \\n\n:precondition ( and ( grabbable ?obj1 ) ( next_to ?char ?obj1 ) ( next_to ?char ?obj2 ) ) \\n\n:effect ( and ( on ?obj1 ?obj2 ) ( not ( next_to ?char ?obj1 ) ) ) \\n\n) \\n\n( \\n\n:action walk_towards \\n\n:parameters ( ?char - character ?obj - object ) \\n\n:precondition ( and ( inside ?char ?room_from - object ) ( obj_next_to ?room_from ?room_to - object ) ( not ( inside ?char ?room_to ) ) ) \\n\n:effect ( and ( inside ?char ?room_to ) ( not ( inside ?char ?room_from ) ) ) \\n\n) \\n\n( \\n\n:action switch_on \\n\n:parameters ( ?char - character ?obj - object ) \\n\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n\n:effect ( and ( on ?obj ) ( not ( off ?obj ) ) ) \\n\n) \\n\n( \\n\n:action grab \\n\n:parameters ( ?char - character ?obj - object ) \\n\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n\n:effect ( holds_rh ?char ?obj ) \\n\n) \\n\n( \\n\n:action close \\n\n:parameters ( ?char - character ?obj - object ) \\n\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( not ( closed ?obj ) ) ) \\n\n:effect ( and ( closed ?obj ) ( not ( open ?obj ) ) ) \\n\n) \\n\n( \\n\n:action open \\n\n:parameters ( ?char - character ?obj - object ) \\n\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( closed ?obj ) ) \\n\n:effect ( and ( open ?obj ) ( not ( closed ?obj ) ) ) \\n\n) \\n\n\"}"
    },
    {
        "identifier": "310_2",
        "llm_output": "{\n\"output\": \"(define (problem Make_coffee)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nbathroom ground_coffee water coffe_maker coffee_filter dining_room - object\\n)\\n(:init\\n(inside_room water dining_room)\\n(obj_next_to coffe_maker coffee_filter)\\n(has_paper coffee_filter)\\n(inside_room ground_coffee dining_room)\\n(recipient coffe_maker)\\n(has_plug coffe_maker)\\n(pourable water)\\n(closed coffe_maker)\\n(has_switch coffe_maker)\\n(obj_next_to ground_coffee coffee_filter)\\n(obj_next_to coffee_filter ground_coffee)\\n(movable ground_coffee)\\n(clean coffe_maker)\\n(off coffe_maker)\\n(containers coffe_maker)\\n(movable coffee_filter)\\n(inside_room coffee_filter dining_room)\\n(obj_next_to coffe_maker water)\\n(inside_room coffe_maker dining_room)\\n(drinkable water)\\n(can_open coffe_maker)\\n(obj_inside water coffe_maker)\\n(inside character bathroom)\\n(grabbable ground_coffee)\\n(obj_inside ground_coffee coffe_maker)\\n(obj_next_to coffee_filter coffe_maker)\\n(can_open ground_coffee)\\n(grabbable coffee_filter)\\n(plugged_in coffe_maker)\\n(obj_next_to water coffe_maker)\\n(movable coffe_maker)\\n)\\n(:goal\\n(and\\n(closed coffe_maker)\\n(on coffe_maker)\\n(plugged_in coffe_maker)\\n(obj_ontop ground_coffee coffe_maker)\\n(obj_ontop coffee_filter coffe_maker)\\n)\\n)\\n)\\n(:action switch_off\\n:parameters (?char - character ?obj - object)\\n:precondition (and (on ?obj) (next_to ?char ?obj))\\n:effect (not (on ?obj))\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (next_to ?char ?obj2))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj)))\\n:effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (off ?obj) (next_to ?char ?obj))\\n:effect (on ?obj)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (open ?obj) (next_to ?char ?obj))\\n:effect (closed ?obj)\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (next_to ?char ?obj))\\n:effect (open ?obj)\\n)\\n)\"}"
    },
    {
        "identifier": "721_2",
        "llm_output": "{\n\"output\": \"(define (problem Make_coffee)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\ncoffe_maker coffee_filter water ground_coffee - object\\n)\\n(:init\\n(obj_next_to water ground_coffee)\\n(has_paper coffee_filter)\\n(plugged_out coffe_maker)\\n(recipient coffe_maker)\\n(has_plug coffe_maker)\\n(pourable water)\\n(closed coffe_maker)\\n(has_switch coffe_maker)\\n(movable ground_coffee)\\n(clean coffe_maker)\\n(off coffe_maker)\\n(containers coffe_maker)\\n(obj_inside coffee_filter coffe_maker)\\n(movable coffee_filter)\\n(obj_next_to coffe_maker water)\\n(drinkable water)\\n(obj_next_to water coffee_filter)\\n(can_open coffe_maker)\\n(obj_inside water coffe_maker)\\n(obj_next_to ground_coffee water)\\n(obj_next_to coffee_filter water)\\n(grabbable ground_coffee)\\n(obj_inside ground_coffee coffe_maker)\\n(can_open ground_coffee)\\n(grabbable coffee_filter)\\n(obj_next_to water coffe_maker)\\n(movable coffe_maker)\\n)\\n(:goal\\n(and\\n(closed coffe_maker)\\n(on coffe_maker)\\n(plugged_in coffe_maker)\\n(obj_ontop ground_coffee coffe_maker)\\n(obj_ontop coffee_filter coffe_maker)\\n)\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (movable ?obj1) (sittable ?obj2) (next_to ?char ?obj2))\\n:effect (and (not (holds_rh ?char ?obj1)) (obj_ontop ?obj1 ?obj2) (on ?obj1))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (next_to ?obj1 ?obj) (not (= ?obj1 ?obj)))\\n:effect (and (not (next_to ?obj1 ?obj)) (next_to ?char ?obj))\\n)\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n:effect (and (not (off ?obj)) (on ?obj))\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj) (not (grabbable ?obj)))\\n)\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n:effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n:effect (and (not (open ?obj)) (closed ?obj))\\n)\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n:effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n)\"}"
    },
    {
        "identifier": "764_2",
        "llm_output": "{\n\"output\": \"( :action put_on \\n:parameters ( ?char - character ?obj1 - object ?obj2 - object ) \\n:precondition ( and ( grabbable ?obj1 ) ( next_to ?char ?obj1 ) ( sittable ?obj2 ) ( next_to ?char ?obj2 ) ) \\n:effect ( and ( not ( grabbable ?obj1 ) ) ( on ?obj1 ?obj2 ) ( next_to ?char ?obj2 ) ) ) \\n \\n:action walk_towards \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( inside ?char ?room1 - object ) ( next_to ?room1 ?room2 - object ) ( not ( inside ?char ?room2 ) ) ) \\n:effect ( and ( inside ?char ?room2 ) ( not ( inside ?char ?room1 ) ) ) ) \\n \\n:action switch_on \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( has_switch ?obj ) ( off ?obj ) ) \\n:effect ( and ( on ?obj ) ( not ( off ?obj ) ) ) ) \\n \\n:action grab \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( grabbable ?obj ) ( next_to ?char ?obj ) ) \\n:effect ( and ( holds_rh ?char ?obj ) ( not ( grabbable ?obj ) ) ) ) \\n \\n:action close \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( not ( closed ?obj ) ) ) \\n:effect ( and ( closed ?obj ) ( not ( open ?obj ) ) ) ) \\n \\n:action open \\n:parameters ( ?char - character ?obj - object ) \\n:precondition ( and ( next_to ?char ?obj ) ( can_open ?obj ) ( closed ?obj ) ) \\n:effect ( and ( open ?obj ) ( not ( closed ?obj ) ) ) ) \\n\"}"
    },
    {
        "identifier": "419_2",
        "llm_output": "{\n\"output\": \"(define (problem Set-up-table)\\n(:domain virtualhome)\\n(:objects\\ncharacter - character\\nmat knife fork cup table bedroom chair cloth_napkin plate dining_room - object\\n)\\n(:init\\n(inside_room plate dining_room)\\n(obj_next_to fork table)\\n(recipient plate)\\n(surfaces chair)\\n(surfaces table)\\n(recipient cup)\\n(cuttable cloth_napkin)\\n(inside_room cloth_napkin dining_room)\\n(movable cup)\\n(inside_room cup dining_room)\\n(inside_room chair dining_room)\\n(surfaces mat)\\n(obj_next_to table cloth_napkin)\\n(movable mat)\\n(obj_next_to table plate)\\n(movable chair)\\n(grabbable cup)\\n(obj_next_to table cup)\\n(inside_room knife dining_room)\\n(grabbable plate)\\n(sittable chair)\\n(obj_next_to table fork)\\n(grabbable fork)\\n(obj_next_to table knife)\\n(inside_room mat dining_room)\\n(movable fork)\\n(sittable mat)\\n(obj_next_to mat table)\\n(inside_room fork dining_room)\\n(has_paper cloth_napkin)\\n(movable table)\\n(surfaces plate)\\n(grabbable mat)\\n(lieable mat)\\n(obj_ontop mat table)\\n(obj_next_to plate table)\\n(movable cloth_napkin)\\n(obj_next_to cloth_napkin table)\\n(grabbable cloth_napkin)\\n(inside_room table bedroom)\\n(inside_room chair bedroom)\\n(obj_next_to chair table)\\n(grabbable chair)\\n(movable knife)\\n(inside_room table dining_room)\\n(obj_next_to table chair)\\n(obj_ontop table mat)\\n(obj_next_to chair mat)\\n(grabbable knife)\\n(obj_next_to mat chair)\\n(movable plate)\\n(inside character bedroom)\\n(inside_room mat bedroom)\\n(cover_object cloth_napkin)\\n(obj_next_to mat mat)\\n(obj_next_to table mat)\\n(obj_next_to knife table)\\n(pourable cup)\\n(obj_next_to cup table)\\n)\\n(:goal\\n(and\\n(obj_ontop plate table)\\n(obj_ontop cloth_napkin table)\\n(obj_ontop fork table)\\n(obj_ontop knife table)\\n(obj_ontop cup table)\\n)\\n)\\n)\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)))\\n:effect (and (when (grabbable ?obj) (holds_lh ?char ?obj)) (when (grabbable ?obj) (holds_rh ?char ?obj)))\\n)\\n(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_lh ?char ?obj1) (or (sittable ?obj2) (lieable ?obj2)) (next_to ?char ?obj2))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_lh ?char ?obj1)) (not (next_to ?char ?obj1)))\\n)\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside character bedroom) (inside_room ?obj bedroom) (not (next_to ?char ?obj)))\\n:effect (and (inside character bedroom) (not (inside_room ?obj bedroom)) (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "446_2",
        "llm_output": "{\n\"output\": \"(define (problem Set_up_table)\\n    (:domain virtualhome)\\n    (:objects\\n    character - character\\n    mat home_office table cupboard plate dining_room - object\\n)\\n    (:init\\n    (inside_room plate dining_room)\\n    (recipient plate)\\n    (surfaces table)\\n    (surfaces mat)\\n    (movable mat)\\n    (obj_next_to plate cupboard)\\n    (grabbable plate)\\n    (obj_inside mat home_office)\\n    (closed cupboard)\\n    (inside_room mat dining_room)\\n    (sittable mat)\\n    (obj_next_to mat table)\\n    (movable table)\\n    (clean cupboard)\\n    (inside_room cupboard dining_room)\\n    (surfaces plate)\\n    (grabbable mat)\\n    (lieable mat)\\n    (obj_ontop mat table)\\n    (containers cupboard)\\n    (can_open cupboard)\\n    (inside_room table dining_room)\\n    (obj_ontop table mat)\\n    (obj_inside plate cupboard)\\n    (movable plate)\\n    (obj_inside table home_office)\\n    (obj_next_to mat mat)\\n    (obj_next_to table mat)\\n    (obj_next_to cupboard plate)\\n    (inside character home_office)\\n)\\n    (:goal\\n    (and\\n        (obj_ontop plate table)\\n    )\\n)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (closed ?obj) (can_open ?obj))\\n  :effect (not (closed ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (holds_rh ?char ?obj)\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (holds_rh ?char ?obj1) (sittable ?obj2) (next_to ?char ?obj2))\\n  :effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{\n\"output\": \"(:action open \\n:parameters (?char - character ?obj - object)\\n:precondition (and (closed ?obj) (next_to ?char ?obj) (can_open ?obj))\\n:effect (not (closed ?obj))\\n)\\n(:action grab \\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (holds_rh ?char ?obj)\\n)\\n(:action put_on \\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and (holds_rh ?char ?obj1) (sittable ?obj2) (next_to ?char ?obj2))\\n:effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards \\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "368_1",
        "llm_output": "{\n\"output\": \n\"::action walk_into\\n:parameters (?char - character ?room - object)\\n:precondition (and (inside ?char ?room))\\n:effect (and (not (inside ?char ?room)) (inside ?char ?room))\\n\\n\"}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (different ?room ?obj) (inside_room ?obj ?room2) (connected ?room ?room2))\\n:effect (and (not (inside ?char ?room)) (next_to ?char ?obj) (inside ?char ?room2))\\n\\n\"}"
    },
    {
        "identifier": "975_2",
        "llm_output": "{\n\"output\": \n\"::action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (inside ?char ?room) (obj_inside ?obj ?room) (different ?char ?obj) (not (next_to ?char ?obj)))\\n:effect (and (not (inside ?char ?room)) (not (obj_inside ?obj ?room)) (next_to ?char ?obj))\\n\\n\"}"
    }
]