[
    {
        "identifier": "27_2",
        "llm_output": "{ \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition (or \n                (and \n                  (grabbable ?obj1) \n                  (next_to ?char ?obj2) \n                ) \n                (and \n                  (grabbable ?obj2) \n                  (next_to ?char ?obj1) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj1)(not (grabbable ?obj1))) \n             (when (grabbable ?obj2)(not (grabbable ?obj2))) \n             (obj_ontop ?obj1 ?obj2) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?char) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj)(not (movable ?obj))) \n             (when (movable ?char)(not (movable ?char))) \n             (next_to ?char ?obj) \n           ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?char) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (has_switch ?obj)(not (has_switch ?obj))) \n             (when (has_switch ?char)(not (has_switch ?char))) \n             (on ?obj) \n           ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?char) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj)(not (grabbable ?obj))) \n             (when (grabbable ?char)(not (grabbable ?char))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (can_open ?char) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (can_open ?obj)(not (can_open ?obj))) \n             (when (can_open ?char)(not (can_open ?char))) \n             (closed ?obj) \n           ) \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (can_open ?char) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (can_open ?obj)(not (can_open ?obj))) \n             (when (can_open ?char)(not (can_open ?char))) \n             (open ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "417_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (closed ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (closed ?obj) \n      ) \n    ) \n    :effect (and \n      (when (closed ?obj) (not (closed ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (open ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (open ?obj) \n      ) \n    ) \n    :effect (and \n      (when (open ?obj) (not (open ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "850_1",
        "llm_output": "{ \n(:action switch_off \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition () \n  :effect () \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n}"
    },
    {
        "identifier": "954_2",
        "llm_output": "{ \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (obj_ontop ?obj1 ?obj2)) \n      (when (movable ?obj2) (obj_ontop ?obj2 ?obj1)) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (not (next_to ?char ?obj)) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n    :effect (and \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (not (next_to ?char ?obj)) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n    :effect (and \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (and \n      (can_open ?obj) \n      (next_to ?char ?obj) \n    ) \n    :effect (and \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_plug ?obj)\n        (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (when (plugged_out ?obj) (not (plugged_out ?obj)))\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (movable ?obj)\n        (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char ?obj) (not (inside ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_switch ?obj)\n        (plugged_in ?obj)\n        (off ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj) (not (off ?obj)))\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "120_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (clean ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "125_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?char light) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (obj_next_to ?char light) \n                ) \n              )\n  :effect (and \n             (next_to ?char light) \n             (not (inside ?char bathroom)) \n             (not (inside ?char home_office)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (plugged_in light) \n                  (has_switch light) \n                  (next_to ?char light) \n                )\n  :effect (and \n             (on light) \n             (not (off light)) \n           )\n)"
    },
    {
        "identifier": "160_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_inside ?char ?obj)\n    )\n  )\n  :effect (next_to ?char ?obj)\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (obj_inside ?char ?obj)\n    )\n  )\n  :effect (on ?obj)\n)"
    },
    {
        "identifier": "180_2",
        "llm_output": "{ \"output\": \n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char bathroom)\n      (sitting ?char)\n    )\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char dining_room)\n      (sitting ?char)\n    )\n  )\n  :effect (and\n    (when (off ?obj) (not (off ?obj)))\n    (on ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action standup\n  :parameters (?char - character)\n  :precondition (and\n    (sitting ?char)\n  )\n  :effect (and\n    (not (sitting ?char))\n  )\n)"
    },
    {
        "identifier": "205_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (obj_inside ?obj home_office) \n                ) \n                (and \n                  (inside ?char bedroom) \n                  (obj_inside ?obj bedroom) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n             (not (inside ?char home_office)) \n             (not (inside ?char bedroom)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (has_plug ?obj) \n                  (obj_next_to ?obj ?obj) \n                  (inside ?char home_office) \n                  (obj_inside ?obj home_office) \n                )\n  :effect (and \n             (on ?obj) \n             (plugged_in ?obj) \n           )\n)"
    },
    {
        "identifier": "222_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (next_to ?char ?obj)\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (on ?obj)\n)"
    },
    {
        "identifier": "232_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char ?obj)\n      (movable ?obj)\n    )\n    (and\n      (next_to ?char ?obj)\n      (movable ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char ?obj)(not (inside ?char ?obj))) \n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (obj_next_to ?char ?obj) \n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(not (off ?obj))) \n    (when (on ?obj)(not (on ?obj))) \n    (on ?obj) \n  )\n)\n\n}"
    },
    {
        "identifier": "310_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (obj_next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                )\n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (on ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "311_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (inside ?char bathroom) \n      ) \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (inside ?char home_office) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char bathroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char bathroom) (not (inside ?char bathroom))) \n      (when (inside ?char home_office) (not (inside ?char home_office))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n        (inside ?char bathroom) \n      ) \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n        (inside ?char home_office) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "331_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bedroom)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (next_to ?char ?obj)\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (plugged_in ?obj)\n    (has_switch ?obj)\n    (off ?obj)\n  )\n  :effect (and\n    (on ?obj)\n    (not (off ?obj))\n  )\n)\n\n}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                )\n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (on ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "392_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                ) \n              )\n  :effect (and \n             (on ?obj) \n             (plugged_in ?obj) \n           )\n)"
    },
    {
        "identifier": "394_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                ) \n              )\n  :effect (and \n             (on ?obj) \n             (plugged_in ?obj) \n           )\n)"
    },
    {
        "identifier": "432_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (inside ?char bathroom) \n      ) \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (inside ?char home_office) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char bathroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char bathroom) (not (inside ?char bathroom))) \n      (when (inside ?char home_office) (not (inside ?char home_office))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n        (inside ?char bathroom) \n      ) \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n        (inside ?char home_office) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_plug ?obj)\n        (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (when (plugged_out ?obj) (not (plugged_out ?obj)))\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (movable ?obj)\n        (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char ?obj) (not (inside ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_switch ?obj)\n        (plugged_in ?obj)\n        (off ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj) (not (off ?obj)))\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "445_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bedroom)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (plugged_in ?obj)\n    (has_switch ?obj)\n    (inside ?char bedroom)\n    (obj_next_to ?char ?obj)\n  )\n  :effect (and\n    (on ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                ) \n              )\n  :effect (and \n             (on ?obj) \n             (plugged_in ?obj) \n           )\n)"
    },
    {
        "identifier": "585_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (obj_next_to ?char floor_lamp)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char light)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (plugged_in ?obj)\n    (has_switch ?obj)\n    (next_to ?char ?obj)\n  )\n  :effect (and\n    (on ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "604_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (when (obj_next_to ?char ?obj) (obj_next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (on ?obj)) \n             (when (off ?obj) (plugged_in ?obj)) \n           )\n)"
    },
    {
        "identifier": "616_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                ) \n              )\n  :effect (and \n             (on ?obj) \n             (plugged_in ?obj) \n           )\n)"
    },
    {
        "identifier": "705_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_plug ?obj)\n        (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (movable ?obj)\n        (inside ?char bedroom)\n        (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n        (has_switch ?obj)\n        (plugged_in ?obj)\n        (off ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "708_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (next_to ?char ?obj)\n    )\n    (and\n      (inside ?char bedroom)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char bathroom)\n      (next_to ?char ?obj)\n    )\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char bedroom)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "715_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_plug ?obj)\n      (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (off ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "737_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (next_to ?char ?obj)\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (plugged_in ?obj)\n      (has_switch ?obj)\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (on ?obj)\n)"
    },
    {
        "identifier": "780_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n    (inside ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj) (on ?obj))\n    (when (on ?obj) (off ?obj))\n  )\n)"
    },
    {
        "identifier": "812_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (on ?obj)) \n             (when (off ?obj) (on ?obj)) \n           )\n)"
    },
    {
        "identifier": "835_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_plug ?obj)\n      (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (not (off ?obj))\n  )\n) }"
    },
    {
        "identifier": "85_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?char light) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (obj_inside light home_office) \n                ) \n              )\n  :effect (and \n             (next_to ?char light) \n             (not (inside ?char bathroom)) \n             (not (inside ?char home_office)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (plugged_in light) \n                  (has_switch light) \n                  (next_to ?char light) \n                )\n  :effect (and \n             (on light) \n             (not (off light)) \n           )\n)"
    },
    {
        "identifier": "874_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?char light) \n                ) \n                (and \n                  (inside ?char bedroom) \n                  (obj_next_to ?char light) \n                ) \n              )\n  :effect (and \n             (next_to ?char light) \n             (not (inside ?char bathroom)) \n             (not (inside ?char bedroom)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (plugged_in light) \n                  (has_switch light) \n                  (next_to ?char light) \n                )\n  :effect (and \n             (on light) \n             (not (off light)) \n           )\n)"
    },
    {
        "identifier": "491_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (holds_lh ?char ?obj)\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n  )\n)\n\n}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{ \"output\": \n(:action grab_toothbrush\n  :parameters (?char - character ?toothbrush - object)\n  :precondition (or\n    (and\n      (movable ?toothbrush)\n      (inside ?char home_office)\n      (next_to ?char ?toothbrush)\n    )\n    (and\n      (movable ?toothbrush)\n      (inside ?char home_office)\n      (next_to ?char ?toothbrush)\n    )\n  )\n  :effect (and\n    (when (movable ?toothbrush)(not (movable ?toothbrush))) \n    (holds_lh ?char ?toothbrush) \n  )\n)\n\n(:action grab_toothpaste\n  :parameters (?char - character ?toothpaste - object)\n  :precondition (or\n    (and\n      (movable ?toothpaste)\n      (inside ?char home_office)\n      (next_to ?char ?toothpaste)\n    )\n    (and\n      (movable ?toothpaste)\n      (inside ?char home_office)\n      (next_to ?char ?toothpaste)\n    )\n  )\n  :effect (and\n    (when (movable ?toothpaste)(not (movable ?toothpaste))) \n    (holds_rh ?char ?toothpaste) \n  )\n)\n\n(:action walk_towards_toothbrush\n  :parameters (?char - character ?toothbrush - object)\n  :precondition (or\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?toothbrush)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?toothbrush)\n    )\n  )\n  :effect (and\n    (next_to ?char ?toothbrush) \n  )\n)\n\n(:action walk_towards_toothpaste\n  :parameters (?char - character ?toothpaste - object)\n  :precondition (or\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?toothpaste)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?toothpaste)\n    )\n  )\n  :effect (and\n    (next_to ?char ?toothpaste) \n  )\n)"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{ \"output\": \n(:action open_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (when (closed freezer)(not (closed freezer))) \n    (when (plugged_in freezer)(not (plugged_in freezer))) \n    (open freezer) \n  )\n)\n\n(:action put_food_in_freezer\n  :parameters (?char - character ?food_food - object)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (when (obj_inside food_food freezer)(not (obj_inside food_food freezer))) \n    (when (obj_next_to food_food freezer)(not (obj_next_to food_food freezer))) \n    (obj_inside food_food freezer) \n  )\n)\n\n(:action walk_towards_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bedroom)\n        (movable food_food)\n        (obj_next_to freezer food_food)\n        (inside_room freezer dining_room)\n        (obj_next_to food_food freezer)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (eatable food_food)\n        (has_switch freezer)\n        (cuttable food_food)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (when (inside character bedroom)(not (inside character bedroom))) \n    (when (inside character bedroom)(not (inside character bedroom))) \n    (inside character freezer) \n  )\n)"
    },
    {
        "identifier": "152_2",
        "llm_output": "{ \n\"output\": \n(:action put_inside\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (or \n                (and \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char ?obj2) \n                ) \n                (and \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char ?obj2) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (obj_inside ?obj1 ?obj2) \n           ) \n) \n(:action open\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (open ?obj) \n           ) \n) \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?char) \n                  (obj_next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?char) \n                  (obj_next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (movable ?char) (not (movable ?char))) \n             (when (movable ?char) (not (movable ?char))) \n             (next_to ?char ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "298_2",
        "llm_output": "{ \n\"output\": \n(:action put_inside\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (or \n                (and \n                  (has_plug ?obj2) \n                  (inside_room ?obj1 ?obj2) \n                  (can_open ?obj2) \n                  (grabbable ?obj1) \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (has_plug ?obj2) \n                  (inside_room ?obj1 ?obj2) \n                  (can_open ?obj2) \n                  (grabbable ?obj1) \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char home_office) \n                ) \n              ) \n  :effect (and \n             (when (has_plug ?obj2) (not (has_plug ?obj2))) \n             (when (inside_room ?obj1 ?obj2) (not (inside_room ?obj1 ?obj2))) \n             (when (can_open ?obj2) (not (can_open ?obj2))) \n             (when (grabbable ?obj1) (not (grabbable ?obj1))) \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (when (obj_next_to ?char ?obj2) (not (obj_next_to ?char ?obj2))) \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (obj_inside ?obj1 ?obj2) \n           ) \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n              ) \n  :effect (and \n             (when (has_plug ?obj) (not (has_plug ?obj))) \n             (when (inside_room ?obj dining_room) (not (inside_room ?obj dining_room))) \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (open ?obj) \n           ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n              ) \n  :effect (and \n             (when (has_plug ?obj) (not (has_plug ?obj))) \n             (when (inside_room ?obj dining_room) (not (inside_room ?obj dining_room))) \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (inside_room ?obj dining_room) \n                  (can_open ?obj) \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                  (inside ?char home_office) \n                ) \n              ) \n  :effect (and \n             (when (has_plug ?obj) (not (has_plug ?obj))) \n             (when (inside_room ?obj dining_room) (not (inside_room ?obj dining_room))) \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (next_to ?char ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{ \"output\": \n(:action open_freezer\n  :parameters (?char - character ?freezer - object)\n  :precondition (or\n    (and\n        (has_plug ?freezer)\n        (inside_room ?freezer dining_room)\n        (can_open ?freezer)\n        (grabbable ?food_food)\n        (obj_inside ?food_food ?freezer)\n        (inside ?char bathroom)\n        (movable ?food_food)\n        (obj_next_to ?freezer ?food_food)\n        (inside_room ?freezer dining_room)\n        (obj_next_to ?food_food ?freezer)\n        (closed ?freezer)\n        (plugged_in ?freezer)\n        (clean ?freezer)\n        (eatable ?food_food)\n        (has_switch ?freezer)\n        (cuttable ?food_food)\n        (containers ?freezer)\n    )\n    (and\n        (has_plug ?freezer)\n        (inside_room ?freezer dining_room)\n        (can_open ?freezer)\n        (grabbable ?food_food)\n        (obj_inside ?food_food ?freezer)\n        (inside ?char bathroom)\n        (movable ?food_food)\n        (obj_next_to ?freezer ?food_food)\n        (inside_room ?freezer dining_room)\n        (obj_next_to ?food_food ?freezer)\n        (closed ?freezer)\n        (plugged_in ?freezer)\n        (clean ?freezer)\n        (eatable ?food_food)\n        (has_switch ?freezer)\n        (cuttable ?food_food)\n        (containers ?freezer)\n    )\n  )\n  :effect (and\n    (when (has_plug ?freezer)(not (has_plug ?freezer))) \n    (when (inside_room ?freezer dining_room)(not (inside_room ?freezer dining_room))) \n    (when (can_open ?freezer)(not (can_open ?freezer))) \n    (when (grabbable ?food_food)(not (grabbable ?food_food))) \n    (when (obj_inside ?food_food ?freezer)(not (obj_inside ?food_food ?freezer))) \n    (when (inside ?char bathroom)(not (inside ?char bathroom))) \n    (when (movable ?food_food)(not (movable ?food_food))) \n    (when (obj_next_to ?freezer ?food_food)(not (obj_next_to ?freezer ?food_food))) \n    (when (inside_room ?freezer dining_room)(not (inside_room ?freezer dining_room))) \n    (when (obj_next_to ?food_food ?freezer)(not (obj_next_to ?food_food ?freezer))) \n    (when (closed ?freezer)(not (closed ?freezer))) \n    (when (plugged_in ?freezer)(not (plugged_in ?freezer))) \n    (when (clean ?freezer)(not (clean ?freezer))) \n    (when (eatable ?food_food)(not (eatable ?food_food))) \n    (when (has_switch ?freezer)(not (has_switch ?freezer))) \n    (when (cuttable ?food_food)(not (cuttable ?food_food))) \n    (when (containers ?freezer)(not (containers ?freezer))) \n    (open ?freezer) \n    (plugged_in ?freezer) \n  )\n)"
    },
    {
        "identifier": "703_2",
        "llm_output": "{ \n\"output\": \n(:action put_inside\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (or \n                (and \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char ?obj2) \n                ) \n                (and \n                  (movable ?obj1) \n                  (obj_next_to ?char ?obj2) \n                  (inside ?char ?obj2) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (obj_inside ?obj1 ?obj2) \n           ) \n) \n(:action open\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (when (can_open ?obj) (not (can_open ?obj))) \n             (open ?obj) \n           ) \n) \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?char) \n                  (obj_next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?char) \n                  (obj_next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (movable ?char) (not (movable ?char))) \n             (when (movable ?char) (not (movable ?char))) \n             (next_to ?char ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{ \"output\": \n(:action open_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n      (has_switch freezer)\n      (plugged_in freezer)\n      (inside character bathroom)\n    )\n  )\n  :effect (and\n    (when (has_switch freezer)(not (has_switch freezer))) \n    (when (plugged_in freezer)(not (plugged_in freezer))) \n    (open freezer) \n  )\n)\n\n(:action walk_towards_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n      (inside character bathroom)\n      (obj_next_to character freezer)\n    )\n  )\n  :effect (and\n    (when (inside character bathroom)(not (inside character bathroom))) \n    (when (obj_next_to character freezer)(not (obj_next_to character freezer))) \n    (next_to character freezer) \n  )\n)\n\n(:action put_milk_in_freezer\n  :parameters (?char - character ?milk - object)\n  :precondition (or\n    (and\n      (grabbable milk)\n      (next_to ?char milk)\n      (inside character bathroom)\n      (obj_next_to freezer milk)\n    )\n  )\n  :effect (and\n    (when (grabbable milk)(not (grabbable milk))) \n    (when (next_to ?char milk)(not (next_to ?char milk))) \n    (obj_inside milk freezer) \n  )\n)\n\n(:action put_food_chicken_in_freezer\n  :parameters (?char - character ?food_chicken - object)\n  :precondition (or\n    (and\n      (grabbable food_chicken)\n      (next_to ?char food_chicken)\n      (inside character bathroom)\n      (obj_next_to freezer food_chicken)\n    )\n  )\n  :effect (and\n    (when (grabbable food_chicken)(not (grabbable food_chicken))) \n    (when (next_to ?char food_chicken)(not (next_to ?char food_chicken))) \n    (obj_inside food_chicken freezer) \n  )\n)\n\n(:action put_food_turkey_in_freezer\n  :parameters (?char - character ?food_turkey - object)\n  :precondition (or\n    (and\n      (grabbable food_turkey)\n      (next_to ?char food_turkey)\n      (inside character bathroom)\n      (obj_next_to freezer food_turkey)\n    )\n  )\n  :effect (and\n    (when (grabbable food_turkey)(not (grabbable food_turkey))) \n    (when (next_to ?char food_turkey)(not (next_to ?char food_turkey))) \n    (obj_inside food_turkey freezer) \n  )\n)\n\n(:action put_food_fish_in_freezer\n  :parameters (?char - character ?food_fish - object)\n  :precondition (or\n    (and\n      (grabbable food_fish)\n      (next_to ?char food_fish)\n      (inside character bathroom)\n      (obj_next_to freezer food_fish)\n    )\n  )\n  :effect (and\n    (when (grabbable food_fish)(not (grabbable food_fish))) \n    (when (next_to ?char food_fish)(not (next_to ?char food_fish))) \n    (obj_inside food_fish freezer) \n  )\n)\n\n(:action put_food_egg_in_freezer\n  :parameters (?char - character ?food_egg - object)\n  :precondition (or\n    (and\n      (grabbable food_egg)\n      (next_to ?char food_egg)\n      (inside character bathroom)\n      (obj_next_to freezer food_egg)\n    )\n  )\n  :effect (and\n    (when (grabbable food_egg)(not (grabbable food_egg))) \n    (when (next_to ?char food_egg)(not (next_to ?char food_egg))) \n    (obj_inside food_egg freezer) \n  )\n}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{ \n  (:action put_inside \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (obj_next_to ?char ?obj1) \n        (movable ?obj1) \n        (obj_ontop ?obj1 ?obj2) \n      ) \n      (and \n        (obj_next_to ?char ?obj1) \n        (movable ?obj1) \n        (inside ?obj1 ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (obj_ontop ?obj1 ?obj2) (not (obj_ontop ?obj1 ?obj2))) \n      (when (inside ?obj1 ?obj2) (not (inside ?obj1 ?obj2))) \n      (obj_inside ?obj1 ?obj2) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (not (open ?obj)) \n      ) \n      (and \n        (can_open ?obj) \n        (not (open ?obj)) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (inside ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (when (inside ?char ?obj) (not (inside ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{ \"output\": \n(:action walk_into\n  :parameters (?char - character ?room - object)\n  :precondition (or \n                (and \n                  (inside ?char ?room) \n                  (not (inside ?char ?room)) \n                ) \n                (and \n                  (inside ?char ?room) \n                  (not (inside ?char ?room)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?room) (not (inside ?char ?room))) \n             (inside ?char ?room) \n           )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (not (facing ?char ?obj)) \n                ) \n                (and \n                  (inside ?char ?obj) \n                  (not (facing ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (facing ?char ?obj))) \n             (facing ?char ?obj) \n           )\n)\n\n(:action standup\n  :parameters (?char - character)\n  :precondition (and \n                  (sitting ?char) \n                  (not (standing ?char)) \n                )\n  :effect (and \n             (not (sitting ?char)) \n             (standing ?char) \n           )\n)"
    },
    {
        "identifier": "323_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char bathroom) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char toilet) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char home_office) \n                ) \n              )\n  :effect (and \n             (when (inside ?char home_office) (inside ?char bathroom)) \n             (when (inside ?char home_office) (inside ?char toilet)) \n             (when (inside ?char home_office) (inside ?char home_office)) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (ontop ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (ontop ?char ?obj) (not (ontop ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (ontop ?char toilet) \n           )\n)"
    },
    {
        "identifier": "430_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char home_office)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (obj_inside ?char ?obj)\n    )\n  )\n  :effect (next_to ?char ?obj)\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (sittable ?obj)\n    (next_to ?char ?obj)\n  )\n  :effect (ontop ?char ?obj)\n)\n\n}"
    },
    {
        "identifier": "478_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char bedroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (inside ?char bedroom) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char bedroom) (not (inside ?char bedroom))) \n      (when (inside ?char bedroom) (not (inside ?char bedroom))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action sit \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (sittable ?obj) \n        (inside ?char bedroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (sittable ?obj) \n        (inside ?char bedroom) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char bedroom) (not (inside ?char bedroom))) \n      (when (inside ?char bedroom) (not (inside ?char bedroom))) \n      (ontop ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{ \"output\": \n(:action walk_into\n  :parameters (?char - character ?room - object)\n  :precondition (or \n                (and \n                  (inside ?char ?room) \n                  (movable ?char) \n                ) \n                (and \n                  (inside ?char ?room) \n                  (movable ?char) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?room) (not (inside ?char ?room))) \n             (inside ?char ?room) \n           )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?char) \n                ) \n                (and \n                  (inside ?char ?obj) \n                  (movable ?char) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (inside ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "624_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (obj_next_to ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (obj_next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "188_1",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (next_to ?obj ?char) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (when (next_to ?obj ?char) (not (next_to ?obj ?char))) \n    (next_to ?char ?obj) \n  ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (grabbable ?obj) \n      (next_to ?obj ?char) \n    ) \n  ) \n  :effect (and \n    (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n    (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n    (holds_rh ?char ?obj) \n  ) \n) \n(:action turn_to \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (next_to ?obj ?char) \n    ) \n  ) \n  :effect (and \n    (when (facing ?char ?obj) (not (facing ?char ?obj))) \n    (facing ?char ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (next_to ?obj ?char) \n    ) \n  ) \n  :effect (and \n    (when (on ?obj) (not (on ?obj))) \n    (on ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (next_to ?char ?obj)) \n    (when (inside ?char ?obj) (inside ?char ?obj)) \n  ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (grabbable ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n    (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n  ) \n) \n(:action turn_to \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (facing ?char ?obj) (not (facing ?char ?obj))) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (on ?obj)) \n  ) \n) \n}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char ?obj) (not (inside ?char ?obj))) \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (obj_next_to ?obj ?char) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (not (facing ?char ?obj))) \n      (facing ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                ) \n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (obj_next_to ?char ?obj) \n                  (movable ?char) \n                  (inside ?char bedroom) \n                ) \n                (and \n                  (obj_next_to ?char ?obj) \n                  (movable ?char) \n                  (inside ?char bedroom) \n                ) \n              )\n  :effect (and \n             (when (not (obj_next_to ?char ?obj)) (not (obj_next_to ?char ?obj))) \n             (obj_next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_out ?obj)\n      (has_switch ?obj)\n    )\n  )\n  :effect (and\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bedroom)\n      (obj_inside computer home_office)\n    )\n  )\n  :effect (and\n    (next_to ?char computer)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (on ?obj)\n      (has_switch ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "153_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (has_switch ?obj) \n                  (inside ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char ?obj) \n                  (obj_inside ?obj ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (on ?obj) \n                  (inside ?char ?obj) \n                )\n                (and \n                  (has_switch ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "196_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{ \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "201_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_out ?obj)\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (plugged_out ?obj) (not (plugged_out ?obj)))\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (on ?obj) (not (on ?obj)))\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "232_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?char) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (holds_rh ?char ?obj) \n                  (movable ?char) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (holds_lh ?char ?obj) \n                  (movable ?char) \n                )\n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (obj_next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "234_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_plug ?obj)\n      (plugged_out ?obj)\n    )\n  )\n  :effect (and\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (off ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "373_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n             (when (not (inside ?char ?obj)) (inside ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (on ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (has_switch ?obj) \n                  (on ?obj) \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (not (on ?obj)) (on ?obj)) \n             (when (not (has_switch ?obj)) (has_switch ?obj)) \n           )\n)"
    },
    {
        "identifier": "406_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "409_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n      (when (not (inside ?char ?obj)) (inside ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "419_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (obj_next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "437_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "440_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n      (when (not (inside ?char ?obj)) (inside ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "46_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n      ) \n      (and \n        (off ?obj) \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "475_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect (and (plugged_in ?obj)))\n  \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or (and (next_to ?char ?obj)) (and (next_to ?obj ?char)))\n    :effect (and (next_to ?char ?obj)))\n  \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (and (has_switch ?obj) (off ?obj))\n    :effect (and (on ?obj)))\n}"
    },
    {
        "identifier": "503_1",
        "llm_output": "{ \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (has_switch ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "670_2",
        "llm_output": "{ \n  \"output\": \n  \"(:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n\" \n}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n      (when (not (inside ?char ?obj)) (inside ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (has_plug ?obj) \n                  (grabbable ?obj) \n                )\n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (obj_next_to ?char ?obj) \n                )\n                (and \n                  (obj_next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (grabbable ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "787_2",
        "llm_output": "{ \n\"output\": \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (plugged_out ?obj) \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (plugged_out ?obj) \n      (movable ?obj) \n      (holds_rh ?char ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (plugged_out ?obj) (not (plugged_out ?obj))) \n    (plugged_in ?obj) \n  ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (holds_rh ?char ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (movable ?obj) \n      (holds_rh ?char ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (not (off ?obj))) \n    (on ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char home_office) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n        (inside ?char bedroom) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char bedroom) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (inside ?char home_office) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (inside ?char bedroom) \n        (on ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n      ) \n    )\n    :effect (and \n      (plugged_in ?obj) \n      (not (plugged_out ?obj)) \n    ) \n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (obj_next_to ?char ?obj) \n      (not (next_to ?char ?obj)) \n    ) \n  )\n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    )\n    :effect (and \n      (on ?obj) \n      (not (off ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (holds_rh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (plugged_out ?obj) \n                  (movable ?obj) \n                  (holds_lh ?char ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (obj_next_to ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (obj_next_to ?char ?obj) \n                  (holds_rh ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (obj_next_to ?char ?obj) \n                  (holds_lh ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (holds_rh ?char ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (off ?obj) \n                  (has_switch ?obj) \n                  (holds_lh ?char ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "910_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_out ?obj)\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (plugged_out ?obj) (not (plugged_out ?obj)))\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\n    (obj_next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (on ?obj) (not (on ?obj)))\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "91_2",
        "llm_output": "{ \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (has_plug ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (has_switch ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "93_2",
        "llm_output": "{ \n  \"output\": \n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (plugged_out ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (not (plugged_out ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "962_1",
        "llm_output": "{ \"output\": \n(:action plug_in\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (plugged_out ?obj)\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (plugged_out ?obj) (not (plugged_out ?obj)))\n    (plugged_in ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (on ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (on ?obj) (not (on ?obj)))\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "190_1",
        "llm_output": "{ \n(:action switch_off \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition () \n  :effect () \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition () \n  :effect () \n) \n}"
    },
    {
        "identifier": "201_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (grabbable ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (grabbable ?obj2) \n        (next_to ?char ?obj1) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj1)(not (grabbable ?obj1))) \n      (when (grabbable ?obj2)(not (grabbable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj)(not (movable ?obj))) \n      (when (movable ?char)(not (movable ?char))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj)(not (has_switch ?obj))) \n      (when (has_switch ?char)(not (has_switch ?char))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj)(not (grabbable ?obj))) \n      (when (grabbable ?char)(not (grabbable ?char))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj)(not (can_open ?obj))) \n      (when (can_open ?char)(not (can_open ?char))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj)(not (can_close ?obj))) \n      (when (can_close ?char)(not (can_close ?char))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj)(not (has_plug ?obj))) \n      (when (has_plug ?char)(not (has_plug ?char))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "223_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "327_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (obj_ontop ?obj1 ?obj2) \n        (movable ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (obj_inside ?obj1 ?obj2) \n        (movable ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (obj_ontop ?obj1 ?obj2) (not (obj_ontop ?obj1 ?obj2))) \n      (when (obj_inside ?obj1 ?obj2) (not (obj_inside ?obj1 ?obj2))) \n      (ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (inside ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (when (inside ?char ?obj) (not (inside ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj) (not (can_close ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj) (not (can_close ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "417_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_rh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_lh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj1)(not (holds_rh ?char ?obj1))) \n      (when (holds_lh ?char ?obj1)(not (holds_lh ?char ?obj1))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "487_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_rh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_lh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj1) (not (holds_rh ?char ?obj1))) \n      (when (holds_lh ?char ?obj1) (not (holds_lh ?char ?obj1))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (off ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "650_2",
        "llm_output": "{ \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition (or \n                (and \n                  (obj_ontop ?obj1 ?obj2) \n                  (movable ?obj1) \n                  (movable ?obj2) \n                ) \n                (and \n                  (obj_inside ?obj1 ?obj2) \n                  (movable ?obj1) \n                  (movable ?obj2) \n                ) \n              ) \n  :effect (and \n             (when (obj_ontop ?obj1 ?obj2) (not (obj_ontop ?obj1 ?obj2))) \n             (when (obj_inside ?obj1 ?obj2) (not (obj_inside ?obj1 ?obj2))) \n             (obj_ontop ?obj1 ?obj2) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?char) \n                ) \n                (and \n                  (inside ?char ?obj) \n                  (movable ?char) \n                ) \n              ) \n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (next_to ?char ?obj) \n           ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (off ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (on ?obj) \n                ) \n              ) \n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (movable ?char) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (closed ?obj) \n                ) \n                (and \n                  (can_open ?obj) \n                  (open ?obj) \n                ) \n              ) \n  :effect (and \n             (when (closed ?obj) (not (closed ?obj))) \n             (when (open ?obj) (not (open ?obj))) \n             (open ?obj) \n           ) \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_close ?obj) \n                  (open ?obj) \n                ) \n                (and \n                  (can_close ?obj) \n                  (closed ?obj) \n                ) \n              ) \n  :effect (and \n             (when (open ?obj) (not (open ?obj))) \n             (when (closed ?obj) (not (closed ?obj))) \n             (closed ?obj) \n           ) \n) \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (plugged_out ?obj) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (plugged_in ?obj) \n                ) \n              ) \n  :effect (and \n             (when (plugged_out ?obj) (not (plugged_out ?obj))) \n             (when (plugged_in ?obj) (not (plugged_in ?obj))) \n             (plugged_in ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "783_1",
        "llm_output": "{ \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition (or \n                (and \n                  (movable ?obj1) \n                  (movable ?obj2) \n                  (next_to ?char ?obj1) \n                  (next_to ?char ?obj2) \n                ) \n                (and \n                  (movable ?obj1) \n                  (movable ?obj2) \n                  (next_to ?char ?obj1) \n                  (next_to ?char ?obj2) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj1)(not (movable ?obj1))) \n             (when (movable ?obj2)(not (movable ?obj2))) \n             (obj_ontop ?obj1 ?obj2) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (movable ?obj)(not (movable ?obj))) \n             (next_to ?char ?obj) \n           ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (off ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (off ?obj)(not (off ?obj))) \n             (on ?obj) \n           ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (grabbable ?obj)(not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (closed ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (can_open ?obj) \n                  (closed ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (closed ?obj)(not (closed ?obj))) \n             (open ?obj) \n           ) \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (open ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (can_open ?obj) \n                  (open ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (open ?obj)(not (open ?obj))) \n             (closed ?obj) \n           ) \n) \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (has_plug ?obj) \n                  (plugged_out ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_plug ?obj) \n                  (plugged_out ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (plugged_out ?obj)(not (plugged_out ?obj))) \n             (plugged_in ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{ \n  \"output\": \n  (:action switch_off\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action put_on\n    :parameters (?char - character ?obj1 - object ?obj2 - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action close\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_rh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (holds_lh ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj1)(not (holds_rh ?char ?obj1))) \n      (when (holds_lh ?char ?obj1)(not (holds_lh ?char ?obj1))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (off ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_rh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (holds_lh ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "911_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (plugged_in ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (plugged_out ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "244_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "509_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n    ) \n  ) \n  (:action lie \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (lieable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (ontop ?char ?obj)) \n      (when (not (next_to ?char ?obj)) (ontop ?char ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "875_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "12_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "137_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "220_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "242_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "279_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "287_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "292_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n}"
    },
    {
        "identifier": "297_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (next_to ?obj ?char) (not (next_to ?obj ?char))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "381_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "388_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "38_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  )\n)\n}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n}"
    },
    {
        "identifier": "451_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "469_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (next_to ?obj ?char) (not (next_to ?obj ?char))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "479_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bathroom) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "502_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition ()\n  :effect (and (next_to ?char ?obj))\n)\n}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bedroom) (next_to ?char ?obj)) \n             (when (not (inside ?char bedroom)) (inside ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "856_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_inside ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (readable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (cuttable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (pourable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_switch ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (has_plug ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (drinkable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (lieable ?obj) \n                ) \n                (and \n                 "
    },
    {
        "identifier": "384_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  )\n  (:action walk_into\n    :parameters (?char - character ?room - object)\n    :precondition (or \n      (and \n        (inside ?char ?room) \n        (movable ?char) \n      ) \n      (and \n        (inside ?char ?room) \n        (movable ?char) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char ?room) (not (inside ?char ?room))) \n      (when (inside ?char ?room) (not (inside ?char ?room))) \n      (inside ?char ?room) \n    ) \n  )\n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  )\n  (:action turn_to\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?char) \n      ) \n      (and \n        (facing ?char ?obj) \n        (movable ?char) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (not (facing ?char ?obj))) \n      (when (facing ?char ?obj) (not (facing ?char ?obj))) \n      (facing ?char ?obj) \n    ) \n  )\n  (:action plug_in\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char bathroom)(next_to ?char ?obj))\n    (when (inside ?char home_office)(next_to ?char ?obj))\n  )\n)\n\n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (next_to ?char ?obj)\n      (grabbable ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?obj)\n      (grabbable ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char bathroom)(holds_rh ?char ?obj))\n    (when (inside ?char home_office)(holds_rh ?char ?obj))\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char bathroom)\n      (next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char bathroom)(facing ?char ?obj))\n    (when (inside ?char home_office)(facing ?char ?obj))\n  )\n)"
    },
    {
        "identifier": "60_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (not (facing ?char ?obj))) \n      (facing ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "71_2",
        "llm_output": "{ \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (obj_next_to ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (obj_next_to ?char ?obj) (obj_next_to ?char ?obj)) \n    ) \n  ) \n  (:action walk_into \n    :parameters (?char - character ?room - object) \n    :precondition (or \n      (and \n        (inside ?char ?room) \n        (movable ?char) \n      ) \n      (and \n        (obj_inside ?char ?room) \n        (movable ?char) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char ?room) (inside ?char ?room)) \n      (when (obj_inside ?char ?room) (obj_inside ?char ?room)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n      (when (has_plug ?obj) (on ?obj)) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (movable ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n      (when (movable ?char) (holds_rh ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?char) \n      ) \n      (and \n        (movable ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n      (when (movable ?char) (facing ?char ?obj)) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (movable ?char) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (plugged_in ?obj)) \n      (when (movable ?char) (plugged_in ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{ \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (inside ?char ?obj) \n        (movable ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action walk_into \n    :parameters (?char - character ?room - object) \n    :precondition (or \n      (and \n        (inside ?char ?room) \n        (movable ?room) \n      ) \n      (and \n        (next_to ?char ?room) \n        (movable ?room) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char ?room) (inside ?char ?room)) \n      (when (next_to ?char ?room) (next_to ?char ?room)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (on ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n      (when (has_switch ?obj) (off ?obj)) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n      (when (grabbable ?obj) (holds_lh ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n        (facing ?char ?obj) \n      ) \n      (and \n        (inside ?char ?obj) \n        (facing ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (plugged_out ?obj) \n        (has_plug ?obj) \n      ) \n      (and \n        (plugged_in ?obj) \n        (has_plug ?obj) \n      ) \n    ) \n    :effect (and \n      (when (plugged_out ?obj) (plugged_in ?obj)) \n      (when (plugged_in ?obj) (plugged_out ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "1070_1",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (holds_rh ?char ?obj)) \n             (when (grabbable ?obj) (holds_lh ?char ?obj)) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (next_to ?char ?obj)) \n             (when (movable ?obj) (inside ?char ?obj)) \n           )\n)\n\n}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n  )\n  :effect (and \n    (holds_rh ?char ?obj) \n    (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (movable ?char) \n      (next_to ?char ?obj) \n    ) \n  )\n  :effect (and \n    (next_to ?char ?obj) \n  )\n)\n\n}"
    },
    {
        "identifier": "689_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))) \n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj))) \n    (holds_lh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (next_to ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "718_1",
        "llm_output": "{ \"output\": \n(:action grab_toothbrush\n  :parameters (?char - character ?toothbrush - object)\n  :precondition (or\n    (and\n      (movable ?toothbrush)\n      (grabbable ?toothbrush)\n      (inside character dining_room)\n      (next_to ?char ?toothbrush)\n    )\n  )\n  :effect (and\n    (when (movable ?toothbrush)(not (movable ?toothbrush))) \n    (holds_lh ?char ?toothbrush) \n  )\n)\n(:action walk_to_bathroom\n  :parameters (?char - character)\n  :precondition (or\n    (and\n      (inside character dining_room)\n      (movable ?char)\n    )\n  )\n  :effect (and\n    (when (inside character dining_room)(not (inside character dining_room))) \n    (inside ?char bathroom) \n  )\n)\n(:action pick_up_toothpaste\n  :parameters (?char - character ?toothpaste - object)\n  :precondition (or\n    (and\n      (movable ?toothpaste)\n      (grabbable ?toothpaste)\n      (inside character bathroom)\n      (next_to ?char ?toothpaste)\n    )\n  )\n  :effect (and\n    (when (movable ?toothpaste)(not (movable ?toothpaste))) \n    (holds_lh ?char ?toothpaste) \n  )\n)\n(:action put_toothpaste_down\n  :parameters (?char - character ?toothpaste - object)\n  :precondition (or\n    (and\n      (holds_lh ?char ?toothpaste)\n      (inside ?char bathroom)\n    )\n  )\n  :effect (and\n    (when (holds_lh ?char ?toothpaste)(not (holds_lh ?char ?toothpaste))) \n    (obj_ontop ?toothpaste bathroom) \n  )\n)\n(:action put_toothbrush_down\n  :parameters (?char - character ?toothbrush - object)\n  :precondition (or\n    (and\n      (holds_lh ?char ?toothbrush)\n      (inside ?char bathroom)\n    )\n  )\n  :effect (and\n    (when (holds_lh ?char ?toothbrush)(not (holds_lh ?char ?toothbrush))) \n    (obj_ontop ?toothbrush bathroom) \n  )\n)\n}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (not (off ?obj))) \n    (on ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "113_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (when (obj_next_to ?char ?obj) (obj_next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (has_switch ?obj) (on ?obj)) \n             (when (has_switch ?obj) (off ?obj)) \n           )\n)\n\n}"
    },
    {
        "identifier": "161_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (ontop ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                )\n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (on ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (on ?obj)) \n             (when (on ?obj) (on ?obj)) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "173_1",
        "llm_output": "{ \n\"output\": \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (has_plug ?obj) \n      (inside ?char home_office) \n    ) \n    (and \n      (movable ?obj) \n      (has_plug ?obj) \n      (inside ?char bedroom) \n    ) \n  ) \n  :effect (and \n    (when (plugged_out ?obj) (not (plugged_out ?obj))) \n    (plugged_in ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (has_switch ?obj) \n      (inside ?char home_office) \n    ) \n    (and \n      (movable ?obj) \n      (has_switch ?obj) \n      (inside ?char bedroom) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (not (off ?obj))) \n    (on ?obj) \n  ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?char) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?char) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n  ) \n) \n(:action standup \n  :parameters (?char - character) \n  :precondition (or \n    (and \n      (sitting ?char) \n    ) \n  ) \n  :effect (and \n    (when (sitting ?char) (not (sitting ?char))) \n  ) \n) \n}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (plugged_in ?obj) (on ?obj)) \n             (when (plugged_in ?obj) (on ?obj)) \n           )\n)"
    },
    {
        "identifier": "263_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (plugged_in ?obj) (on ?obj)) \n             (when (plugged_in ?obj) (on ?obj)) \n           )\n)"
    },
    {
        "identifier": "305_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char bathroom) \n        (obj_next_to ?obj chair) \n      ) \n      (and \n        (inside ?char bedroom) \n        (obj_next_to ?obj chair) \n      ) \n    ) \n    :effect (and \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (plugged_in ?obj) \n        (off ?obj) \n      ) \n    ) \n    :effect (and \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(not (off ?obj))) \n    (on ?obj) \n  )\n)"
    },
    {
        "identifier": "385_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (when (obj_next_to ?char ?obj) (obj_next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (has_switch ?obj) (on ?obj)) \n             (when (has_switch ?obj) (off ?obj)) \n           )\n)\n\n}"
    },
    {
        "identifier": "403_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (off ?obj) \n                )\n                (and \n                  (has_switch ?obj) \n                  (on ?obj) \n                )\n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "415_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n             (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (movable ?char) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action put_on_character\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                  (movable ?char) \n                ) \n              )\n  :effect (and \n             (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n             (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n             (on_char ?obj ?char) \n           )\n)"
    },
    {
        "identifier": "462_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char bathroom) \n        (obj_next_to ?obj stereo) \n      ) \n      (and \n        (inside ?char bedroom) \n        (obj_next_to ?obj stereo) \n      ) \n    ) \n    :effect (and \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char bathroom) \n        (obj_next_to ?obj stereo) \n        (off ?obj) \n        (plugged_in ?obj) \n      ) \n      (and \n        (inside ?char bedroom) \n        (obj_next_to ?obj stereo) \n        (off ?obj) \n        (plugged_in ?obj) \n      ) \n    ) \n    :effect (and \n      (on ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "463_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                )\n                (and \n                  (next_to ?char ?obj) \n                  (has_switch ?obj) \n                  (off ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (off ?obj))) \n             (when (next_to ?char ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "503_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (next_to ?char ?obj)\n      (off ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj) (on ?obj))\n  )\n)\n\n}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n    ) \n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  )\n  (:action put_on_character\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n        (on ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (on_char ?obj ?char) \n    ) \n  ) \n}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bedroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (plugged_in ?obj) (on ?obj)) \n             (when (has_switch ?obj) (on ?obj)) \n             (when (inside ?char bedroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "773_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (when (obj_next_to ?char ?obj) (obj_next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (on ?obj)) \n             (when (on ?obj) (on ?obj)) \n           )\n)"
    },
    {
        "identifier": "910_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bedroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (plugged_in ?obj) \n                  (has_switch ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (plugged_in ?obj) (on ?obj)) \n             (when (has_switch ?obj) (on ?obj)) \n             (when (inside ?char bedroom) (next_to ?char ?obj)) \n             (when (inside ?char home_office) (next_to ?char ?obj)) \n           )\n)"
    },
    {
        "identifier": "953_1",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (inside ?char bathroom) \n      (obj_next_to ?obj music_stand) \n    ) \n    (and \n      (inside ?char bathroom) \n      (obj_next_to ?obj cd_player) \n    ) \n  ) \n  :effect (and \n    (next_to ?char ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (inside ?char bathroom) \n      (obj_next_to ?obj music_stand) \n      (can_open ?obj) \n      (movable ?obj) \n      (containers ?obj) \n      (can_open ?obj) \n      (has_switch ?obj) \n      (obj_inside ?obj home_office) \n      (closed ?obj) \n      (clean ?obj) \n      (off ?obj) \n      (obj_inside ?obj home_office) \n      (plugged_in ?obj) \n      (grabbable ?obj) \n      (inside ?char bathroom) \n      (surfaces ?obj) \n      (has_plug ?obj) \n      (movable ?obj) \n    ) \n    (and \n      (inside ?char bathroom) \n      (obj_next_to ?obj cd_player) \n      (can_open ?obj) \n      (movable ?obj) \n      (containers ?obj) \n      (can_open ?obj) \n      (has_switch ?obj) \n      (obj_inside ?obj home_office) \n      (closed ?obj) \n      (clean ?obj) \n      (off ?obj) \n      (obj_inside ?obj home_office) \n      (plugged_in ?obj) \n      (grabbable ?obj) \n      (inside ?char bathroom) \n      (surfaces ?obj) \n      (has_plug ?obj) \n      (movable ?obj) \n    ) \n  ) \n  :effect (and \n    (on ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (next_to ?char ?obj)) \n    (when (inside ?char ?obj) (inside ?char ?obj)) \n  ) \n) \n(:action turn_to \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (facing ?char ?obj) \n      (movable ?obj) \n    ) \n    (and \n      (facing ?char ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (facing ?char ?obj) (facing ?char ?obj)) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (plugged_in ?obj) \n      (off ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (on ?obj)) \n  ) \n) \n}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "134_1",
        "llm_output": "{ \n\"output\": \n(:action plug_in \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_plug ?obj) \n      (movable ?obj) \n      (inside ?char bathroom) \n    ) \n    (and \n      (has_plug ?obj) \n      (movable ?obj) \n      (inside ?char home_office) \n    ) \n  ) \n  :effect (and \n    (when (plugged_out ?obj) (not (plugged_out ?obj))) \n    (plugged_in ?obj) \n  ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (obj_next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (not (next_to ?char ?obj)) (next_to ?char ?obj)) \n  ) \n) \n(:action turn_to \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (obj_next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (not (facing ?char ?obj)) (facing ?char ?obj)) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (movable ?obj) \n      (obj_next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (on ?obj)) \n  ) \n) \n}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (facing ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (facing ?char ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (facing ?char ?obj) (not (facing ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (facing ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (on ?obj) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "197_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (next_to ?obj ?char) (not (next_to ?obj ?char))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (facing ?char ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (facing ?obj ?char) \n                  (next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (facing ?char ?obj) (not (facing ?char ?obj))) \n             (when (facing ?obj ?char) (not (facing ?obj ?char))) \n             (facing ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "21_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n  )\n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (facing ?char ?obj) \n      (movable ?obj) \n    ) \n  )\n  :effect (and \n    (when (facing ?char ?obj) (not (facing ?char ?obj))) \n    (facing ?char ?obj) \n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (plugged_in ?obj) \n      (off ?obj) \n    ) \n  )\n  :effect (and \n    (when (off ?obj) (not (off ?obj))) \n    (on ?obj) \n  )\n)"
    },
    {
        "identifier": "225_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  )\n  (:action turn_to\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  )\n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "259_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (next_to ?char ?obj)) \n    (when (inside ?char ?obj) (inside ?char ?obj)) \n  ) \n) \n(:action turn_to \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (facing ?char ?obj) \n      (movable ?obj) \n    ) \n    (and \n      (facing ?char ?obj) \n      (inside ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (facing ?char ?obj) (facing ?char ?obj)) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (plugged_in ?obj) \n      (off ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (on ?obj)) \n  ) \n) \n}"
    },
    {
        "identifier": "329_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(next_to ?char ?obj))\n    (when (inside ?char ?obj)(inside ?char ?obj))\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (facing ?char ?obj)\n      (movable ?obj)\n    )\n    (and\n      (facing ?char ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (facing ?char ?obj)(facing ?char ?obj))\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(on ?obj))\n  )\n)"
    },
    {
        "identifier": "342_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n      (facing ?char dining_room)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n      (facing ?char dining_room)\n    )\n  )\n  :effect (and\n    (facing ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "383_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(next_to ?char ?obj))\n    (when (inside ?char ?obj)(inside ?char ?obj))\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (facing ?char ?obj)\n      (movable ?obj)\n    )\n    (and\n      (facing ?char ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (facing ?char ?obj)(facing ?char ?obj))\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(on ?obj))\n  )\n)"
    },
    {
        "identifier": "411_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(next_to ?char ?obj))\n    (when (inside ?char ?obj)(inside ?char ?obj))\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (facing ?char ?obj)\n      (movable ?obj)\n    )\n    (and\n      (facing ?char ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (facing ?char ?obj)(facing ?char ?obj))\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(on ?obj))\n  )\n)"
    },
    {
        "identifier": "454_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(next_to ?char ?obj))\n    (when (inside ?char ?obj)(inside ?char ?obj))\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (facing ?char ?obj)\n      (movable ?obj)\n    )\n    (and\n      (facing ?char ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (facing ?char ?obj)(facing ?char ?obj))\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (on ?obj)\n    )\n  )\n  :effect (and\n    (when (off ?obj)(on ?obj))\n  )\n)"
    },
    {
        "identifier": "459_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "548_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (facing ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (facing ?char ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (facing ?char ?obj) (not (facing ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (facing ?char ?obj) \n           )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (off ?obj) \n                ) \n                (and \n                  (has_switch ?obj) \n                  (plugged_in ?obj) \n                  (on ?obj) \n                ) \n              )\n  :effect (and \n             (when (off ?obj) (not (off ?obj))) \n             (when (on ?obj) (not (on ?obj))) \n             (on ?obj) \n           )\n)"
    },
    {
        "identifier": "595_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "684_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action turn_to\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n      (facing ?char dining_room)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n      (facing ?char dining_room)\n    )\n  )\n  :effect (and\n    (facing ?char ?obj)\n  )\n)\n\n(:action switch_on\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj remote_control)\n      (has_switch ?obj)\n      (plugged_in ?obj)\n      (off ?obj)\n    )\n  )\n  :effect (and\n    (on ?obj)\n  )\n)"
    },
    {
        "identifier": "74_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "806_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (facing ?char ?obj)) \n      (when (inside ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action turn_to \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (facing ?char ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (facing ?char ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (facing ?char ?obj) (facing ?char ?obj)) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (movable ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (on ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action pour\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (pourable ?obj) \n                  (holds_rh ?char ?obj) \n                  (inside ?char dining_room) \n                  (next_to ?char ?obj) \n                )\n  :effect (and \n             (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n             (recipient ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "171_2",
        "llm_output": "{ \n  (:action open_cupboard\n    :parameters (?char - character ?cupboard - object)\n    :precondition (or\n      (and\n          (can_open ?cupboard)\n          (inside ?char bathroom)\n          (obj_next_to ?char ?cupboard)\n      )\n    )\n    :effect (and\n      (when (closed ?cupboard) (not (closed ?cupboard)))\n      (open ?cupboard)\n    )\n  )\n  (:action grab_cup\n    :parameters (?char - character ?cup - object)\n    :precondition (or\n      (and\n          (grabbable ?cup)\n          (inside ?char bathroom)\n          (obj_next_to ?char ?cup)\n      )\n    )\n    :effect (and\n      (when (holds_rh ?char ?cup) (not (holds_rh ?char ?cup)))\n      (when (holds_lh ?char ?cup) (not (holds_lh ?char ?cup)))\n      (holds_rh ?char ?cup)\n    )\n  )\n  (:action walk_towards_cupboard\n    :parameters (?char - character ?cupboard - object)\n    :precondition (or\n      (and\n          (inside ?char bathroom)\n          (obj_next_to ?char ?cupboard)\n      )\n    )\n    :effect (and\n      (when (obj_next_to ?char ?cupboard) (not (obj_next_to ?char ?cupboard)))\n      (obj_next_to ?char ?cupboard)\n    )\n  )\n  (:action pour_water\n    :parameters (?char - character ?water - object ?cup - object)\n    :precondition (or\n      (and\n          (pourable ?water)\n          (inside ?char bathroom)\n          (obj_next_to ?char ?water)\n          (grabbable ?cup)\n          (inside ?char bathroom)\n          (obj_next_to ?char ?cup)\n      )\n    )\n    :effect (and\n      (when (holds_rh ?char ?cup) (not (holds_rh ?char ?cup)))\n      (when (holds_lh ?char ?cup) (not (holds_lh ?char ?cup)))\n      (holds_rh ?char ?cup)\n      (obj_ontop ?water ?cup)\n    )\n  )\n}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (inside ?char home_office)\n      (next_to ?char ?obj)\n    )\n    (and\n      (grabbable ?obj)\n      (inside ?char home_office)\n      (next_to ?obj ?char)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj) (holds_rh ?char ?obj))\n    (when (next_to ?obj ?char) (holds_rh ?char ?obj))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char home_office)\n      (next_to ?char ?obj)\n    )\n    (and\n      (inside ?char home_office)\n      (next_to ?obj ?char)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj) (next_to ?char ?obj))\n    (when (next_to ?obj ?char) (next_to ?obj ?char))\n  )\n)"
    },
    {
        "identifier": "181_2",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (inside ?char bathroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char bathroom) \n        (obj_next_to ?obj freezer) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n      (when (grabbable ?obj) (holds_lh ?char ?obj)) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char bathroom) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char bathroom) \n        (obj_next_to ?obj freezer) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n      (when (movable ?obj) (obj_next_to ?char ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "26_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "286_2",
        "llm_output": "{ \"output\": \n(:action open\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char bathroom) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char dining_room) \n                ) \n              )\n  :effect (when (closed ?obj) (not (closed ?obj)))\n)\n\n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char dining_room) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (holds_rh ?char ?obj)\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char dining_room) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (next_to ?char ?obj)\n)\n\n}"
    },
    {
        "identifier": "291_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "317_2",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (can_open ?obj) (not (closed ?obj))) \n      (open ?obj) \n    )\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (not (holds_rh ?char ?obj))) \n      (when (grabbable ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "488_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (holds_rh ?char ?obj)) \n             (when (movable ?obj) (holds_lh ?char ?obj)) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (next_to ?char ?obj)) \n             (when (movable ?obj) (inside ?char ?obj)) \n           )\n)\n\n}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (movable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action pour\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (and \n                  (pourable ?obj1) \n                  (drinkable ?obj1) \n                  (grabbable ?obj2) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj1) \n                  (next_to ?char ?obj2) \n                )\n  :effect (and \n             (when (pourable ?obj1) (not (pourable ?obj1))) \n             (holds_rh ?char ?obj2) \n             (inside ?char dining_room) \n           )\n)\n\n(:action put_down\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (holds_rh ?char ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (holds_lh ?char ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n             (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n             (obj_next_to ?obj water) \n           )\n}\n\n}"
    },
    {
        "identifier": "528_1",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (can_open ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?obj ?char) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (closed ?obj))) \n      (when (can_open ?obj) (not (plugged_in ?obj))) \n      (when (can_open ?obj) (not (clean ?obj))) \n      (when (can_open ?obj) (not (has_switch ?obj))) \n    ) \n  ) \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?obj ?char) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (holds_rh ?char ?obj))) \n      (when (grabbable ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?obj ?char) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (obj_next_to ?char ?obj))) \n      (when (movable ?obj) (not (obj_next_to ?obj ?char))) \n      (obj_next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "532_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (holds_rh ?char ?obj)\n  )\n)\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action pour\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (and \n                  (movable ?obj1) \n                  (movable ?obj2) \n                  (grabbable ?obj1) \n                  (grabbable ?obj2) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj1) \n                  (next_to ?char ?obj2) \n                )\n  :effect (and \n             (when (movable ?obj1) (not (movable ?obj1))) \n             (when (movable ?obj2) (not (movable ?obj2))) \n             (when (grabbable ?obj1) (not (grabbable ?obj1))) \n             (when (grabbable ?obj2) (not (grabbable ?obj2))) \n             (holds_rh ?char ?obj1) \n             (holds_rh ?char ?obj2) \n             (pourable ?obj1 ?obj2) \n           )\n)\n\n(:action put_down\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (holds_rh ?char ?obj) \n                  (movable ?obj) \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n  :effect (and \n             (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (movable ?obj) \n                  (sittable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (sitting ?char) \n             (next_to ?char ?obj) \n           )\n}\n\n}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{ \"output\": \n(:action open_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (when (closed freezer)(not (closed freezer))) \n    (when (plugged_in freezer)(not (plugged_in freezer))) \n    (when (clean freezer)(not (clean freezer))) \n    (when (has_switch freezer)(not (has_switch freezer))) \n    (when (containers freezer)(not (containers freezer))) \n    (can_open freezer) \n  )\n)\n\n(:action grab_water_glass\n  :parameters (?char - character)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (when (holds_rh character water_glass)(not (holds_rh character water_glass))) \n    (when (holds_lh character water_glass)(not (holds_lh character water_glass))) \n    (holds_rh character water_glass) \n  )\n)\n\n(:action walk_towards_freezer\n  :parameters (?char - character)\n  :precondition (or\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n    (and\n        (has_plug freezer)\n        (inside character bathroom)\n        (movable water_glass)\n        (pourable water_glass)\n        (recipient water_glass)\n        (grabbable water_glass)\n        (inside_room water_glass dining_room)\n        (obj_next_to water_glass freezer)\n        (inside_room freezer dining_room)\n        (closed freezer)\n        (plugged_in freezer)\n        (clean freezer)\n        (has_switch freezer)\n        (containers freezer)\n    )\n  )\n  :effect (and\n    (next_to character freezer) \n  )\n)"
    },
    {
        "identifier": "662_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action pour\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (and \n                  (pourable ?obj1) \n                  (movable ?obj1) \n                  (recipient ?obj2) \n                  (next_to ?char ?obj1) \n                )\n  :effect (and \n             (when (pourable ?obj1) (not (pourable ?obj1))) \n             (holds_rh ?char ?obj1) \n             (inside ?obj2 ?obj1) \n           )\n)\n\n(:action pick_up\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action put_down\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (grabbable ?obj) \n                  (holds_rh ?char ?obj) \n                )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (not (holds_rh ?char ?obj)) \n           )\n}\n\n}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (holds_rh ?char ?obj) \n      (holds_lh ?char ?obj) \n    ) \n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (next_to ?char ?obj) \n    ) \n  )\n}"
    },
    {
        "identifier": "787_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (holds_rh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "788_1",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (can_open ?obj) (not (closed ?obj))) \n      (open ?obj) \n    )\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (not (holds_rh ?char ?obj))) \n      (when (grabbable ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "814_1",
        "llm_output": "{ \n\"output\": \n(:action open_cupboard\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char dining_room) \n                ) \n              )\n  :effect (and \n             (when (can_open ?obj) (not (closed ?obj))) \n             (when (can_open ?obj) (not (closed ?obj))) \n             (open ?obj) \n           )\n)\n\n(:action grab_water_glass\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (obj_next_to ?obj cupboard) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char dining_room) \n                  (obj_next_to ?obj cupboard) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards_cupboard\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (obj_next_to ?char cupboard) \n                ) \n                (and \n                  (inside ?char dining_room) \n                  (obj_next_to ?char cupboard) \n                ) \n              )\n  :effect (and \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (when (inside ?char dining_room) (not (inside ?char dining_room))) \n             (obj_next_to ?char cupboard) \n           )\n)\n\n(:action pour_water\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (pourable ?obj) \n                  (inside ?char home_office) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (pourable ?obj) \n                  (inside ?char dining_room) \n                  (holds_rh ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (pourable ?obj) (not (pourable ?obj))) \n             (when (pourable ?obj) (not (pourable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action put_water_glass\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char home_office) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char dining_room) \n                  (holds_rh ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (obj_ontop ?obj cupboard) \n           )\n)"
    },
    {
        "identifier": "850_2",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (can_open ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (closed ?obj) (not (closed ?obj))) \n      (open ?obj) \n    )\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n      (obj_next_to ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "861_2",
        "llm_output": "{ \n\"output\": \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (holds_rh ?char ?obj) \n  ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (obj_next_to ?char ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "878_2",
        "llm_output": "{ \n\"output\": \n(:action open_cupboard\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char home_office) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char dining_room) \n                ) \n              )\n  :effect (and \n             (when (can_open ?obj) (not (closed ?obj))) \n             (when (can_open ?obj) (not (closed ?obj))) \n             (open ?obj) \n           )\n)\n\n(:action grab_water_glass\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (obj_next_to ?obj cupboard) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char dining_room) \n                  (obj_next_to ?obj cupboard) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards_cupboard\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (obj_next_to ?char cupboard) \n                ) \n                (and \n                  (inside ?char dining_room) \n                  (obj_next_to ?char cupboard) \n                ) \n              )\n  :effect (and \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (when (inside ?char dining_room) (not (inside ?char dining_room))) \n             (obj_next_to ?char cupboard) \n           )\n)\n\n(:action pour_water\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (pourable ?obj) \n                  (inside ?char home_office) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (pourable ?obj) \n                  (inside ?char dining_room) \n                  (holds_rh ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (pourable ?obj) (not (pourable ?obj))) \n             (when (pourable ?obj) (not (pourable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action put_water_glass\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char home_office) \n                  (holds_rh ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char dining_room) \n                  (holds_rh ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (obj_ontop ?obj cupboard) \n           )\n)"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n    (holds_rh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "15_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n    (holds_rh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "192_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (obj_next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?obj ?char) (not (obj_next_to ?obj ?char))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?obj ?char) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?obj ?char) (not (obj_next_to ?obj ?char))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (movable ?obj) (not (movable ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "221_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (ontop ?char ?obj)\n  )\n)\n\n(:action standup\n  :parameters (?char - character)\n  :precondition (and\n    (sitting ?char)\n  )\n  :effect (and\n    (not (sitting ?char))\n    (standing ?char)\n  )\n)"
    },
    {
        "identifier": "341_1",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (holds_rh ?char ?obj) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (not (next_to ?char ?obj)) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "508_2",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (obj_inside ?obj home_office) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (has_paper ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (can_open ?obj) \n                ) \n              ) \n  :effect (and \n             (when (inside ?char bedroom)(not (inside ?char bedroom))) \n             (when (obj_inside ?obj home_office)(not (obj_inside ?obj home_office))) \n             (when (has_paper ?obj)(not (has_paper ?obj))) \n             (when (can_open ?obj)(not (can_open ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (obj_inside ?obj home_office) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (has_paper ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char bedroom) \n                  (can_open ?obj) \n                ) \n              ) \n  :effect (and \n             (when (inside ?char bedroom)(not (inside ?char bedroom))) \n             (when (obj_inside ?obj home_office)(not (obj_inside ?obj home_office))) \n             (when (has_paper ?obj)(not (has_paper ?obj))) \n             (when (can_open ?obj)(not (can_open ?obj))) \n             (next_to ?char ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (holds_rh ?char ?obj) \n           ) \n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char home_office) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (inside ?char home_office) (not (inside ?char home_office))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           ) \n)\n\n}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (can_open ?obj) \n        (inside ?char home_office) \n      ) \n    )\n    :effect (and \n      (when (can_open ?obj) (not (closed ?obj))) \n      (open ?obj) \n    )\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (inside ?char home_office) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (not (holds_rh ?char ?obj))) \n      (when (grabbable ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (inside ?char home_office) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (inside ?char home_office) (not (inside ?char ?obj))) \n      (inside ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "688_2",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (grabbable ?obj) (not (grabbable ?obj)))\n    (holds_rh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (movable ?obj) (not (movable ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "821_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (holds_lh ?char ?obj)) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    )\n  )\n}"
    },
    {
        "identifier": "897_2",
        "llm_output": "{ \"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (grabbable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\n    (holds_rh ?char ?obj)\n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\n    (next_to ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (obj_next_to ?char ?obj1) \n        (obj_next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (obj_next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (obj_next_to ?char ?obj1) (not (obj_next_to ?char ?obj1))) \n      (when (obj_next_to ?char ?obj2) (not (obj_next_to ?char ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (off ?obj) (not (off ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (not (holds_rh ?char ?obj)) (not (holds_rh ?char ?obj))) \n      (when (not (holds_lh ?char ?obj)) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (open ?obj) (not (open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (closed ?obj) (not (closed ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "392_2",
        "llm_output": "{ \n\"output\": \n(:action put_on \n  :parameters (?char - character ?obj1 - object ?obj2 - object) \n  :precondition (or \n    (and \n      (obj_next_to ?char ?obj1) \n      (obj_next_to ?char ?obj2) \n      (movable ?obj1) \n      (movable ?obj2) \n    ) \n    (and \n      (obj_next_to ?char ?obj1) \n      (obj_next_to ?char ?obj2) \n      (movable ?obj1) \n      (not (movable ?obj2)) \n    ) \n    (and \n      (obj_next_to ?char ?obj1) \n      (obj_next_to ?char ?obj2) \n      (not (movable ?obj1)) \n      (movable ?obj2) \n    ) \n    (and \n      (obj_next_to ?char ?obj1) \n      (obj_next_to ?char ?obj2) \n      (not (movable ?obj1)) \n      (not (movable ?obj2)) \n    ) \n  ) \n  :effect (and \n    (when (obj_next_to ?char ?obj1) (not (obj_next_to ?char ?obj1))) \n    (when (obj_next_to ?char ?obj2) (not (obj_next_to ?char ?obj2))) \n    (obj_ontop ?obj1 ?obj2) \n  ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (next_to ?char ?obj) \n      (movable ?obj) \n    ) \n    (and \n      (next_to ?char ?obj) \n      (not (movable ?obj)) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  ) \n) \n(:action switch_on \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (has_switch ?obj) \n      (off ?obj) \n    ) \n    (and \n      (has_switch ?obj) \n      (on ?obj) \n    ) \n  ) \n  :effect (and \n    (when (off ?obj) (not (off ?obj))) \n    (on ?obj) \n  ) \n) \n(:action grab \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (grabbable ?obj) (not (grabbable ?obj))) \n    (holds_rh ?char ?obj) \n  ) \n) \n(:action close \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (can_close ?obj) \n      (open ?obj) \n    ) \n  ) \n  :effect (and \n    (when (open ?obj) (not (open ?obj))) \n    (closed ?obj) \n  ) \n) \n(:action open \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (can_open ?obj) \n      (closed ?obj) \n    ) \n  ) \n  :effect (and \n    (when (closed ?obj) (not (closed ?obj))) \n    (open ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{ \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (obj_next_to ?char ?obj1) \n        (obj_next_to ?char ?obj2) \n        (movable ?obj1) \n        (movable ?obj2) \n      ) \n      (and \n        (obj_next_to ?char ?obj1) \n        (obj_next_to ?char ?obj2) \n        (movable ?obj1) \n        (grabbable ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (obj_next_to ?char ?obj1) (not (obj_next_to ?char ?obj1))) \n      (when (obj_next_to ?char ?obj2) (not (obj_next_to ?char ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (inside ?char home_office) (not (inside ?char home_office))) \n      (when (inside ?char dining_room) (not (inside ?char dining_room))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (inside ?char home_office) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (obj_next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj))) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "204_2",
        "llm_output": "{ \n\"output\": \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (movable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  ) \n) \n(:action lie \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n    (and \n      (lieable ?obj) \n      (next_to ?char ?obj) \n    ) \n    (and \n      (lieable ?obj) \n      (next_to ?char ?obj) \n    ) \n  ) \n  :effect (and \n    (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n    (lying ?char) \n    (ontop ?char ?obj) \n  ) \n) \n}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n      (and \n        (inside ?char dining_room) \n        (obj_inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action sit\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (sittable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (sittable ?obj) \n        (inside ?char dining_room) \n        (obj_next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (sitting ?char) \n      (ontop ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "297_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?obj ?char) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (next_to ?char ?obj)) \n             (when (next_to ?obj ?char) (next_to ?obj ?char)) \n             (when (movable ?obj) (movable ?obj)) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (lying ?char) \n                ) \n                (and \n                  (lieable ?obj) \n                  (lying ?char) \n                ) \n              )\n  :effect (and \n             (when (sittable ?obj) (lying ?char)) \n             (when (lieable ?obj) (lying ?char)) \n             (ontop ?char ?obj) \n           )\n)\n\n}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "300_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "321_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (obj_next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (sitting ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "332_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "379_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "387_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "390_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "3_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "416_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (lieable ?obj)\n    (next_to ?char ?obj)\n  )\n  :effect (and\n    (lying ?char)\n    (ontop ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "442_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "447_2",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (inside ?char ?obj) \n        (movable ?obj) \n      ) \n    )\n    :effect (and \n      (next_to ?char ?obj) \n    )\n  )\n  (:action sit\n    :parameters (?char - character ?obj - object)\n    :precondition (and \n      (sittable ?obj) \n      (next_to ?char ?obj) \n    )\n    :effect (and \n      (sitting ?char) \n      (ontop ?char ?obj) \n    )\n  )\n}"
    },
    {
        "identifier": "449_1",
        "llm_output": "{ \n  \"output\": \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n      (when (inside ?char ?obj) (inside ?char ?obj)) \n    ) \n  ) \n  (:action lie \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (lieable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (lieable ?obj) \n        (inside ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (lying ?char)) \n      (when (inside ?char ?obj) (lying ?char)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "455_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj couch) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj television) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "456_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (when (inside ?char ?obj)(not (inside ?char ?obj))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (lieable ?obj)\n      (inside ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (when (inside ?char ?obj)(not (inside ?char ?obj))) \n    (lying ?char) \n  )\n)"
    },
    {
        "identifier": "473_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (sitting ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "490_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj couch) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj television) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "563_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (sittable ?obj) (next_to ?char ?obj)) \n             (when (lieable ?obj) (next_to ?char ?obj)) \n             (when (movable ?obj) (next_to ?char ?obj)) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                )\n  :effect (and \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "567_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_inside ?obj home_office)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n    (inside ?char dining_room)\n    (lieable ?obj)\n    (next_to ?char ?obj)\n  )\n  :effect (and\n    (lying ?char)\n    (ontop ?char ?obj)\n  )\n)\n\n}"
    },
    {
        "identifier": "570_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj couch) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj television) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "674_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (inside ?char dining_room)\n      (next_to ?char ?obj)\n    )\n    (and\n      (movable ?obj)\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (when (inside ?char home_office)(not (inside ?char home_office))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (inside ?char dining_room)\n      (next_to ?char ?obj)\n    )\n    (and\n      (lieable ?obj)\n      (inside ?char dining_room)\n      (obj_next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (when (inside ?char home_office)(not (inside ?char home_office))) \n    (lying ?char) \n  )\n)"
    },
    {
        "identifier": "6_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char ?obj) \n                  (movable ?obj) \n                ) \n                (and \n                  (next_to ?char ?obj) \n                  (movable ?obj) \n                ) \n              )\n  :effect (and \n             (when (inside ?char ?obj) (not (inside ?char ?obj))) \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (obj_next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (sittable ?obj) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (movable ?obj) \n                  (inside ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (when (movable ?obj) (not (movable ?obj))) \n             (sitting ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "742_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "762_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "793_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (next_to ?char ?obj)(not (next_to ?char ?obj))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (sitting ?char)(not (sitting ?char))) \n    (lying ?char) \n  )\n)"
    },
    {
        "identifier": "798_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj couch) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj television) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n                (and \n                  (inside ?char bathroom) \n                  (obj_next_to ?obj home_office) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (when (inside ?char bathroom) (not (inside ?char bathroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (sittable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (lieable ?obj) (not (lieable ?obj))) \n             (when (sittable ?obj) (not (sittable ?obj))) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "932_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "941_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj couch)\n    )\n    (and\n      (inside ?char dining_room)\n      (obj_next_to ?obj television)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?obj) \n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (lieable ?obj)\n      (next_to ?char ?obj)\n    )\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (when (lieable ?obj)(not (lieable ?obj))) \n    (when (sittable ?obj)(not (sittable ?obj))) \n    (sitting ?char) \n  )\n)"
    },
    {
        "identifier": "96_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (movable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (next_to ?char ?obj)\n  )\n)\n\n(:action sit\n  :parameters (?char - character ?obj - object)\n  :precondition (or\n    (and\n      (sittable ?obj)\n      (next_to ?char ?obj)\n    )\n  )\n  :effect (and\n    (sitting ?char)\n    (ontop ?char ?obj)\n  )\n)"
    },
    {
        "identifier": "976_1",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (inside ?char bedroom) \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           )\n)\n\n(:action lie\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n                (and \n                  (lieable ?obj) \n                  (inside ?char bedroom) \n                  (next_to ?char ?obj) \n                )\n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (lying ?char) \n             (ontop ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "149_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone)\n        (inside ?char dining_room)\n        (obj_next_to ?char ?phone)\n    )\n    (and\n        (grabbable ?phone)\n        (inside ?char dining_room)\n        (obj_next_to ?phone table)\n    )\n  )\n  :effect (and\n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n(:action walk_towards_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (inside ?char dining_room)\n        (obj_next_to ?char ?phone)\n    )\n    (and\n        (inside ?char dining_room)\n        (obj_next_to ?phone table)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (next_to ?char ?phone) \n  )\n)\n(:action standup\n  :parameters (?char - character)\n  :precondition (and\n    (sitting ?char)\n  )\n  :effect (and\n    (not (sitting ?char)) \n  )\n)\n}"
    },
    {
        "identifier": "154_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (movable ?phone)\n        (grabbable ?phone)\n        (inside ?char dining_room)\n        (obj_next_to ?phone button)\n    )\n    (and\n        (movable ?phone)\n        (grabbable ?phone)\n        (inside ?char bedroom)\n        (obj_next_to ?phone button)\n    )\n  )\n  :effect (and\n    (when (movable ?phone)(not (movable ?phone))) \n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n\n(:action walk_towards_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (inside ?char dining_room)\n        (obj_next_to ?phone button)\n    )\n    (and\n        (inside ?char bedroom)\n        (obj_next_to ?phone button)\n    )\n  )\n  :effect (and\n    (when (inside ?char dining_room)(not (inside ?char dining_room))) \n    (when (inside ?char bedroom)(not (inside ?char bedroom))) \n    (obj_next_to ?char ?phone) \n  )\n)\n\n(:action put_phone_down\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (holds_rh ?char ?phone)\n        (inside ?char dining_room)\n        (obj_next_to ?phone button)\n    )\n    (and\n        (holds_rh ?char ?phone)\n        (inside ?char bedroom)\n        (obj_next_to ?phone button)\n    )\n  )\n  :effect (and\n    (when (holds_rh ?char ?phone)(not (holds_rh ?char ?phone))) \n    (when (holds_lh ?char ?phone)(not (holds_lh ?char ?phone))) \n    (obj_ontop ?phone button) \n  )\n)"
    },
    {
        "identifier": "180_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action standup\n    :parameters (?char - character)\n    :precondition (or \n      (and \n        (sitting ?char) \n      ) \n    ) \n    :effect (and \n      (when (sitting ?char) (not (sitting ?char))) \n      (standing ?char) \n    ) \n  ) \n}"
    },
    {
        "identifier": "195_1",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (holds_rh ?char ?obj) \n           ) \n) \n(:action walk_towards \n  :parameters (?char - character ?obj - object) \n  :precondition (or \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (movable ?obj) \n                  (next_to ?char ?obj) \n                ) \n              ) \n  :effect (and \n             (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n             (next_to ?char ?obj) \n           ) \n) \n}"
    },
    {
        "identifier": "211_1",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "241_1",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "264_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    )\n  )\n}"
    },
    {
        "identifier": "265_2",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone)\n        (obj_next_to ?char ?phone)\n    )\n    (and\n        (grabbable ?phone)\n        (obj_inside ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n(:action walk_towards_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (movable ?char)\n        (obj_next_to ?char ?phone)\n    )\n    (and\n        (movable ?char)\n        (obj_inside ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (movable ?char)(not (movable ?char))) \n    (obj_next_to ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "287_2",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    ) \n  ) \n}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{ \n\"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n      (grabbable ?phone)\n      (inside ?char dining_room)\n      (obj_inside ?phone home_office)\n    )\n    (and\n      (grabbable ?phone)\n      (inside ?char dining_room)\n      (inside_room ?phone dining_room)\n    )\n  )\n  :effect (and\n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{ \n\"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n      (grabbable ?phone)\n      (inside ?char dining_room)\n      (obj_inside ?phone home_office)\n    )\n    (and\n      (grabbable ?phone)\n      (inside ?char dining_room)\n      (inside_room ?phone dining_room)\n    )\n  )\n  :effect (and\n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "436_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone)\n        (obj_inside ?phone home_office)\n        (inside ?char bathroom)\n    )\n  )\n  :effect (and\n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (when (has_plug ?phone)(not (has_plug ?phone))) \n    (when (has_switch ?phone)(not (has_switch ?phone))) \n    (when (movable ?phone)(not (movable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "442_2",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "474_2",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (holds_rh ?char ?obj) (not (holds_rh ?char ?obj))) \n      (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (next_to ?char ?obj) (not (next_to ?char ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone)\n        (inside ?char dining_room)\n        (next_to ?char ?phone)\n    )\n    (and\n        (grabbable ?phone)\n        (inside ?char dining_room)\n        (next_to ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n(:action walk_towards_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (movable ?char)\n        (inside ?char dining_room)\n        (next_to ?char ?phone)\n    )\n    (and\n        (movable ?char)\n        (inside ?char dining_room)\n        (next_to ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (movable ?char)(not (movable ?char))) \n    (next_to ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n  )\n  :effect (and\n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{ \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "70_1",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    )\n  )\n}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone)\n        (movable ?phone)\n        (inside ?char bathroom)\n        (next_to ?char ?phone)\n    )\n    (and\n        (grabbable ?phone)\n        (movable ?phone)\n        (inside ?char bathroom)\n        (next_to ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (movable ?phone)(not (movable ?phone))) \n    (when (grabbable ?phone)(not (grabbable ?phone))) \n    (holds_rh ?char ?phone) \n  )\n)\n\n(:action walk_towards_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (movable ?phone)\n        (inside ?char bathroom)\n        (next_to ?char ?phone)\n    )\n    (and\n        (movable ?phone)\n        (inside ?char bathroom)\n        (next_to ?char ?phone)\n    )\n  )\n  :effect (and\n    (when (movable ?phone)(not (movable ?phone))) \n    (next_to ?char ?phone) \n  )\n)\n\n}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n  )\n  :effect (and\n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{ \"output\": \n(:action grab_phone\n  :parameters (?char - character ?phone - object)\n  :precondition (or\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n    (and\n        (grabbable ?phone) \n        (obj_inside ?phone home_office) \n        (inside ?char bedroom) \n    )\n  )\n  :effect (and\n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (when (obj_inside ?phone home_office)(not (obj_inside ?phone home_office))) \n    (holds_rh ?char ?phone) \n  )\n)\n}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (movable ?obj) (next_to ?char ?obj)) \n    )\n  )\n}"
    },
    {
        "identifier": "99_2",
        "llm_output": "{ \n  \"output\": \n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (grabbable ?obj) (holds_rh ?char ?obj)) \n    )\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition (or \n      (and \n        (next_to ?char ?obj) \n      ) \n    )\n    :effect (and \n      (when (next_to ?char ?obj) (next_to ?char ?obj)) \n    )\n  )\n}"
    },
    {
        "identifier": "183_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj) (not (can_close ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj) (not (can_close ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "310_2",
        "llm_output": "{ \n  \"output\": \n  (:action switch_off\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action put_on\n    :parameters (?char - character ?obj1 - object ?obj2 - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action switch_on\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action close\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n}"
    },
    {
        "identifier": "721_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (open ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action plug_in \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_plug ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_plug ?obj) (not (has_plug ?obj))) \n      (plugged_in ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "764_2",
        "llm_output": "{ \n  \"output\": \n  (:action put_on \n    :parameters (?char - character ?obj1 - object ?obj2 - object) \n    :precondition (or \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n      (and \n        (movable ?obj1) \n        (movable ?obj2) \n        (next_to ?char ?obj1) \n        (next_to ?char ?obj2) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj1) (not (movable ?obj1))) \n      (when (movable ?obj2) (not (movable ?obj2))) \n      (obj_ontop ?obj1 ?obj2) \n    ) \n  ) \n  (:action walk_towards \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (movable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (movable ?obj) (not (movable ?obj))) \n      (next_to ?char ?obj) \n    ) \n  ) \n  (:action switch_on \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (has_switch ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (has_switch ?obj) (not (has_switch ?obj))) \n      (on ?obj) \n    ) \n  ) \n  (:action grab \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (grabbable ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (grabbable ?obj) (not (grabbable ?obj))) \n      (holds_rh ?char ?obj) \n    ) \n  ) \n  (:action close \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_open ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_open ?obj) (not (can_open ?obj))) \n      (closed ?obj) \n    ) \n  ) \n  (:action open \n    :parameters (?char - character ?obj - object) \n    :precondition (or \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n      (and \n        (can_close ?obj) \n        (next_to ?char ?obj) \n      ) \n    ) \n    :effect (and \n      (when (can_close ?obj) (not (can_close ?obj))) \n      (open ?obj) \n    ) \n  ) \n}"
    },
    {
        "identifier": "419_2",
        "llm_output": "{ \n\"output\": \n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (grabbable ?obj) \n      (next_to ?char ?obj) \n    ) \n  )\n  :effect (and \n    (holds_rh ?char ?obj) \n    (when (holds_lh ?char ?obj) (not (holds_lh ?char ?obj))) \n  )\n)\n\n(:action put_on\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (or \n    (and \n      (obj_ontop ?obj1 ?obj2) \n      (next_to ?char ?obj2) \n    ) \n    (and \n      (obj_ontop ?obj1 ?obj2) \n      (next_to ?char ?obj1) \n    ) \n  )\n  :effect (and \n    (obj_ontop ?obj1 ?obj2) \n    (when (obj_ontop ?obj1 ?obj2) (not (obj_ontop ?obj1 ?obj2))) \n  )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n    (and \n      (next_to ?char ?obj) \n    ) \n  )\n  :effect (and \n    (next_to ?char ?obj) \n  )\n)\n\n}"
    },
    {
        "identifier": "446_2",
        "llm_output": "{ \n  \"output\": \n  (:action open\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action grab\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action put_on\n    :parameters (?char - character ?obj1 - object ?obj2 - object)\n    :precondition ()\n    :effect ()\n  )\n  (:action walk_towards\n    :parameters (?char - character ?obj - object)\n    :precondition ()\n    :effect ()\n  )\n}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{ \n\"output\": \n(:action open\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (can_open ?obj) \n                  (inside ?char bathroom) \n                ) \n                (and \n                  (can_open ?obj) \n                  (inside ?char kitchen) \n                ) \n              )\n  :effect (and \n             (when (can_open ?obj) (not (closed ?obj))) \n             (when (can_open ?obj) (not (clean ?obj))) \n           )\n)\n\n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (grabbable ?obj) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (grabbable ?obj) \n                  (inside ?char kitchen) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (when (grabbable ?obj) (not (grabbable ?obj))) \n             (holds_rh ?char ?obj) \n             (holds_lh ?char ?obj) \n           )\n)\n\n(:action put_on\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\n  :precondition (or \n                (and \n                  (obj_ontop ?obj1 ?obj2) \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj1) \n                ) \n                (and \n                  (obj_ontop ?obj1 ?obj2) \n                  (inside ?char kitchen) \n                  (next_to ?char ?obj1) \n                ) \n              )\n  :effect (and \n             (when (obj_ontop ?obj1 ?obj2) (not (obj_ontop ?obj1 ?obj2))) \n             (obj_ontop ?obj1 ?obj2) \n           )\n)\n\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bathroom) \n                  (next_to ?char ?obj) \n                ) \n                (and \n                  (inside ?char kitchen) \n                  (next_to ?char ?obj) \n                ) \n              )\n  :effect (and \n             (next_to ?char ?obj) \n           )\n)"
    },
    {
        "identifier": "368_1",
        "llm_output": "{ \"output\": \n(:action walk_into\n  :parameters (?char - character ?room - object)\n  :precondition ()\n  :effect (and (inside ?char ?room))\n)\n}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char dining_room) \n                  (obj_next_to ?obj shower) \n                ) \n                (and \n                  (inside ?char dining_room) \n                  (obj_next_to ?obj bathroom) \n                ) \n              )\n  :effect (and \n             (when (inside ?char dining_room) (next_to ?char ?obj)) \n             (when (inside ?char bathroom) (next_to ?char ?obj)) \n           )\n) }"
    },
    {
        "identifier": "975_2",
        "llm_output": "{ \"output\": \n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (or \n                (and \n                  (inside ?char bedroom) \n                  (obj_next_to ?obj bathroom) \n                ) \n                (and \n                  (inside ?char bedroom) \n                  (obj_next_to ?obj bedroom) \n                ) \n              )\n  :effect (and \n             (when (inside ?char bedroom) (not (inside ?char bedroom))) \n             (next_to ?char ?obj) \n           )\n)"
    }
]