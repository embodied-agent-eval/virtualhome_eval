[
    {
        "identifier": "27_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n    (movable ?obj2)\\n    (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj1))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n    (not (open ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (closed ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "417_1",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (movable ?obj2)\\n    (grabbable ?obj1)\\n    (grabbable ?obj2)\\n    (not (obj_ontop ?obj1 ?obj2))\\n    (not (obj_ontop ?obj2 ?obj1))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (or\\n      (holds_rh ?char ?obj)\\n      (holds_lh ?char ?obj)\\n    )\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "850_1",
        "llm_output": "```json\n{\"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (when (on ?obj) (not (on ?obj))) (when (off ?obj) (not (off ?obj))))\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (next_to ?char ?obj2) (grabbable ?obj1) (movable ?obj1) (movable ?obj2) (not (obj_ontop ?obj1 ?obj2)) (not (obj_ontop ?obj2 ?obj1)))\\n  :effect (and (when (holds_rh ?char ?obj1) (not (holds_rh ?char ?obj1))) (when (holds_lh ?char ?obj1) (not (holds_lh ?char ?obj1))) (when (holds_rh ?char ?obj2) (not (holds_rh ?char ?obj2))) (when (holds_lh ?char ?obj2) (not (holds_lh ?char ?obj2))) (obj_ontop ?obj1 ?obj2)))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (when (next_to ?char ?obj) (not (next_to ?char ?obj)))))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (when (off ?obj) (not (off ?obj))) (when (on ?obj) (not (on ?obj)))))\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (when (not (holds_rh ?char ?obj)) (holds_rh ?char ?obj)) (when (not (holds_lh ?char ?obj)) (holds_lh ?char ?obj))))\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (open ?obj))\\n  :effect (and (when (open ?obj) (not (open ?obj))) (when (closed ?obj) (not (closed ?obj)))))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (when (closed ?obj) (not (closed ?obj))) (when (open ?obj) (not (open ?obj)))))\\n\"}"
    },
    {
        "identifier": "954_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj2)\\n    (clothes ?obj1)\\n    (hangable ?obj2)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj1))\\n    (not (next_to ?char ?obj2))\\n    (not (grabbable ?obj1))\\n    (not (movable ?obj2))\\n    (not (clothes ?obj1))\\n    (not (hangable ?obj2))\\n    (ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (not (has_switch ?obj))\\n    (not (off ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (not (grabbable ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (not (can_open ?obj))\\n    (not (open ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (not (can_open ?obj))\\n    (not (closed ?obj))\\n    (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?room1)\\n      (inside ?obj ?room2)\\n      (not (equal ?room1 ?room2))\\n  )\\n  :effect (and\\n      (inside ?char ?room2)\\n      (not (inside ?char ?room1))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "120_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "125_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (inside ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "160_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj) (plugged_in ?obj))\\n  :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "180_2",
        "llm_output": "{\"output\": \"(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?obj ?room)\\n    (inside ?char ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n\")}"
    },
    {
        "identifier": "205_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "222_1",
        "llm_output": "```json\n{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "232_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "310_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "311_1",
        "llm_output": "```json\n{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "331_2",
        "llm_output": "```json\n{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\"\n}"
    },
    {
        "identifier": "392_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (when (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n             (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (next_to ?char ?obj)\\n                 (plugged_in ?obj)\\n                 (off ?obj)\\n               )\\n  :effect (and\\n             (when (off ?obj) (on ?obj))\\n             (when (on ?obj) (off ?obj))\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "394_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "432_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?room1)\\n      (inside ?obj ?room2)\\n      (not (equal ?room1 ?room2))\\n  )\\n  :effect (and\\n      (inside ?char ?room2)\\n      (not (inside ?char ?room1))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "445_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj) (plugged_in ?obj))\\n  :effect (and (on ?obj) (plugged_in ?obj)))\"}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "585_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_floor_lamp\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_floor_lamp\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in_floor_lamp\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action unplug_floor_lamp\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action move_floor_lamp\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n    (next_to ?dest ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?dest)\\n    (obj_next_to ?obj ?dest)\\n  )\\n)\\n(:action move_light\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n    (next_to ?dest ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?dest)\\n    (obj_next_to ?obj ?dest)\\n  )\\n)\\n(:action turn_on_light_in_bathroom\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light_in_bathroom\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_light_in_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light_in_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_floor_lamp_in_bathroom\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_floor_lamp_in_bathroom\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_floor_lamp_in_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_floor_lamp_in_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_light_in_bathroom_and_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light_in_bathroom_and_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_on_floor_lamp_in_bathroom_and_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_floor_lamp_in_bathroom_and_dining_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (}"
    },
    {
        "identifier": "604_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj)))\"}"
    },
    {
        "identifier": "616_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (when (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n             (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (next_to ?char ?obj)\\n                 (plugged_in ?obj)\\n                 (off ?obj)\\n               )\\n  :effect (and\\n             (when (off ?obj) (on ?obj))\\n             (when (on ?obj) (off ?obj))\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "705_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "708_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj) (plugged_in ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj)))\"\n}"
    },
    {
        "identifier": "715_2",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "737_2",
        "llm_output": "```json\n{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "780_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj) (plugged_in ?obj))\\n  :effect (and (on ?obj) (plugged_in ?obj)))\"\n}"
    },
    {
        "identifier": "812_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "835_2",
        "llm_output": "```json\n{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "85_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "874_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (open ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  }"
    },
    {
        "identifier": "491_2",
        "llm_output": "{\n\"output\": \"(:action open_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (inside_room ?toothpaste bathroom)\\n      (next_to ?char ?toothpaste)\\n      (can_open ?toothpaste)\\n      (not (open ?toothpaste))\\n  )\\n  :effect (and\\n      (open ?toothpaste)\\n  )\\n)\\n(:action grab_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (inside_room ?toothpaste bathroom)\\n      (next_to ?char ?toothpaste)\\n      (grabbable ?toothpaste)\\n      (not (holds_rh ?char ?toothpaste))\\n      (not (holds_lh ?char ?toothpaste))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?toothpaste)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char dining_room)\\n      (next_to ?char bathroom)\\n  )\\n  :effect (and\\n      (inside_room ?char bathroom)\\n  )\\n)\\n(:action grab_toothbrush\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n      (inside_room ?toothbrush bathroom)\\n      (next_to ?char ?toothbrush)\\n      (grabbable ?toothbrush)\\n      (not (holds_rh ?char ?toothbrush))\\n      (not (holds_lh ?char ?toothbrush))\\n  )\\n  :effect (and\\n      (holds_lh ?char ?toothbrush)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (not (inside_room ?char ?obj))))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (pourable ?obj1) (recipient ?obj2) (open ?obj1))\\n  :effect (and (inside ?obj1 ?obj2) (not (open ?obj1))))\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj))))\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?dest) (holds_rh ?char ?obj))\\n  :effect (and (obj_ontop ?obj ?dest) (not (holds_rh ?char ?obj))))\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (next_to ?char ?dest) (not (obj_ontop ?obj ?dest)))\\n  :effect (and (obj_ontop ?obj ?dest) (not (next_to ?char ?obj))))\\n(:action brush_teeth\\n  :parameters (?char - character ?toothbrush - object ?tooth_paste - object)\\n  :precondition (and (holds_rh ?char ?toothbrush) (holds_lh ?char ?tooth_paste))\\n  :effect (and (not (holds_rh ?char ?toothbrush)) (not (holds_lh ?char ?tooth_paste))))\"\n}"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (when (closed ?obj) (open ?obj)) (when (not (closed ?obj)) (open ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj)))\"\n}"
    },
    {
        "identifier": "152_2",
        "llm_output": "```json\n{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (holds_rh ?char ?obj1)\\n    (can_open ?obj2)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1))\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "298_2",
        "llm_output": "{\n\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n    (open ?obj2)\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (has_switch ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj))\"\n}"
    },
    {
        "identifier": "703_2",
        "llm_output": "{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n    (next_to ?char ?obj2)\\n    (can_open ?obj2)\\n    (open ?obj2)\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (containers ?obj2)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1))\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (containers ?obj2)\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj1)\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action walk_away\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (pourable ?obj1)\\n    (holds_rh ?char ?obj1)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action stand_up_from_lying\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (next_to ?char ?hang_obj)\\n    (hangable ?hang_obj)\\n    (clothes ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_on_table\\n  :parameters (?char - character ?obj - object ?table - object)\\n  :precondition (and\\n    (next_to ?char ?table)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?table}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{\n\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (can_open ?obj2)\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n    (not (holds_rh ?char ?obj1))\\n    (not (holds_lh ?char ?obj1))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (or\\n      (holds_rh ?char ?obj)\\n      (holds_lh ?char ?obj)\\n    )\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{\n\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside_room ?room ?dest) (not (inside ?char ?room)))\\n  :effect (and (inside ?char ?room) (not (inside ?char ?dest)))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?room) (inside ?obj ?room))\\n  :effect (facing ?char ?obj)\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char) (inside ?char ?room))\\n  :effect (and (not (sitting ?char)) (not (inside ?char ?room)))\\n)\\n\"\n}"
    },
    {
        "identifier": "323_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "430_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n      (not (ontop ?char ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (containers ?dest)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (not (next_to ?char ?dest))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (containers ?dest)\\n      (obj_inside ?obj ?dest)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?dest))\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n  )\\n)\\n(:action flush\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n  )\\n)\\n(:action wash_hands\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action dry_hands\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action use_toilet_paper\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action throw_away\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action clean\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (on ?obj))\\n      (not (open ?obj))\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (hangable ?hang_obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\}"
    },
    {
        "identifier": "478_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (not (ontop ?char ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action go_inside\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside_room ?obj ?obj2)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (inside ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action go_outside\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)\\n      (inside_room ?obj ?obj2)\\n  )\\n  :effect (and\\n      (not (inside ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action flush\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n      (containers ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (clean ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (empty ?obj)\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (empty ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (read ?obj)\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (seen ?obj)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (lying ?char)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (standing ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n      (standing ?char)\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (cut ?obj)\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?char ?obj2)\\n      (pourable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (next_to ?char ?obj2))\\n      (empty ?obj)\\n      (full ?obj2)\\n  )\\n)\\n(:action open_container\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (containers ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action close_container\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (containers ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?char ?obj2)\\n      (containers ?obj2)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (not (next_to ?char ?obj2))\\n      (obj_inside ?obj ?obj2)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?obj2 - object)\\}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{\n\"output\": \"(:action go_to_bathroom\\n  :parameters (?char - character ?bathroom - object)\\n  :precondition (and\\n      (inside ?char ?bathroom)\\n      (next_to ?char ?bathroom)\\n  )\\n  :effect (and\\n      (inside ?char ?bathroom)\\n      (facing ?char ?bathroom)\\n  )\\n)\\n(:action open_toilet\\n  :parameters (?char - character ?toilet - object)\\n  :precondition (and\\n      (next_to ?char ?toilet)\\n      (can_open ?toilet)\\n  )\\n  :effect (and\\n      (open ?toilet)\\n      (facing ?char ?toilet)\\n  )\\n)\\n(:action sit_on_toilet\\n  :parameters (?char - character ?toilet - object)\\n  :precondition (and\\n      (next_to ?char ?toilet)\\n      (open ?toilet)\\n      (sittable ?toilet)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (on ?char ?toilet)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "624_2",
        "llm_output": "```json\n{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action open_toilet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action close_toilet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action pick_up_toilet_paper\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down_toilet_paper\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open_dresser\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action close_dresser\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action put_toilet_paper_in_toilet\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj1)\\n      (next_to ?char ?obj2)\\n      (holds_rh ?char ?obj1)\\n      (open ?obj2)\\n      (containers ?obj2)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj1))\\n      (not (holds_rh ?char ?obj1))\\n      (not (open ?obj2))\\n      (inside ?obj1 ?obj2)\\n  )\\n)\\n(:action flush_toilet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "188_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj))\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (grabbable ?obj)) (not (on ?obj)) (not (off ?obj)) (not (plugged_in ?obj)) (not (plugged_out ?obj)) (not (sitting ?char)) (not (lying ?char)) (not (clean ?obj)) (not (dirty ?obj)) (not (obj_ontop ?obj1 ?obj2)) (not (ontop ?char ?obj)) (not (obj_inside ?obj1 ?obj2)) (not (inside ?char ?obj)) (not (obj_next_to ?obj1 ?obj2)) (not (next_to ?char ?obj)) (not (between ?obj1 ?obj2 ?obj3)) (not (facing ?char ?obj)) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)) (not (grabbable ?obj)) (not (cuttable ?obj)) (not (can_open ?obj)) (not (readable ?obj)) (not (movable ?obj)) (not (pourable ?obj)) (not (has_switch ?obj)) (not (lookable ?obj)) (not (has_plug ?obj)) (not (drinkable ?obj)) (not (sittable ?obj)) (not (lieable ?obj)) (not (clothes ?obj)) (not (eatable ?obj))))\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (next_to ?char ?obj)) (not (has_switch ?obj)) (not (off ?obj)) (not (on ?obj)) (not (plugged_in ?obj)) (not (plugged_out ?obj)) (not (sitting ?char)) (not (lying ?char)) (not (clean ?obj)) (not (dirty ?obj)) (not (obj_ontop ?obj1 ?obj2)) (not (ontop ?char ?obj)) (not (obj_inside ?obj1 ?obj2)) (not (inside ?char ?obj)) (not (obj_next_to ?obj1 ?obj2)) (not (next_to ?char ?obj)) (not (between ?obj1 ?obj2 ?obj3)) (not (facing ?char ?obj)) (not (holds_lh ?char ?obj)) (not (holds_rh ?char ?obj)) (not (grabbable ?obj)) (not (cuttable ?obj)) (not (can_open ?obj)) (not (readable ?obj)) (not (movable ?obj)) (not (pourable ?obj)) (not (has_switch ?obj)) (not (lookable ?obj)) (not (has_plug ?obj)) (not (drinkable ?obj)) (not (sittable ?obj)) (not (lieable ?obj)) (not (clothes ?obj)) (not (eatable ?obj))))\"\n}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "153_2",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "196_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (obj_next_to ?obj powersocket)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (facing ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "201_2",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (inside_room ?obj ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "232_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "234_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n      (movable ?obj)\\n      (grabbable ?obj)\\n      (inside_room ?char bedroom)\\n      (inside_room ?obj bedroom)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (next_to ?char ?obj))\\n      (not (movable ?obj))\\n      (not (grabbable ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside_room ?char bedroom)\\n      (inside_room ?obj bedroom)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (not (on ?obj))\\n      (inside_room ?char bedroom)\\n      (inside_room ?obj bedroom)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{\"output\": \"(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (off ?computer)\\n    (plugged_in ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action open_bookshelf\\n  :parameters (?char - character ?bookshelf - object)\\n  :precondition (and\\n    (next_to ?char ?bookshelf)\\n    (can_open ?bookshelf)\\n  )\\n  :effect (and\\n    (open ?bookshelf)\\n  )\\n)\\n(:action put_in_bookshelf\\n  :parameters (?char - character ?obj - object ?bookshelf - object)\\n  :precondition (and\\n    (next_to ?char ?bookshelf)\\n    (open ?bookshelf)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_inside ?obj ?bookshelf)\\n  )\\n)\\n(:action close_bookshelf\\n  :parameters (?char - character ?bookshelf - object)\\n  :precondition (and\\n    (next_to ?char ?bookshelf)\\n    (open ?bookshelf)\\n  )\\n  :effect (and\\n    (closed ?bookshelf)\\n  )\\n)\\n(:action take_out_from_bookshelf\\n  :parameters (?char - character ?obj - object ?bookshelf - object)\\n  :precondition (and\\n    (next_to ?char ?bookshelf)\\n    (open ?bookshelf)\\n    (obj_inside ?obj ?bookshelf)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (obj_inside ?obj ?bookshelf))\\n  )\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action pick_up_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action put_down_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action pick_up_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n)\\n(:action put_down_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?keyboard))\\n  )\\n)\\n(:action pick_up_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (grabbable ?chair)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?chair)\\n  )\\n)\\n(:action put_down_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (holds_rh ?char ?chair)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?chair))\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n    (on ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n    (off ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action look_at_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (lookable ?computer)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (on ?computer)\\n  )\\n  :effect (and\\n    (off ?computer)\\n  )\\n)\\n(:action plug_in_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (has_plug ?mouse)\\n    (not (plugged_in ?mouse))\\n  )\\n  :effect (and\\n    (plugged_in ?mouse)\\n  )\\n)\\n(:action plug_in_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (has_plug ?keyboard)\\n    (not (plugged_in ?keyboard))\\n  )\\n  :effect (and\\n    (plugged_in ?keyboard)\\n  )\\n)\\n(:action unplug_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (has_plug ?mouse)\\n    (plugged_in ?mouse)\\n  )\\n  :effect (and\\n    (not (plugged_in ?mouse))\\n  )\\n)\\n(:action unplug_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (has_plug ?keyboard)\\n    (plugged_in ?keyboard)\\n  )\\n  :effect (and\\n    (not (plugged_in ?keyboard))\\n  )\\n)\\n(:action move_chair\\n  :parameters (?char - character ?chair - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (movable ?chair)\\n    (next_to ?dest ?chair)\\n  )\\n  :effect (and\\n    (obj_next_to ?chair ?dest)\\n  )\\n)\\n(:action move_mouse\\n  :parameters (?char - character ?mouse - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (movable ?mouse)\\n    (next_to ?dest ?mouse)\\n  )\\n  :effect (and\\n    (obj_next_to ?mouse ?dest)\\n  )\\n)\\n(:action move_keyboard\\n  :parameters (?char - character ?keyboard - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (movable ?keyboard)\\n    (next_to ?dest ?keyboard)\\n  )\\n  :effect (and\\n    (obj_next_to ?keyboard ?dest)\\n  )\\n)\\n(:action move_computer\\n  :parameters (?char - character ?computer - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (movable ?computer)\\n    (next_to ?dest ?computer)\\n  )\\n  :effect (and\\n    (obj_next_to ?computer ?dest)\\n  )\\n)\\n(:action move_desk\\n  :parameters (?char - character ?desk - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?desk}"
    },
    {
        "identifier": "373_1",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n\\\"\\n}"
    },
    {
        "identifier": "406_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n      (grabbable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "409_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "419_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_to_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action pick_up_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action put_down_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj)))\\n(:action plug_in_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (plugged_in ?obj) (next_to ?char ?obj)))\\n(:action switch_on_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj)))\\n\"}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "437_2",
        "llm_output": "```json\n{\"output\": \"(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (off ?computer)\\n    (plugged_in ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (on ?computer)\\n  )\\n  :effect (and\\n    (off ?computer)\\n  )\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action pick_up_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (inside ?char ?door)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (inside ?char ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (inside ?char ?door)\\n  )\\n  :effect (and\\n    (closed ?door)\\n  )\\n)\\n(:action walk_to_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action look_at_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut_hair\\n  :parameters (?char - character ?hair - object)\\n  :precondition (and\\n    (next_to ?char ?hair)\\n    (cuttable ?hair)\\n    (holds_rh ?char ?hair)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?hair))\\n  )\\n)\\n(:action eat_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action lie_down_on_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action read_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (next_to ?char ?hang_obj)\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_object_on_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (next_to ?char ?clothes)\\n    (clothes ?clothes)\\n    (ontop ?clothes ?char)\\n  )\\n  :effect (and\\n    (not (ontop ?clothes ?char))\\n    (holds_rh ?char ?clothes)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (next_to ?char ?clothes)\\n    (clothes ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?char)\\n  )\\n)\\n(:action put_object_in_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (holds_rh ?char ?obj)\\n    (obj_inside ?dest ?char)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_object_out_of_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (obj_inside ?obj ?dest)\\n    (obj_inside ?dest ?char)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n    (off ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n    (on ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action open_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to}"
    },
    {
        "identifier": "440_1",
        "llm_output": "```json\n{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "46_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n      (not (inside_room ?obj ?char))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (not (inside_room ?obj ?char))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (inside_room ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (not (inside_room ?obj ?char))\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "475_2",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (not (plugged_in ?obj)))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (not (facing ?char ?obj)))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (not (on ?obj)))\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "503_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "670_2",
        "llm_output": "```json\n{\"output\": \"(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (off ?computer)\\n    (plugged_in ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n    (off ?light)\\n    (plugged_in ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action open_desk\\n  :parameters (?char - character ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?desk)\\n    (closed ?desk)\\n  )\\n  :effect (and\\n    (open ?desk)\\n  )\\n)\\n(:action close_desk\\n  :parameters (?char - character ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?desk)\\n    (open ?desk)\\n  )\\n  :effect (and\\n    (closed ?desk)\\n  )\\n)\\n(:action pick_up_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action put_down_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action pick_up_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n)\\n(:action put_down_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?keyboard))\\n  )\\n)\\n(:action plug_in_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_out ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_in ?computer)\\n  )\\n)\\n(:action plug_in_light\\n  :parameters (?char - character ?light - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (next_to ?light ?powersocket)\\n    (has_plug ?light)\\n    (plugged_out ?light)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_in ?light)\\n  )\\n)\\n(:action unplug_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_in ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_out ?computer)\\n  )\\n)\\n(:action unplug_light\\n  :parameters (?char - character ?light - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (next_to ?light ?powersocket)\\n    (has_plug ?light)\\n    (plugged_in ?light)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_out ?light)\\n  )\\n)\\n(:action move_mouse_to_desk\\n  :parameters (?char - character ?mouse - object ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (next_to ?mouse ?desk)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (obj_ontop ?mouse ?desk)\\n  )\\n)\\n(:action move_keyboard_to_desk\\n  :parameters (?char - character ?keyboard - object ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (next_to ?keyboard ?desk)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (obj_ontop ?keyboard ?desk)\\n  )\\n)\\n(:action move_mouse_to_mousepad\\n  :parameters (?char - character ?mouse - object ?mousepad - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (next_to ?mouse ?mousepad)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (obj_ontop ?mouse ?mousepad)\\n  )\\n)\\n(:action move_keyboard_to_mousepad\\n  :parameters (?char - character ?keyboard - object ?mousepad - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (next_to ?keyboard ?mousepad)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (obj_ontop ?keyboard ?mousepad)\\n  )\\n)\\n(:action move_mouse_to_floor\\n  :parameters (?char - character ?mouse - object ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (next_to ?mouse ?floor)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (obj_ontop ?mouse ?floor)\\n  )\\n)\\n(:action move_keyboard_to_floor\\n  :parameters (?char - character ?keyboard - object ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (next_to ?keyboard ?floor)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (obj_ontop ?keyboard ?floor)\\n  )\\n)\\n(:action move_mouse_to_chair\\n  :parameters (?char - character ?mouse - object ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (next_to ?mouse ?chair)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (obj_ontop ?mouse ?chair)\\n  )\\n)\\n(:action move_keyboard_to_chair\\n  :parameters (?char - character ?keyboard - object ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (next_to ?keyboard ?chair)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (obj_ontop ?keyboard ?chair)\\n  )\\n)\\n(:action move_mouse_to_wall\\n  :parameters (?char - character ?mouse - object ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (next_to ?mouse ?wall)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (obj_ontop ?mouse ?wall)\\n  )\\n)\\n(:action move_keyboard_to_wall\\n}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj) (open ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action type\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj) (open ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (not (on ?obj)))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (ontop ?char ?obj) (sitting ?char))\\n  :effect (and (not (sitting ?char)) (not (ontop ?char ?obj)))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (ontop ?char ?obj) (lying ?char))\\n  :effect (and (not (lying ?char)) (not (ontop ?char ?obj)))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (not (eatable ?obj)))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (not (drinkable ?obj)))\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (clothes ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (clothes ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "787_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "910_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "91_2",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "93_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "962_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "190_1",
        "llm_output": "{\n\"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (on ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (not (on ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj1)\\n      (next_to ?char ?obj2)\\n      (movable ?obj1)\\n      (sittable ?obj2)\\n  )\\n  :effect (and\\n      (ontop ?obj1 ?obj2)\\n      (not (next_to ?char ?obj1))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n      (not (closed ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n      (not (open ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "201_1",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?char ?room)\\n    (inside_room ?obj ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "223_2",
        "llm_output": "```json\n{\n\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n    (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "327_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (holds_rh ?char ?obj1)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n    (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "417_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj2)\\n      (holds_rh ?char ?obj1)\\n      (movable ?obj1)\\n      (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj1 ?obj2)\\n      (not (holds_rh ?char ?obj1))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "487_1",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n    (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (closed ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n    (not (open ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "650_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "783_1",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{\n\"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (on ?obj) (has_switch ?obj))\\n  :effect (and (off ?obj) (not (on ?obj)))\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (movable ?obj1) (grabbable ?obj1) (next_to ?char ?obj2) (not (obj_ontop ?obj1 ?obj2)))\\n  :effect (and (obj_ontop ?obj1 ?obj2) (not (next_to ?char ?obj2)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?char ?room) (inside_room ?obj ?room) (not (next_to ?char ?obj)))\\n  :effect (and (next_to ?char ?obj) (not (inside_room ?char ?room)))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (on ?obj) (has_switch ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{\n\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (grabbable ?obj1)\\n    (movable ?obj1)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)\\n    (not (next_to ?char ?obj2))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?char ?room)\\n    (inside_room ?obj ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "911_1",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{\"output\": \"(:action go_to_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n      (inside ?char ?bed)\\n      (lieable ?bed)\\n      (sittable ?bed)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?bed)\\n  )\\n)\\n(:action walk_to_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n      (inside_room ?bed ?room)\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?bed)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n      (inside ?char ?bed)\\n      (lieable ?bed)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?bed)\\n  )\\n)\\n\")}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{\n\"output\": \"(:action walk_to_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (inside ?char bathroom)\\n    (inside_room ?bed bedroom)\\n    (next_to ?char bathroom)\\n  )\\n  :effect (and\\n    (inside ?char bedroom)\\n    (next_to ?char ?bed)\\n  )\\n)\\n(:action lie_on_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (next_to ?char ?bed)\\n    (lieable ?bed)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?bed)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "244_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{\n\"output\": \"(:action walk_to_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (inside ?char bathroom)\\n    (inside_room ?bed bedroom)\\n    (next_to ?char bathroom)\\n  )\\n  :effect (and\\n    (inside ?char bedroom)\\n    (next_to ?char ?bed)\\n  )\\n)\\n(:action lie_on_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (next_to ?char ?bed)\\n    (lieable ?bed)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?bed)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "509_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\")\n```}"
    },
    {
        "identifier": "875_1",
        "llm_output": "```json\n{\"output\": \"(:action open_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n    (can_open ?curtain)\\n  )\\n  :effect (and\\n    (open ?curtain)\\n  )\\n)\\n(:action close_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n    (can_open ?curtain)\\n  )\\n  :effect (and\\n    (closed ?curtain)\\n  )\\n)\\n(:action turn_on_tablelamp\\n  :parameters (?char - character ?tablelamp - object)\\n  :precondition (and\\n    (next_to ?char ?tablelamp)\\n    (has_switch ?tablelamp)\\n  )\\n  :effect (and\\n    (on ?tablelamp)\\n  )\\n)\\n(:action turn_off_tablelamp\\n  :parameters (?char - character ?tablelamp - object)\\n  :precondition (and\\n    (next_to ?char ?tablelamp)\\n    (has_switch ?tablelamp)\\n  )\\n  :effect (and\\n    (off ?tablelamp)\\n  )\\n)\\n(:action pick_up_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :precondition (and\\n    (next_to ?char ?pillow)\\n    (grabbable ?pillow)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?pillow)\\n  )\\n)\\n(:action put_down_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :precondition (and\\n    (holds_rh ?char ?pillow)\\n    (next_to ?char ?pillow)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?pillow))\\n  )\\n)\\n(:action pick_up_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (grabbable ?drawing)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?drawing)\\n  )\\n)\\n(:action put_down_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (holds_rh ?char ?drawing)\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?drawing))\\n  )\\n)\\n(:action walk_to_bed\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (next_to ?char ?bed)\\n  )\\n  :effect (and\\n    (ontop ?char ?bed)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (ontop ?char ?bed)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (ontop ?char ?bed)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action walk_to_nightstand\\n  :parameters (?char - character ?nightstand - object)\\n  :precondition (and\\n    (next_to ?char ?nightstand)\\n  )\\n  :effect (and\\n    (ontop ?char ?nightstand)\\n  )\\n)\\n(:action open_nightstand\\n  :parameters (?char - character ?nightstand - object)\\n  :precondition (and\\n    (ontop ?char ?nightstand)\\n    (can_open ?nightstand)\\n  )\\n  :effect (and\\n    (open ?nightstand)\\n  )\\n)\\n(:action close_nightstand\\n  :parameters (?char - character ?nightstand - object)\\n  :precondition (and\\n    (ontop ?char ?nightstand)\\n    (can_open ?nightstand)\\n  )\\n  :effect (and\\n    (closed ?nightstand)\\n  )\\n)\\n(:action walk_to_mat\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (next_to ?char ?mat)\\n  )\\n  :effect (and\\n    (ontop ?char ?mat)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (ontop ?char ?mat)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (ontop ?char ?mat)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (ontop ?char ?wall)\\n  )\\n)\\n(:action walk_to_window\\n  :parameters (?char - character ?window - object)\\n  :precondition (and\\n    (next_to ?char ?window)\\n  )\\n  :effect (and\\n    (ontop ?char ?window)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (ontop ?char ?floor)\\n  )\\n)\\n(:action walk_to_tablelamp\\n  :parameters (?char - character ?tablelamp - object)\\n  :precondition (and\\n    (next_to ?char ?tablelamp)\\n  )\\n  :effect (and\\n    (ontop ?char ?tablelamp)\\n  )\\n)\\n(:action walk_to_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n  )\\n  :effect (and\\n    (ontop ?char ?curtain)\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (ontop ?char ?drawing)\\n  )\\n)\\n(:action walk_to_bedside\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n    (next_to ?char ?bed)\\n  )\\n  :effect (and\\n    (ontop ?char ?bed)\\n  )\\n)\\n(:action walk_to_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :precondition (and\\n    (next_to ?char ?pillow)\\n  )\\n  :effect (and\\n    (ontop ?char ?pillow)\\n  )\\n)\\n(:action walk_to_nightstandside\\n  :parameters (?char - character ?nightstand - object)\\n  :precondition (and\\n    (next_to ?char ?nightstand)\\n  )\\n  :effect (and\\n    (ontop ?char ?nightstand)\\n  )\\n)\\n(:action walk_to_matside\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (next_to ?char ?mat)\\n  )\\n  :effect (and\\n    (ontop ?char ?mat)\\n  )\\n)\\n(:action walk_to_wallside\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (ontop ?char ?wall)\\n  )\\n)\\n(:action walk_to_windowside\\n  :parameters (?char - character ?window - object)\\n  :precondition (and\\n    (next_to ?char ?window)\\n  )\\n  :effect (and\\n    (ontop ?char ?window)\\n  )\\n)\\n(:action walk_to_floorside\\n  :parameters (?char - character ?floor - object)\\}"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\\"\\n}"
    },
    {
        "identifier": "12_2",
        "llm_output": "```json\n{\"output\": \"[\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (not (inside ?char ?room))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n  )\\n  :effect (and\\n      (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (on ?light)\\n  )\\n  :effect (and\\n      (off ?light)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (next_to ?char ?chair)\\n      (sittable ?chair)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n      (next_to ?char ?bed)\\n      (lieable ?bed)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (next_to ?char ?book)\\n      (readable ?book)\\n  )\\n  :effect ()\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (on ?tv)\\n  )\\n  :effect ()\\n)\\n(:action eat_food\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n      (eatable ?food)\\n  )\\n  :effect ()\\n)\\n(:action drink_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (drinkable ?water)\\n  )\\n  :effect ()\\n)\\n(:action talk_to_someone\\n  :parameters (?char - character ?someone - character)\\n  :precondition (and\\n      (next_to ?char ?someone)\\n  )\\n  :effect ()\\n)\\n(:action play_game\\n  :parameters (?char - character ?game - object)\\n  :precondition (and\\n      (next_to ?char ?game)\\n  )\\n  :effect ()\\n)\\n(:action clean_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (dirty ?obj)\\n  )\\n  :effect (and\\n      (clean ?obj)\\n  )\\n)\\n(:action cook_food\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n  )\\n  :effect ()\\n)\\n(:action wash_dishes\\n  :parameters (?char - character ?dishes - object)\\n  :precondition (and\\n      (next_to ?char ?dishes)\\n      (dirty ?dishes)\\n  )\\n  :effect (and\\n      (clean ?dishes)\\n  )\\n)\\n(:action take_shower\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action brush_teeth\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_bed\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action wake_up\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action leave_home\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_home\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_work\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_work\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_school\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_school\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_gym\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_gym\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_store\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_store\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_park\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_park\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_restaurant\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_restaurant\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_movies\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from}"
    },
    {
        "identifier": "137_2",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\\"\\n}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (holds_rh ?char ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (not (holds_rh ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (can_open ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (open ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (can_open ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (closed ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (on ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (off ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_plug ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (plugged_in ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_plug ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (plugged_out ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (sitting ?char)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (sitting ?char)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (not (sitting ?char))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (lieable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (lying ?char)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (lieable ?obj)\\n        (lying ?char)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (not (lying ?char))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (lookable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (facing ?char ?obj)\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (readable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (eatable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (drinkable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (cuttable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (clothes ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (clothes ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n        (clothes ?clothes)\\n        (hangable ?hang_obj)\\n        (next_to ?char ?hang_obj)\\n    )\\n  :effect (and\\n             (ontop ?clothes ?hang_obj)\\n             (next_to ?char ?hang_obj)\\n           )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n    )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n        (not (obj_ontop ?obj ?dest))\\n    )\\n  :effect (and\\n        (obj_ontop ?obj ?dest)\\n        (next_to ?char ?dest)\\n    )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n        (next_to ?char ?target)\\n    )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n        (next_to ?char ?target)\\n    )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n        (next_to ?char ?target)\\n    )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target -}"
    },
    {
        "identifier": "220_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (next_to ?char ?room)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "242_1",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\\"\\n}"
    },
    {
        "identifier": "279_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (next_to ?char ?room)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "287_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "292_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (next_to ?char ?obj))\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)) (not (grabbable ?obj)))\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj) (grabbable ?obj))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n\"}"
    },
    {
        "identifier": "297_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (pourable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_rh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_lh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n      (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action cuddle\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action pat\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action tickle\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect}"
    },
    {
        "identifier": "381_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (next_to ?char ?room)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "388_2",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\\"\\n}"
    },
    {
        "identifier": "38_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action pet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (body_part ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n      (hold_lh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n    (and\\n      (hold_rh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action cuddle\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action pet\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action scratch\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action play_with\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (off ?obj) (not (on ?obj)))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj))\\n  :effect (and (plugged_out ?obj) (not (plugged_in ?obj)))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (not (standing ?char)))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char))\\n  :effect (and (standing ?char) (not (sitting ?char)))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lieable ?obj) (next_to ?char ?obj))\\n  :effect (and (lying ?char) (not (sitting ?char)))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and (lying ?char))\\n  :effect (and (sitting ?char) (not (lying ?char)))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lookable ?obj) (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (not (facing ?char ?obj2)))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (readable ?obj) (next_to ?char ?obj))\\n  :effect (and (reading ?char) (not (reading ?char2)))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (eatable ?obj) (next_to ?char ?obj))\\n  :effect (and (eating ?char) (not (eating ?char2)))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (drinkable ?obj) (next_to ?char ?obj))\\n  :effect (and (drinking ?char) (not (drinking ?char2)))\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (cuttable ?obj) (next_to ?char ?obj))\\n  :effect (and (cut ?obj) (not (cut ?obj2)))\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (clothes ?obj) (next_to ?char ?obj))\\n  :effect (and (wearing ?char ?obj) (not (wearing ?char ?obj2)))\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (clothes ?obj) (wearing ?char ?obj))\\n  :effect (and (not (wearing ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action wash\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action clean\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action sweep\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action vacuum\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action mop\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action dust\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action wipe\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action scrub\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action polish\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action iron\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action fold\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (clean ?obj) (not (dirty ?obj)))\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj)))\\n)\\n(:action open_window\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action close_window\\n  :parameters (?char -}"
    },
    {
        "identifier": "451_1",
        "llm_output": "```json\n{\"output\": \"[\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (not (inside ?char ?room))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n  )\\n  :effect (and\\n      (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (on ?light)\\n  )\\n  :effect (and\\n      (off ?light)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (next_to ?char ?chair)\\n      (sittable ?chair)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?bed - object)\\n  :precondition (and\\n      (next_to ?char ?bed)\\n      (lieable ?bed)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (next_to ?char ?book)\\n      (readable ?book)\\n  )\\n  :effect ()\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (on ?tv)\\n  )\\n  :effect ()\\n)\\n(:action eat_food\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n      (eatable ?food)\\n  )\\n  :effect ()\\n)\\n(:action drink_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (drinkable ?water)\\n  )\\n  :effect ()\\n)\\n(:action talk_to_someone\\n  :parameters (?char - character ?someone - character)\\n  :precondition (and\\n      (next_to ?char ?someone)\\n  )\\n  :effect ()\\n)\\n(:action play_game\\n  :parameters (?char - character ?game - object)\\n  :precondition (and\\n      (next_to ?char ?game)\\n  )\\n  :effect ()\\n)\\n(:action clean_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (dirty ?obj)\\n  )\\n  :effect (and\\n      (clean ?obj)\\n  )\\n)\\n(:action cook_food\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n  )\\n  :effect ()\\n)\\n(:action wash_dishes\\n  :parameters (?char - character ?dishes - object)\\n  :precondition (and\\n      (next_to ?char ?dishes)\\n      (dirty ?dishes)\\n  )\\n  :effect (and\\n      (clean ?dishes)\\n  )\\n)\\n(:action take_shower\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action brush_teeth\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_bed\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action wake_up\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action leave_home\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_home\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_work\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_work\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_school\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_school\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_gym\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_gym\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_store\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_store\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_park\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_park\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_restaurant\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from_the_restaurant\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action go_to_the_movies\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action come_back_from}"
    },
    {
        "identifier": "469_2",
        "llm_output": "{\"output\": \"(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?obj)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action move_obj\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (next_to ?char ?dest)\\n      (next_to ?obj ?dest)\\n  )\\n)\\n(:action push_obj\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (next_to ?char ?dest)\\n      (next_to ?obj ?dest)\\n  )\\n)\\n(:action pull_obj\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (next_to ?char ?dest)\\n      (next_to ?obj ?dest)\\n  )\\n)\\n(:action open_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action read_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour_obj\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (pourable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (next_to ?char ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (next_to ?char ?hang_obj)\\n      (ontop ?clothes ?hang_obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?clothes)\\n      (not (ontop ?clothes ?hang_obj))\\n  )\\n)\\n(:action fold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (next_to ?char ?clothes)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n  )\\n)\\n(:action unfold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (next_to ?char ?clothes)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?clothes)\\n  )\\n)\\n(:action put_clothes_in_drawer\\n}"
    },
    {
        "identifier": "479_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (next_to ?char ?room)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "502_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj)))\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and (next_to ?char ?door) (can_open ?door))\\n  :effect (and (open ?door) (next_to ?char ?door)))\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and (next_to ?char ?door) (open ?door))\\n  :effect (and (closed ?door) (next_to ?char ?door)))\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (next_to ?char ?room) (open ?room))\\n  :effect (and (inside ?char ?room) (not (next_to ?char ?room))))\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside ?char ?room) (open ?room))\\n  :effect (and (not (inside ?char ?room)) (next_to ?char ?room)))\\n(:action bring_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?dest))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?dest) (obj_inside ?obj ?dest)))\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (obj_inside ?obj ?dest) (next_to ?char ?dest))\\n  :effect (and (holds_rh ?char ?obj) (next_to ?char ?dest) (not (obj_inside ?obj ?dest))))\"\n}"
    },
    {
        "identifier": "856_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_ontop ?obj couch)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (inside ?char ?obj)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n    (open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (inside ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (ontop ?char ?obj)\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (ontop ?char ?obj)\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action move_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n    (obj_next_to ?obj ?dest)\\n  )\\n)\\n(:action open_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action look_at_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action pour_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?dest)\\n    (pourable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n      (hold_lh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n    (and\\n      (hold_rh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:}"
    },
    {
        "identifier": "384_1",
        "llm_output": "{\"output\": \"(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (on ?char ?chair)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n    (not (on ?char ?chair))\\n  )\\n)\\n(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (off ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (on ?computer)\\n  )\\n  :effect (and\\n    (off ?computer)\\n  )\\n)\\n(:action pick_up_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action pick_up_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (holds_lh ?char ?keyboard)\\n  )\\n)\\n(:action put_down_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action put_down_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (holds_lh ?char ?keyboard)\\n  )\\n  :effect (and\\n    (not (holds_lh ?char ?keyboard))\\n  )\\n)\\n(:action plug_in_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_out ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_in ?computer)\\n  )\\n)\\n(:action unplug_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_in ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_out ?computer)\\n  )\\n)\\n(:action browse_internet\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (on ?computer)\\n    (holds_rh ?char ?mouse)\\n    (holds_lh ?char ?keyboard)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_plug ?obj)\\n    (next_to ?char home_office)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (off ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point_at\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point_at_obj\\n  :parameters (?char - character ?target - object)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action look}"
    },
    {
        "identifier": "60_1",
        "llm_output": "{\"output\": \"(:action open_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (has_switch ?laptop)\\n    (off ?laptop)\\n  )\\n  :effect (and\\n    (on ?laptop)\\n    (facing ?char ?laptop)\\n  )\\n)\\n(:action close_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (has_switch ?laptop)\\n    (on ?laptop)\\n  )\\n  :effect (and\\n    (off ?laptop)\\n  )\\n)\\n(:action plug_in_laptop\\n  :parameters (?char - character ?laptop - object ?plug - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (next_to ?laptop ?plug)\\n    (has_plug ?laptop)\\n    (off ?laptop)\\n  )\\n  :effect (and\\n    (plugged_in ?laptop)\\n  )\\n)\\n(:action unplug_laptop\\n  :parameters (?char - character ?laptop - object ?plug - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (next_to ?laptop ?plug)\\n    (has_plug ?laptop)\\n    (on ?laptop)\\n  )\\n  :effect (and\\n    (not (plugged_in ?laptop))\\n  )\\n)\\n(:action turn_on_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (has_switch ?laptop)\\n    (plugged_in ?laptop)\\n    (off ?laptop)\\n  )\\n  :effect (and\\n    (on ?laptop)\\n  )\\n)\\n(:action turn_off_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (has_switch ?laptop)\\n    (plugged_in ?laptop)\\n    (on ?laptop)\\n  )\\n  :effect (and\\n    (off ?laptop)\\n  )\\n)\\n(:action browse_internet\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (on ?laptop)\\n    (plugged_in ?laptop)\\n  )\\n  :effect ()\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action pick_up_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (grabbable ?laptop)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?laptop)\\n  )\\n)\\n(:action put_down_laptop\\n  :parameters (?char - character ?laptop - object)\\n  :precondition (and\\n    (holds_rh ?char ?laptop)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?laptop))\\n  )\\n)\\n(:action pick_up_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action put_down_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action pick_up_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n)\\n(:action put_down_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (holds_rh ?char ?keyboard)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?keyboard))\\n  )\\n)\\n(:action pick_up_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (grabbable ?chair)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?chair)\\n  )\\n)\\n(:action put_down_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (holds_rh ?char ?chair)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?chair))\\n  )\\n)\\n(:action move_chair\\n  :parameters (?char - character ?chair - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (grabbable ?chair)\\n    (next_to ?dest ?chair)\\n  )\\n  :effect (and\\n    (obj_next_to ?chair ?dest)\\n  )\\n)\\n(:action move_laptop\\n  :parameters (?char - character ?laptop - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?laptop)\\n    (grabbable ?laptop)\\n    (next_to ?dest ?laptop)\\n  )\\n  :effect (and\\n    (obj_next_to ?laptop ?dest)\\n  )\\n)\\n(:action move_mouse\\n  :parameters (?char - character ?mouse - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n    (next_to ?dest ?mouse)\\n  )\\n  :effect (and\\n    (obj_next_to ?mouse ?dest)\\n  )\\n)\\n(:action move_keyboard\\n  :parameters (?char - character ?keyboard - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n    (next_to ?dest ?keyboard)\\n  )\\n  :effect (and\\n    (obj_next_to ?keyboard ?dest)\\n  )\\n)\\n(:action move_desk\\n  :parameters (?char - character ?desk - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?desk)\\n    (movable ?desk)\\n    (next_to ?dest ?desk)\\n  )\\n  :effect (and\\n    (obj_next_to ?desk ?dest)\\n  )\\n)\\n(:action move_walllamp\\n  :parameters (?char - character ?walllamp - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?walllamp)\\n    (movable ?walllamp)\\n    (next_to ?dest ?walllamp)\\n  )\\n  :effect (and\\n    (obj_next_to ?walllamp ?dest)\\n  )\\n)\\n(:action move_cpuscreen\\n  :parameters (?char - character ?cpuscreen - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?cpuscreen)\\n    (movable ?cpuscreen)\\n    (next_to ?dest ?cpuscreen)\\n  )\\n  :effect (and\\n    (obj_next_to ?cpuscreen ?dest)\\n  )\\n)\\n(:action move_computer\\n  :parameters (?char - character ?computer - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (movable ?computer)\\n    (next_to ?dest ?computer)\\n  )\\n  :effect (and\\n    (obj_next_to ?computer ?dest)\\}"
    },
    {
        "identifier": "71_2",
        "llm_output": "```json\n{\"output\": \"(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?chair)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n    (not (ontop ?char ?chair))\\n  )\\n)\\n(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n  )\\n  :effect (and\\n    (off ?computer)\\n  )\\n)\\n(:action pick_up_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action pick_up_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n    (grabbable ?keyboard)\\n  )\\n  :effect (and\\n    (holds_lh ?char ?keyboard)\\n  )\\n)\\n(:action put_down_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action put_down_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (holds_lh ?char ?keyboard)\\n  )\\n  :effect (and\\n    (not (holds_lh ?char ?keyboard))\\n  )\\n)\\n(:action browse_internet\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (on ?computer)\\n    (holds_rh ?char ?mouse)\\n    (holds_lh ?char ?keyboard)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{\"output\": \"(:action turn_on_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (off ?computer)\\n  )\\n  :effect (and\\n    (on ?computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (has_switch ?computer)\\n    (on ?computer)\\n  )\\n  :effect (and\\n    (off ?computer)\\n  )\\n)\\n(:action plug_in_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_out ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_in ?computer)\\n  )\\n)\\n(:action unplug_computer\\n  :parameters (?char - character ?computer - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n    (next_to ?computer ?powersocket)\\n    (has_plug ?computer)\\n    (plugged_in ?computer)\\n    (plugged_in ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_out ?computer)\\n  )\\n)\\n(:action walk_to_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (inside_room ?char ?room)\\n    (inside_room ?computer ?room)\\n    (not (next_to ?char ?computer))\\n  )\\n  :effect (and\\n    (next_to ?char ?computer)\\n  )\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (sittable ?chair)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action grab_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n    (grabbable ?mouse)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mouse)\\n  )\\n)\\n(:action release_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (holds_rh ?char ?mouse)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mouse))\\n  )\\n)\\n(:action turn_to_computer\\n  :parameters (?char - character ?computer - object)\\n  :precondition (and\\n    (next_to ?char ?computer)\\n  )\\n  :effect (and\\n    (facing ?char ?computer)\\n  )\\n)\\n(:action turn_to_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n  )\\n  :effect (and\\n    (facing ?char ?mouse)\\n  )\\n)\\n(:action turn_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (facing ?char ?powersocket)\\n  )\\n)\\n(:action turn_to_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n  )\\n  :effect (and\\n    (facing ?char ?chair)\\n  )\\n)\\n(:action turn_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (facing ?char ?doorjamb)\\n  )\\n)\\n(:action turn_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (facing ?char ?wall)\\n  )\\n)\\n(:action turn_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (facing ?char ?floor)\\n  )\\n)\\n(:action turn_to_desk\\n  :parameters (?char - character ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?desk)\\n  )\\n  :effect (and\\n    (facing ?char ?desk)\\n  )\\n)\\n(:action turn_to_mousepad\\n  :parameters (?char - character ?mousepad - object)\\n  :precondition (and\\n    (next_to ?char ?mousepad)\\n  )\\n  :effect (and\\n    (facing ?char ?mousepad)\\n  )\\n)\\n(:action turn_to_cpuscreen\\n  :parameters (?char - character ?cpuscreen - object)\\n  :precondition (and\\n    (next_to ?char ?cpuscreen)\\n  )\\n  :effect (and\\n    (facing ?char ?cpuscreen)\\n  )\\n)\\n(:action turn_to_keyboard\\n  :parameters (?char - character ?keyboard - object)\\n  :precondition (and\\n    (next_to ?char ?keyboard)\\n  )\\n  :effect (and\\n    (facing ?char ?keyboard)\\n  )\\n)\\n(:action turn_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (facing ?char ?powersocket)\\n  )\\n)\\n(:action turn_to_mouse\\n  :parameters (?char - character ?mouse - object)\\n  :precondition (and\\n    (next_to ?char ?mouse)\\n  )\\n  :effect (and\\n    (facing ?char ?mouse)\\n  )\\n)\\n(:action turn_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (facing ?char ?doorjamb)\\n  )\\n)\\n(:action turn_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (facing ?char ?wall)\\n  )\\n)\\n(:action turn_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (facing ?char ?floor)\\n  )\\n)\\n(:action turn_to_desk\\n  :parameters (?char - character ?desk - object)\\n  :precondition (and\\n    (next_to ?char ?desk)\\n  )\\n  :effect (and\\n    (facing ?char ?desk)\\n  )\\n)\\n(:action turn_to_mousepad\\n  :parameters (?char - character ?mousepad - object)\\n  :precondition (and\\n    (next_to ?char ?mousepad)\\n  )\\n  :effect (and\\n    (facing ?char ?mousepad)\\n  )\\n)\\n(:action turn_to_cpuscreen\\n  :parameters (?char - character ?cpuscreen - object)\\n  :precondition (and\\n    (next_to ?char ?cpuscreen)\\n  )\\n  :effect (and\\n    (facing ?char ?cpuscreen)\\n  )\\n)\\n(:action turn_to_keyboard\\n  :parameters (?char - character ?keyboard - object)\\}"
    },
    {
        "identifier": "1070_1",
        "llm_output": "```json\n{\"output\": \"(:action open_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (pourable ?toothpaste)\\n      (can_open ?toothpaste)\\n      (next_to ?char ?toothpaste)\\n      (not (open ?toothpaste))\\n  )\\n  :effect (and\\n      (open ?toothpaste)\\n  )\\n)\\n(:action grab_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (grabbable ?toothpaste)\\n      (next_to ?char ?toothpaste)\\n      (open ?toothpaste)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?toothpaste)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char ?room)\\n      (inside_room bathroom ?room)\\n  )\\n  :effect (and\\n      (inside_room ?char bathroom)\\n  )\\n)\\n(:action walk_to_toothbrush\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to toothbrush_holder ?char)\\n  )\\n  :effect (and\\n      (next_to ?char toothbrush_holder)\\n  )\\n)\\n(:action grab_toothbrush\\n  :parameters (?char - character)\\n  :precondition (and\\n      (grabbable toothbrush)\\n      (next_to ?char toothbrush)\\n  )\\n  :effect (and\\n      (holds_lh ?char toothbrush)\\n  )\\n)\\n(:action walk_to_teeth\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to toothbrush_holder ?char)\\n  )\\n  :effect (and\\n      (next_to ?char toothbrush_holder)\\n  )\\n)\\n(:action grab_teeth\\n  :parameters (?char - character)\\n  :precondition (and\\n      (grabbable teeth)\\n      (next_to ?char teeth)\\n  )\\n  :effect (and\\n      (holds_rh ?char teeth)\\n  )\\n)\\n(:action brush_teeth\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char toothbrush)\\n      (holds_lh ?char teeth)\\n  )\\n  :effect (and\\n      (clean teeth)\\n  )\\n)\\n(:action put_toothbrush_back\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char toothbrush)\\n      (next_to ?char toothbrush_holder)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char toothbrush))\\n      (obj_ontop toothbrush toothbrush_holder)\\n  )\\n)\\n(:action put_teeth_back\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_lh ?char teeth)\\n      (next_to ?char toothbrush_holder)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char teeth))\\n      (obj_ontop teeth toothbrush_holder)\\n  )\\n)\\n(:action walk_to_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (inside_room home_office ?room)\\n  )\\n  :effect (and\\n      (inside_room ?char home_office)\\n  )\\n)\\n(:action put_toothpaste_back\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char tooth_paste)\\n      (next_to ?char toothbrush_holder)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char tooth_paste))\\n      (obj_ontop tooth_paste toothbrush_holder)\\n  )\\n)\\n(:action close_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (pourable ?toothpaste)\\n      (can_open ?toothpaste)\\n      (next_to ?char ?toothpaste)\\n      (open ?toothpaste)\\n  )\\n  :effect (and\\n      (not (open ?toothpaste))\\n  )\\n)\\n(:action walk_to_toothpaste\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to tooth_paste ?char)\\n  )\\n  :effect (and\\n      (next_to ?char tooth_paste)\\n  )\\n)\\n(:action walk_to_sink\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to sink ?char)\\n  )\\n  :effect (and\\n      (next_to ?char sink)\\n  )\\n)\\n(:action turn_on_water\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (not (on sink))\\n  )\\n  :effect (and\\n      (on sink)\\n  )\\n)\\n(:action turn_off_water\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (on sink)\\n  )\\n  :effect (and\\n      (not (on sink))\\n  )\\n)\\n(:action rinse_mouth\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (on sink)\\n  )\\n  :effect (and\\n      (clean teeth)\\n  )\\n)\\n(:action spit_water\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (on sink)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action wash_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (on sink)\\n  )\\n  :effect (and\\n      (clean hands)\\n  )\\n)\\n(:action dry_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char sink)\\n      (clean hands)\\n  )\\n  :effect (and\\n      (clean hands)\\n  )\\n)\\n(:action walk_to_towel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to towel ?char)\\n  )\\n  :effect (and\\n      (next_to ?char towel)\\n  )\\n)\\n(:action grab_towel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (grabbable towel)\\n      (next_to ?char towel)\\n  )\\n  :effect (and\\n      (holds_rh ?char towel)\\n  )\\n)\\n(:action dry_face\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char towel)\\n  )\\n  :effect (and\\n      (clean face)\\n  )\\n)\\n(:action put_towel_back\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char towel)\\n      (next_to ?char towel_rack)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char towel))\\n      (obj_ontop towel towel_rack)\\n  )\\n)\\n(:action walk_to_towel_rack\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to towel_rack ?char)\\n  )\\n  :effect (and\\n      (next_to ?char towel_rack)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside_room ?char bathroom)\\n      (obj_next_to door ?char)\\n  )\\n  :effect (and\\n      (next_to ?char door)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char door)\\n      (not (}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{\"output\": \"(:action open_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (next_to ?char ?toothpaste)\\n      (can_open ?toothpaste)\\n      (not (open ?toothpaste))\\n  )\\n  :effect (and\\n      (open ?toothpaste)\\n  )\\n)\\n(:action grab_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (next_to ?char ?toothpaste)\\n      (open ?toothpaste)\\n      (grabbable ?toothpaste)\\n      (not (holds_rh ?char ?toothpaste))\\n      (not (holds_lh ?char ?toothpaste))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?toothpaste)\\n  )\\n)\\n(:action walk_to_sink\\n  :parameters (?char - character ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?sink)\\n  )\\n  :effect (and\\n      (next_to ?char ?sink)\\n  )\\n)\\n(:action put_toothpaste_on_sink\\n  :parameters (?char - character ?toothpaste - object ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?sink)\\n      (holds_rh ?char ?toothpaste)\\n      (not (obj_ontop ?toothpaste ?sink))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?toothpaste))\\n      (obj_ontop ?toothpaste ?sink)\\n  )\\n)\\n(:action grab_toothbrush\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n      (next_to ?char ?toothbrush)\\n      (grabbable ?toothbrush)\\n      (not (holds_rh ?char ?toothbrush))\\n      (not (holds_lh ?char ?toothbrush))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?toothbrush)\\n  )\\n)\\n(:action put_toothbrush_on_sink\\n  :parameters (?char - character ?toothbrush - object ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?sink)\\n      (holds_rh ?char ?toothbrush)\\n      (not (obj_ontop ?toothbrush ?sink))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?toothbrush))\\n      (obj_ontop ?toothbrush ?sink)\\n  )\\n)\\n(:action apply_toothpaste\\n  :parameters (?char - character ?toothbrush - object ?toothpaste - object)\\n  :precondition (and\\n      (next_to ?char ?toothbrush)\\n      (next_to ?char ?toothpaste)\\n      (holds_rh ?char ?toothbrush)\\n      (open ?toothpaste)\\n  )\\n  :effect (and\\n      (not (open ?toothpaste))\\n  )\\n)\\n(:action grab_teeth\\n  :parameters (?char - character ?teeth - object)\\n  :precondition (and\\n      (next_to ?char ?teeth)\\n      (grabbable ?teeth)\\n      (not (holds_rh ?char ?teeth))\\n      (not (holds_lh ?char ?teeth))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?teeth)\\n  )\\n)\\n(:action brush_teeth\\n  :parameters (?char - character ?teeth - object ?toothbrush - object)\\n  :precondition (and\\n      (next_to ?char ?teeth)\\n      (next_to ?char ?toothbrush)\\n      (holds_rh ?char ?teeth)\\n      (holds_lh ?char ?toothbrush)\\n  )\\n  :effect ()\\n)\\n(:action put_teeth_on_sink\\n  :parameters (?char - character ?teeth - object ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?sink)\\n      (holds_rh ?char ?teeth)\\n      (not (obj_ontop ?teeth ?sink))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?teeth))\\n      (obj_ontop ?teeth ?sink)\\n  )\\n)\\n(:action put_toothbrush_on_bathroom_counter\\n  :parameters (?char - character ?toothbrush - object ?bathroom_counter - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom_counter)\\n      (holds_rh ?char ?toothbrush)\\n      (not (obj_ontop ?toothbrush ?bathroom_counter))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?toothbrush))\\n      (obj_ontop ?toothbrush ?bathroom_counter)\\n  )\\n)\\n(:action put_toothpaste_on_bathroom_counter\\n  :parameters (?char - character ?toothpaste - object ?bathroom_counter - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom_counter)\\n      (holds_rh ?char ?toothpaste)\\n      (not (obj_ontop ?toothpaste ?bathroom_counter))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?toothpaste))\\n      (obj_ontop ?toothpaste ?bathroom_counter)\\n  )\\n)\\n(:action grab_towel\\n  :parameters (?char - character ?towel - object)\\n  :precondition (and\\n      (next_to ?char ?towel)\\n      (grabbable ?towel)\\n      (not (holds_rh ?char ?towel))\\n      (not (holds_lh ?char ?towel))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?towel)\\n  )\\n)\\n(:action wipe_mouth\\n  :parameters (?char - character ?towel - object)\\n  :precondition (and\\n      (next_to ?char ?towel)\\n      (holds_rh ?char ?towel)\\n  )\\n  :effect ()\\n)\\n(:action put_towel_on_bathroom_counter\\n  :parameters (?char - character ?towel - object ?bathroom_counter - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom_counter)\\n      (holds_rh ?char ?towel)\\n      (not (obj_ontop ?towel ?bathroom_counter))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?towel))\\n      (obj_ontop ?towel ?bathroom_counter)\\n  )\\n)\\n(:action walk_to_bathroom_counter\\n  :parameters (?char - character ?bathroom_counter - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom_counter)\\n  )\\n  :effect (and\\n      (next_to ?char ?bathroom_counter)\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character ?dining_room - object)\\n  :precondition (and\\n      (next_to ?char ?dining_room)\\n  )\\n  :effect (and\\n      (next_to ?char ?dining_room)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character ?bathroom - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom)\\n  )\\n  :effect (and\\n      (next_to ?char ?bathroom)\\n  )\\n)\\n(:action walk_to_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n      (next_to ?char ?toothpaste)\\n  )\\n  :effect (and\\n      (next_to ?char ?toothpaste)\\n  )\\n)\\n(:action walk_to_teeth\\n  :parameters (?char - character ?teeth - object)\\n  :precondition (and\\n      (next_to ?char ?teeth)\\n  )\\n  :effect (and\\n      (next_to ?char ?teeth)\\n  )\\n)\\n(:action walk_to_toothbrush\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n      (next_to ?char ?toothbrush)\\n  )\\n  :effect (and\\n      (next_to ?char ?toothbrush)\\n  )\\n)\\n(:action walk_to_towel\\n  :parameters (?char - character ?towel - object)\\n  :precondition (and\\n      (next_to ?char ?towel)\\n  )\\n}"
    },
    {
        "identifier": "689_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (pourable ?obj1) (obj_ontop ?obj1 ?obj2))\\n  :effect (and (empty ?obj1) (not (obj_ontop ?obj1 ?obj2))))\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?dest))\\n  :effect (and (obj_ontop ?obj ?dest) (not (holds_rh ?char ?obj))))\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (not (open ?obj))))\\n(:action brush_teeth\\n  :parameters (?char - character ?toothbrush - object ?toothpaste - object)\\n  :precondition (and (holds_rh ?char ?toothbrush) (holds_lh ?char ?toothpaste))\\n  :effect (and (not (holds_rh ?char ?toothbrush)) (not (holds_lh ?char ?toothpaste))))\"\n}"
    },
    {
        "identifier": "718_1",
        "llm_output": "```json\n{\"output\": \"(:action open_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n    (next_to ?char ?toothpaste)\\n    (can_open ?toothpaste)\\n    (not (open ?toothpaste))\\n  )\\n  :effect (and\\n    (open ?toothpaste)\\n  )\\n)\\n(:action grab_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n    (next_to ?char ?toothpaste)\\n    (grabbable ?toothpaste)\\n    (not (holds_rh ?char ?toothpaste))\\n    (not (holds_lh ?char ?toothpaste))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?toothpaste)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (not (inside ?char bathroom))\\n  )\\n  :effect (and\\n    (inside ?char bathroom)\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (not (inside ?char dining_room))\\n  )\\n  :effect (and\\n    (inside ?char dining_room)\\n  )\\n)\\n(:action put_toothpaste_on_toothbrush\\n  :parameters (?char - character ?toothpaste - object ?toothbrush - object)\\n  :precondition (and\\n    (next_to ?char ?toothbrush)\\n    (holds_rh ?char ?toothpaste)\\n    (not (obj_ontop ?toothpaste ?toothbrush))\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?toothpaste))\\n    (obj_ontop ?toothpaste ?toothbrush)\\n  )\\n)\\n(:action close_toothpaste\\n  :parameters (?char - character ?toothpaste - object)\\n  :precondition (and\\n    (next_to ?char ?toothpaste)\\n    (open ?toothpaste)\\n  )\\n  :effect (and\\n    (not (open ?toothpaste))\\n  )\\n)\\n(:action put_toothbrush_in_mouth\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n    (next_to ?char ?toothbrush)\\n    (holds_rh ?char ?toothbrush)\\n    (not (inside ?toothbrush ?char))\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?toothbrush))\\n    (inside ?toothbrush ?char)\\n  )\\n)\\n(:action take_toothbrush_out_of_mouth\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n    (inside ?toothbrush ?char)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?toothbrush)\\n    (not (inside ?toothbrush ?char))\\n  )\\n)\\n(:action wash_teeth\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n    (inside ?toothbrush ?char)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action spit_out_toothpaste\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?toothbrush ?char)\\n  )\\n  :effect (and\\n    (not (inside ?toothbrush ?char))\\n  )\\n)\\n(:action rinse_mouth\\n  :parameters (?char - character)\\n  :precondition (and\\n  )\\n  :effect (and\\n  )\\n)\\n(:action put_toothbrush_on_sink\\n  :parameters (?char - character ?toothbrush - object)\\n  :precondition (and\\n    (next_to ?char ?sink)\\n    (holds_rh ?char ?toothbrush)\\n    (not (obj_ontop ?toothbrush ?sink))\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?toothbrush))\\n    (obj_ontop ?toothbrush ?sink)\\n  )\\n)\\n(:action wash_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?sink)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action dry_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?towel)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action walk_out_of_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char bathroom)\\n  )\\n  :effect (and\\n    (not (inside ?char bathroom))\\n  )\\n)\\n(:action walk_to_bedroom\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (not (inside ?char bedroom))\\n  )\\n  :effect (and\\n    (inside ?char bedroom)\\n  )\\n)\\n(:action go_to_sleep\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char bedroom)\\n    (next_to ?char bed)\\n  )\\n  :effect (and\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_lh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (has_switch ?tv)\\n      (off ?tv)\\n  )\\n  :effect (and\\n      (on ?tv)\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (has_switch ?tv)\\n      (on ?tv)\\n  )\\n  :effect (and\\n      (off ?tv)\\n  )\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (on ?tv)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_dvd\\n  :parameters (?char - character ?dvd - object)\\n  :precondition (and\\n      (next_to ?char ?dvd)\\n      (has_switch ?dvd)\\n      (off ?dvd)\\n  )\\n  :effect (and\\n      (on ?dvd}"
    },
    {
        "identifier": "113_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_switch ?obj)\\n                 (off ?obj)\\n               )\\n  :effect (and\\n             (when (off ?obj)(on ?obj))\\n             (when (on ?obj)(off ?obj))\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (can_open ?obj)\\n                 (closed ?obj)\\n               )\\n  :effect (and\\n             (when (closed ?obj)(open ?obj))\\n             (when (open ?obj)(closed ?obj))\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_plug ?obj)\\n                 (plugged_out ?obj)\\n               )\\n  :effect (and\\n             (when (plugged_out ?obj)(plugged_in ?obj))\\n             (when (plugged_in ?obj)(plugged_out ?obj))\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (can_open ?obj)\\n                 (open ?obj)\\n               )\\n  :effect (and\\n             (when (open ?obj)(closed ?obj))\\n             (when (closed ?obj)(open ?obj))\\n           )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_plug ?obj)\\n                 (plugged_in ?obj)\\n               )\\n  :effect (and\\n             (when (plugged_in ?obj)(plugged_out ?obj))\\n             (when (plugged_out ?obj)(plugged_in ?obj))\\n           )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_switch ?obj)\\n                 (off ?obj)\\n               )\\n  :effect (and\\n             (when (off ?obj)(on ?obj))\\n             (when (on ?obj)(off ?obj))\\n           )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_switch ?obj)\\n                 (on ?obj)\\n               )\\n  :effect (and\\n             (when (on ?obj)(off ?obj))\\n             (when (off ?obj)(on ?obj))\\n           )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (grabbable ?obj)\\n               )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (not (next_to ?char ?obj))\\n           )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (holds_rh ?char ?obj)\\n                 (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (holds_rh ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (movable ?obj)\\n                 (next_to ?obj ?dest)\\n               )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?dest)\\n           )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n                 (holds_rh ?obj)\\n                 (next_to ?char ?dest)\\n               )\\n  :effect (and\\n             (not (holds_rh ?obj))\\n             (obj_ontop ?obj ?dest)\\n           )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n                 (not (obj_ontop ?obj ?dest))\\n               )\\n  :effect (and\\n             (obj_ontop ?obj ?dest)\\n             (next_to ?char ?dest)\\n           )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n                 (next_to ?char ?target)\\n               )\\n  :effect ()\\n)\\n(:action listen_to_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (on ?obj)\\n                 (closed ?obj)\\n                 (plugged_in ?obj)\\n               )\\n  :effect ()\\n)\\n(:action open_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (can_open ?obj)\\n                 (closed ?obj)\\n               )\\n  :effect (and\\n             (when (closed ?obj)(open ?obj))\\n             (when (open ?obj)(closed ?obj))\\n           )\\n)\\n(:action close_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (can_open ?obj)\\n                 (open ?obj)\\n               )\\n  :effect (and\\n             (when (open ?obj)(closed ?obj))\\n             (when (closed ?obj)(open ?obj))\\n           )\\n)\\n(:action turn_on_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_switch ?obj)\\n                 (off ?obj)\\n               )\\n  :effect (and\\n             (when (off ?obj)(on ?obj))\\n             (when (on ?obj)(off ?obj))\\n           )\\n)\\n(:action turn_off_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_switch ?obj)\\n                 (on ?obj)\\n               )\\n  :effect (and\\n             (when (on ?obj)(off ?obj))\\n             (when (off ?obj)(on ?obj))\\n           )\\n)\\n(:action plug_in_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_plug ?obj)\\n                 (plugged_out ?obj)\\n               )\\n  :effect (and\\n             (when (plugged_out ?obj)(plugged_in ?obj))\\n             (when (plugged_in ?obj)(plugged_out ?obj))\\n           )\\n)\\n(:action unplug_cd_player\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (has_plug ?obj)\\n                 (plugged_in ?obj)\\n               )\\n  :effect (and\\n             (when (plugged_in ?obj)(plugged_out ?obj))\\n             (when (plugged_out ?obj)(plugged_in ?obj))\\n           )\\n)\\n(:action put_cd_player_on_table\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n                 (holds_rh ?obj)\\n                 (next_to ?char ?dest)\\n               )\\n  :effect (and\\n             (not (holds_rh ?obj))\\}"
    },
    {
        "identifier": "161_1",
        "llm_output": "```json\n{\"output\": \"(:action open_stereo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (open ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action close_stereo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (closed ?obj)\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action turn_on_stereo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_stereo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (plugged_in ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action walk_to_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (clean ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?obj ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action clean\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (dirty ?obj)\\n  )\\n  :effect (and\\n      (clean ?obj)\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sitting ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lying ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect (and\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (holds_rh ?char ?obj))\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (holds_rh ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\}"
    },
    {
        "identifier": "173_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n      (movable ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n      (movable ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n      (movable ?char)\\n      (inside_room ?char ?room)\\n      (inside_room ?obj ?room)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside_room ?char ?room)\\n      (inside_room ?obj ?room)\\n  )\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj)))\")}"
    },
    {
        "identifier": "263_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj)))\")}"
    },
    {
        "identifier": "305_2",
        "llm_output": "```json\n{\"output\": \"[{\\\"action\\\": \\\"walk_towards\\\", \\\"parameters\\\": [\\\"?char - character\\\", \\\"?obj - object\\\"], \\\"precondition\\\": (and (next_to ?char ?obj)), \\\"effect\\\": (and (not (next_to ?char ?obj)) (next_to ?char ?obj))}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj)))\"}"
    },
    {
        "identifier": "385_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (next_to ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (next_to ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (next_to ?char ?obj))\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_in ?obj))\\n  :effect (and (plugged_out ?obj) (next_to ?char ?obj))\\n)\\n(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "403_1",
        "llm_output": "```json\n{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n      (not (open ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (closed ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n      (not (closed ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (cuttable ?obj))\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "415_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (on_char ?obj ?char)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_plug ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action listen_to_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "462_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "463_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "503_2",
        "llm_output": "{\"output\": \"(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (when (not (holds_rh ?char ?obj)) (holds_rh ?char ?obj))\\n      (when (not (holds_lh ?char ?obj)) (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (open ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (on ?obj))\\n  )\\n)\\n(:action move_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action move_away\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_away\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n      (not (lying ?char))\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (pourable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (next_to ?char ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (on_char ?obj ?char)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (clean ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action move_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action enter\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (inside ?char ?obj)\\n  )\\n)\\n(:action exit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sitting ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lying ?char)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wash\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clean ?obj)\\n  )\\n  :effect ()\\n)\\n(:action dry\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clean ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cook\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clean ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (pourable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action talk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sing\\n  }"
    },
    {
        "identifier": "773_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (off ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "910_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (next_to ?char ?obj)))\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (next_to ?char ?obj)))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (next_to ?char ?obj)))\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (next_to ?char ?obj)))\\n\"\n}"
    },
    {
        "identifier": "953_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (clean ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action move_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (containers ?obj2)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (containers ?obj2)\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj1)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n      (hold_lh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n    (and\\n      (hold_rh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (obj_ontop ?obj ?obj) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (not (plugged_in ?obj)))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (plugged_in ?obj))\\n  :effect (and (not (plugged_in ?obj)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (obj_ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sitting ?char) (obj_ontop ?char ?obj))\\n  :effect (and (not (sitting ?char)) (not (obj_ontop ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (obj_ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lying ?char) (obj_ontop ?char ?obj))\\n  :effect (and (not (lying ?char)) (not (obj_ontop ?char ?obj)) (facing ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "134_1",
        "llm_output": "```json\n{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (movable ?obj)\\n    (grabbable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (facing ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "197_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj)))\")\n```}"
    },
    {
        "identifier": "21_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (plugged_in ?obj)\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_in ?obj))\\n  :effect (plugged_out ?obj)\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (lying ?char)\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (lying ?char)\\n  :effect (not (lying ?char))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (open ?obj)\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (closed ?obj)\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect ()\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n                   (and\\n                     (clothes ?clothes)\\n                     (hangable ?hang_obj)\\n                     (holds_rh ?char ?clothes)\\n                     (next_to ?char ?hang_obj)\\n                   )\\n                   (and\\n                     (clothes ?clothes)\\n                     (hangable ?hang_obj)\\n                     (holds_lh ?char ?clothes)\\n                     (next_to ?char ?hang_obj)\\n                   )\\n                 )\\n  :effect (and\\n             (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n             (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n             (ontop ?clothes ?hang_obj)\\n           )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n        (holds_lh ?obj)\\n        (next_to ?char ?dest)\\n    )\\n    (and\\n        (holds_rh ?obj)\\n        (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_stove\\n  :parameters (?char - character ?stove - object)\\n  :precondition (and\\n      (next_to ?char ?stove)\\n      (off ?stove)\\n  )\\n  :effect (on ?stove)\\n)\\n(:action turn_off_stove\\n  :parameters (?char - character ?stove - object)\\n  :precondition (and\\n      (next_to ?char ?stove)\\n      (on ?stove)\\n  )\\n  :effect (off ?stove)\\n)\\n(:action open_fridge\\n  :parameters (?char - character ?fridge - object)\\n  :precondition (and\\n      (next_to ?char ?fridge)\\n      (closed ?fridge)\\n  )\\n  :effect (open ?fridge)\\n)\\n(:action close_fridge\\n  :parameters (?char - character ?fridge - object)\\n  :precondition (and\\n      (next_to ?char ?fridge)\\n      (open ?fridge)\\n  )\\n  :effect (closed ?fridge)\\n)\\n(:action open_microwave\\n  :parameters (?char - character ?microwave - object)\\n  :precondition (and\\n      (next_to ?char ?microwave)\\n      (closed ?microwave)\\n  )\\n  :effect (open ?microwave)\\n)\\n(:action close_microwave\\n  :parameters (?char - character ?microwave - object)\\n  :precondition (and\\n      (next_to ?char ?microwave)\\n      (open ?microwave)\\n  )\\n  :effect (closed ?microwave)\\n)\\n(:action open_dishwasher\\n  :parameters (?char - character ?dishwasher - object)\\n  :precondition (and\\n      (next_to ?char ?dishwasher)\\n      (closed ?dishwasher)\\n  )\\n  :effect (open ?dishwasher)\\n)\\n(:action close_dishwasher\\n  :parameters (?char - character ?dishwasher - object)\\n  :precondition (and\\n      (next_to ?char ?dishwasher)\\n      (open ?dishwasher)\\n  )\\n  :effect (closed ?dishwasher)\\n)\\n(:action open_oven\\n  :parameters (?char - character ?oven - object)\\n  :precondition (and\\n      (next_to ?char ?oven)\\n      (closed ?oven)\\n  )\\n  :effect (open ?oven)\\n)\\n(:action close_oven\\n  :parameters (?char - character ?oven - object)\\n  :precondition (and\\n      (next_to ?char ?oven)\\n      (open ?oven)\\n  )\\n  :effect (closed ?oven)\\}"
    },
    {
        "identifier": "225_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (when (off ?obj) (on ?obj)) (when (not (on ?obj)) (off ?obj))))\\n\"}"
    },
    {
        "identifier": "259_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (facing ?char ?obj))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char))\\n  :effect (and (not (sitting ?char)))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and (lying ?char))\\n  :effect (and (not (lying ?char)))\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action push\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action pull\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action carry\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and (clothes ?clothes) (hangable ?hang_obj) (holds_rh ?char ?clothes) (next_to ?char ?hang_obj))\\n  :effect (and (not (holds_rh ?char ?clothes)) (ontop ?clothes ?hang_obj))\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or (and (holds_lh ?obj) (next_to ?char ?dest)) (and (holds_rh ?obj) (next_to ?char ?dest)))\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_ontop ?obj ?dest)))\\n  :effect (and (obj_ontop ?obj ?dest) (next_to ?char ?dest))\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and (next_to ?char ?target))\\n  :effect ()\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_cabinet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "329_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (obj_ontop ?obj ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (next_to ?char ?obj))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_in ?obj))\\n  :effect (and (plugged_out ?obj) (next_to ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char))\\n  :effect (and (not (sitting ?char)))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and (lying ?char))\\n  :effect (and (not (lying ?char)))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (next_to ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (next_to ?char ?obj))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n                   (and\\n                     (clothes ?clothes)\\n                     (hangable ?hang_obj)\\n                     (holds_rh ?char ?clothes)\\n                     (next_to ?char ?hang_obj)\\n                   )\\n                   (and\\n                     (clothes ?clothes)\\n                     (hangable ?hang_obj)\\n                     (holds_lh ?char ?clothes)\\n                     (next_to ?char ?hang_obj)\\n                   )\\n                 )\\n  :effect (and\\n             (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n             (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n             (ontop ?clothes ?hang_obj)\\n           )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n        (holds_lh ?obj)        \\n        (next_to ?char ?dest)\\n    )\\n    (and\\n        (holds_rh ?obj)        \\n        (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (obj_ontop ?obj ?dest)       \\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)       \\n      (next_to ?char ?obj)   \\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)       \\n      (next_to ?char ?dest)        \\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target) \\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action clap\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action nod\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action shake_head\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action smile\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action frown\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?target - object)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action listen_to\\n  :parameters (?char - character ?target - object)\\n  :precondition (and\\n      (}"
    },
    {
        "identifier": "342_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (not (plugged_in ?obj)))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (plugged_in ?obj))\\n  :effect (and (not (plugged_in ?obj)) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sitting ?char) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (facing ?char ?obj))\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lying ?char) (next_to ?char ?obj))\\n  :effect (and (not (lying ?char)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (cuttable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and (clothes ?clothes) (hangable ?hang_obj) (holds_rh ?char ?clothes) (next_to ?char ?hang_obj))\\n  :effect (and (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes))) (ontop ?clothes ?hang_obj) (facing ?char ?hang_obj))\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and (clothes ?clothes) (next_to ?char ?clothes))\\n  :effect (and (not (next_to ?char ?clothes)) (facing ?char ?clothes))\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and (clothes ?clothes) (next_to ?char ?clothes))\\n  :effect (and (next_to ?char ?clothes) (facing ?char ?clothes))\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (next_to ?char ?obj2) (movable ?obj1) (obj_inside ?obj1 ?obj2))\\n  :effect (and (not (next_to ?char ?obj1)) (facing ?char ?obj2))\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj2) (movable ?obj1) (obj_inside ?obj1 ?obj2))\\n  :effect (and (next_to ?char ?obj1) (facing ?char ?obj2))\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (next_to ?char ?obj2) (pourable ?obj1) (movable ?obj1))\\n  :effect (and (not (next_to ?char ?obj1)) (facing ?char ?obj2))\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (next_to ?obj ?dest) (movable ?obj))\\n  :effect (and (next_to ?char ?dest) (facing ?char ?dest))\\n)\\n(:action push\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (next_to ?obj ?dest) (movable ?obj))\\n  :effect (and (next_to ?char ?dest) (facing ?char ?dest))\\n)\\n(:action pull\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (next_to ?obj ?dest) (movable ?obj))\\n  :effect (and (next_to ?char ?dest) (facing ?char ?dest))\\n)\\n(:action carry\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (next_to ?obj ?dest) (movable ?obj))\\n  :effect (and (next_to ?char ?dest) (facing ?char ?dest))\\n)\\n(:action bring\\n  :parameters (?char - character ?obj - object ?dest -}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_in ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (open ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (lookable ?obj)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (readable ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (on ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (eatable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (drinkable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (sittable ?obj)\\n    (not (sitting ?char))\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (lieable ?obj)\\n    (not (lying ?char))\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (clothes ?obj)\\n    (not (wearing ?char ?obj))\\n  )\\n  :effect (and\\n    (wearing ?char ?obj)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (clothes ?obj)\\n    (wearing ?char ?obj)\\n  )\\n  :effect (and\\n    (not (wearing ?char ?obj))\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (obj_inside ?hang_obj ?room)\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action fold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (clothes ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (folded ?clothes)\\n  )\\n)\\n(:action unfold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (clothes ?clothes)\\n    (folded ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (folded ?clothes))\\n  )\\n)\\n}"
    },
    {
        "identifier": "383_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "411_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "454_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (next_to ?char ?hang_obj)\\n    (hangable ?hang_obj)\\n    (clothes ?clothes)\\n    (or\\n      (holds_rh ?char ?clothes)\\n      (holds_lh ?char ?clothes)\\n    )\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes)))\\n    (when (holds_lh ?char ?clothes) (not (holds_lh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (or\\n      (holds_lh ?obj)\\n      (holds_rh ?obj)\\n    )\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action talk_to\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action listen_to\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\}"
    },
    {
        "identifier": "459_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (facing ?char ?obj))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char))\\n  :effect (and (not (sitting ?char)))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and (lying ?char))\\n  :effect (and (not (lying ?char)))\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action push\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action pull\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action carry\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and (clothes ?clothes) (hangable ?hang_obj) (holds_rh ?char ?clothes) (next_to ?char ?hang_obj))\\n  :effect (and (not (holds_rh ?char ?clothes)) (ontop ?clothes ?hang_obj))\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or (and (holds_lh ?obj) (next_to ?char ?dest)) (and (holds_rh ?obj) (next_to ?char ?dest)))\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_ontop ?obj ?dest)))\\n  :effect (and (obj_ontop ?obj ?dest) (next_to ?char ?dest))\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and (next_to ?char ?target))\\n  :effect ()\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_cabinet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (}"
    },
    {
        "identifier": "548_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (facing ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (next_to ?char ?obj))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_in ?obj))\\n  :effect (and (plugged_out ?obj) (next_to ?char ?obj))\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (on ?obj) (plugged_in ?obj) (facing ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (on ?obj) (plugged_in ?obj) (facing ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "595_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (not (plugged_in ?obj)))\\n  :effect (and (plugged_in ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_in ?obj))\\n  :effect (and (not (plugged_in ?obj)) (not (next_to ?char ?obj)))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (not (next_to ?char ?obj)))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (and (not (sitting ?char)))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (not (next_to ?char ?obj)))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (lying ?char)\\n  :effect (and (not (lying ?char)))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (open ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (cuttable ?obj))\\n  :effect (and (not (next_to ?char ?obj)))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n                (and\\n                    (clothes ?clothes)\\n                    (hangable ?hang_obj)\\n                    (holds_rh ?char ?clothes)\\n                    (next_to ?char ?hang_obj)\\n                )\\n                (and\\n                    (clothes ?clothes)\\n                    (hangable ?hang_obj)\\n                    (holds_lh ?char ?clothes)\\n                    (next_to ?char ?hang_obj)\\n                )\\n            )\\n  :effect (and\\n             (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes))) \\n             (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes))) \\n             (ontop ?clothes ?hang_obj) \\n           )\\n)\\n(:action put_to\\n    :parameters (?char - character ?obj - object ?dest - object)\\n    :precondition (or\\n      (and\\n          (hold_lh ?obj)        \\n          (next_to ?char ?dest) \\n      )\\n      (and\\n          (hold_rh ?obj)        \\n          (next_to ?char ?dest) \\n      )\\n    )\\n    :effect (obj_ontop ?obj ?dest)        \\n)\\n(:action pick_and_place\\n    :parameters (?char - character ?obj - object ?dest - object)\\n    :precondition (and\\n        (grabbable ?obj)        \\n        (next_to ?char ?obj)    \\n        (not (obj_ontop ?obj ?dest)) \\n    )\\n    :effect (and\\n        (obj_ontop ?obj ?dest)        \\n        (next_to ?char ?dest)         \\n    )\\n)\\n(:action bow\\n    :parameters (?char - character ?target - character)\\n    :precondition (and\\n        (next_to ?char ?target)  \\n    )\\n    :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "684_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_in ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (open ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (lookable ?obj)\\n    (not (facing ?char ?obj))\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (readable ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (on ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (eatable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (drinkable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (sittable ?obj)\\n    (not (sitting ?char))\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (lieable ?obj)\\n    (not (lying ?char))\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (clothes ?obj)\\n    (not (wearing ?char ?obj))\\n  )\\n  :effect (and\\n    (wearing ?char ?obj)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?obj ?room)\\n    (clothes ?obj)\\n    (wearing ?char ?obj)\\n  )\\n  :effect (and\\n    (not (wearing ?char ?obj))\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (obj_inside ?hang_obj ?room)\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action fold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (clothes ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?clothes))\\n    (folded ?clothes)\\n  )\\n)\\n(:action unfold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (obj_inside ?clothes ?room)\\n    (clothes ?clothes)\\n    (folded ?clothes)\\n    (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (folded ?clothes))\\n  )\\n)\\n}"
    },
    {
        "identifier": "74_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (obj_ontop ?obj ?obj) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (not (plugged_in ?obj)))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (movable ?obj) (plugged_in ?obj))\\n  :effect (and (not (plugged_in ?obj)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (obj_ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sitting ?char) (obj_ontop ?char ?obj))\\n  :effect (and (not (sitting ?char)) (not (obj_ontop ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (obj_ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lying ?char) (obj_ontop ?char ?obj))\\n  :effect (and (not (lying ?char)) (not (obj_ontop ?char ?obj)) (facing ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "806_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (facing ?char ?obj))\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_plug ?obj) (plugged_out ?obj))\\n  :effect (and (plugged_in ?obj) (facing ?char ?obj))\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (facing ?char ?obj))\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (facing ?char ?obj))\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (eatable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj) (facing ?char ?obj))\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char))\\n  :effect (and (not (sitting ?char)))\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and (lying ?char))\\n  :effect (and (not (lying ?char)))\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action push\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action pull\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action carry\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?obj) (next_to ?obj ?dest))\\n  :effect (and (next_to ?char ?dest) (next_to ?obj ?dest))\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and (clothes ?clothes) (hangable ?hang_obj) (holds_rh ?char ?clothes) (next_to ?char ?hang_obj))\\n  :effect (and (not (holds_rh ?char ?clothes)) (ontop ?clothes ?hang_obj))\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or (and (holds_lh ?obj) (next_to ?char ?dest)) (and (holds_rh ?obj) (next_to ?char ?dest)))\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_ontop ?obj ?dest)))\\n  :effect (and (obj_ontop ?obj ?dest) (next_to ?char ?dest))\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and (next_to ?char ?target))\\n  :effect ()\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (open ?obj) (facing ?char ?obj))\\n)\\n(:action close_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (closed ?obj) (facing ?char ?obj))\\n)\\n(:action open_cabinet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (movable ?char)\\n      (inside_room ?char ?room)\\n  )\\n  :effect (and\\n      (inside_room ?char ?room)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (pourable ?obj)\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect ()\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action lock_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action unlock_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_oven\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_oven\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_microwave\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_microwave\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj))\\n(:action turn_on_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (has_switch ?faucet))\\n  :effect (on ?faucet))\\n(:action turn_off_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (has_switch ?faucet))\\n  :effect (off ?faucet))\\n(:action fill_cup\\n  :parameters (?char - character ?cup - object ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (next_to ?faucet ?cup) (on ?faucet) (pourable ?cup) (recipient ?cup))\\n  :effect (and (not (on ?faucet)) (full ?cup)))\\n(:action drink\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and (holds_rh ?char ?cup) (full ?cup) (drinkable ?cup))\\n  :effect (and (not (full ?cup)) (empty ?cup)))\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?dest) (surfaces ?dest))\\n  :effect (and (not (holds_rh ?char ?obj)) (obj_ontop ?obj ?dest)))\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (inside_room ?char ?room)\\n  :effect (inside_room ?char ?room))\\n\"\n}"
    },
    {
        "identifier": "171_2",
        "llm_output": "```json\n{\"output\": \"(:action open_cupboard\\n  :parameters (?char - character ?cupboard - object)\\n  :precondition (and\\n      (next_to ?char ?cupboard)\\n      (can_open ?cupboard)\\n      (closed ?cupboard)\\n  )\\n  :effect (and\\n      (open ?cupboard)\\n  )\\n)\\n(:action grab_cup\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and\\n      (next_to ?char ?cup)\\n      (grabbable ?cup)\\n      (obj_inside ?cup ?cupboard)\\n      (open ?cupboard)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?cup)\\n  )\\n)\\n(:action walk_to_sink\\n  :parameters (?char - character ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?sink)\\n  )\\n  :effect (and\\n      (next_to ?char ?sink)\\n  )\\n)\\n(:action turn_on_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n      (next_to ?char ?faucet)\\n      (has_switch ?faucet)\\n      (off ?faucet)\\n  )\\n  :effect (and\\n      (on ?faucet)\\n  )\\n)\\n(:action fill_cup\\n  :parameters (?char - character ?cup - object ?faucet - object ?sink - object)\\n  :precondition (and\\n      (next_to ?char ?faucet)\\n      (next_to ?faucet ?sink)\\n      (holds_rh ?char ?cup)\\n      (on ?faucet)\\n      (pourable ?faucet)\\n      (recipient ?cup)\\n      (containers ?sink)\\n  )\\n  :effect (and\\n      (not (on ?faucet))\\n      (clean ?cup)\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character ?dining_room - object)\\n  :precondition (and\\n      (next_to ?char ?dining_room)\\n  )\\n  :effect (and\\n      (next_to ?char ?dining_room)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and\\n      (next_to ?char ?cup)\\n      (holds_rh ?char ?cup)\\n      (drinkable ?cup)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?cup))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (has_switch ?faucet)\\n  )\\n  :effect (and\\n    (on ?faucet)\\n  )\\n)\\n(:action turn_off_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (has_switch ?faucet)\\n  )\\n  :effect (and\\n    (off ?faucet)\\n  )\\n)\\n(:action pour_from\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?obj1 ?obj2)\\n    (pourable ?obj1)\\n    (on ?obj1 ?obj2)\\n    (not (empty ?obj1))\\n  )\\n  :effect (and\\n    (not (empty ?obj1))\\n  )\\n)\\n(:action drink_from\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n    (not (empty ?obj))\\n  )\\n  :effect (and\\n    (empty ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action move_to\\n  :parameters (?char - character ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (inside_room ?char ?dest)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "181_2",
        "llm_output": "```json\n{\"output\": \"(:action open_freezer\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n      (has_switch ?freezer)\\n      (can_open ?freezer)\\n      (not (open ?freezer))\\n  )\\n  :effect (and\\n      (open ?freezer)\\n  )\\n)\\n(:action grab_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (grabbable ?water)\\n      (not (holds_rh ?char ?water))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?water)\\n  )\\n)\\n(:action close_freezer\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n      (has_switch ?freezer)\\n      (can_open ?freezer)\\n      (open ?freezer)\\n  )\\n  :effect (and\\n      (not (open ?freezer))\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character ?dining_room - object)\\n  :precondition (and\\n      (next_to ?char ?dining_room)\\n  )\\n  :effect (and\\n      (inside_room ?char ?dining_room)\\n  )\\n)\\n(:action pour_water\\n  :parameters (?char - character ?water - object ?recipient - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (pourable ?water)\\n      (not (empty ?water))\\n      (next_to ?water ?recipient)\\n      (movable ?recipient)\\n      (not (full ?recipient))\\n      (holds_rh ?char ?water)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?water))\\n      (not (empty ?water))\\n      (full ?recipient)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (drinkable ?water)\\n      (not (empty ?water))\\n      (holds_rh ?char ?water)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?water))\\n      (empty ?water)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action walk_to_freezer\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n      (inside_room ?char ?freezer)\\n  )\\n)\\n(:action open_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n      (has_switch ?water_glass)\\n      (can_open ?water_glass)\\n      (not (open ?water_glass))\\n  )\\n  :effect (and\\n      (open ?water_glass)\\n  )\\n)\\n(:action close_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n      (has_switch ?water_glass)\\n      (can_open ?water_glass)\\n      (open ?water_glass)\\n  )\\n  :effect (and\\n      (not (open ?water_glass))\\n  )\\n)\\n(:action grab_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n      (grabbable ?water_glass)\\n      (not (holds_rh ?char ?water_glass))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?water_glass)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character ?bathroom - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom)\\n  )\\n  :effect (and\\n      (inside_room ?char ?bathroom)\\n  )\\n)\\n(:action walk_to_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water)\\n  )\\n)\\n(:action walk_to_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water_glass)\\n  )\\n)\\n(:action walk_to_freezer_from_dining_room\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n      (inside_room ?char ?freezer)\\n  )\\n)\\n(:action walk_to_water_from_dining_room\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water)\\n  )\\n)\\n(:action walk_to_water_glass_from_dining_room\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water_glass)\\n  )\\n)\\n(:action walk_to_freezer_from_bathroom\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n      (inside_room ?char ?freezer)\\n  )\\n)\\n(:action walk_to_water_from_bathroom\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water)\\n  )\\n)\\n(:action walk_to_water_glass_from_bathroom\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water_glass)\\n  )\\n)\\n(:action walk_to_freezer_from_water\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n      (inside_room ?char ?freezer)\\n  )\\n)\\n(:action walk_to_water_from_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water)\\n  )\\n)\\n(:action walk_to_water_glass_from_water\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n  )\\n  :effect (and\\n      (inside_room ?char ?water_glass)\\n  )\\n)\\n(:action walk_to_freezer_from_water_glass\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n      (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n      (inside_room ?char ?freezer)\\n  )\\n)\\n(:action walk_to_water_from_water_}"
    },
    {
        "identifier": "26_1",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (obj_ontop ?obj ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (obj_inside ?obj ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action turn_left\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_right\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_around\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action face\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()}"
    },
    {
        "identifier": "286_2",
        "llm_output": "```json\n{\"output\": \"(:action open_cupboard\\n  :parameters (?char - character ?cupboard - object)\\n  :precondition (and\\n    (next_to ?char ?cupboard)\\n    (can_open ?cupboard)\\n    (closed ?cupboard)\\n  )\\n  :effect (and\\n    (open ?cupboard)\\n  )\\n)\\n(:action open_freezer\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n    (next_to ?char ?freezer)\\n    (can_open ?freezer)\\n    (closed ?freezer)\\n  )\\n  :effect (and\\n    (open ?freezer)\\n  )\\n)\\n(:action grab_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n    (next_to ?char ?water_glass)\\n    (grabbable ?water_glass)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?water_glass)\\n  )\\n)\\n(:action grab_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n    (next_to ?char ?water)\\n    (grabbable ?water)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?water)\\n  )\\n)\\n(:action walk_to_freezer\\n  :parameters (?char - character ?freezer - object)\\n  :precondition (and\\n    (next_to ?char ?freezer)\\n  )\\n  :effect (and\\n    (next_to ?char ?freezer)\\n  )\\n)\\n(:action walk_to_cupboard\\n  :parameters (?char - character ?cupboard - object)\\n  :precondition (and\\n    (next_to ?char ?cupboard)\\n  )\\n  :effect (and\\n    (next_to ?char ?cupboard)\\n  )\\n)\\n(:action pour_water\\n  :parameters (?char - character ?water - object ?water_glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?water)\\n    (next_to ?char ?water_glass)\\n    (pourable ?water)\\n    (recipient ?water_glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?water))\\n    (obj_inside ?water ?water_glass)\\n  )\\n)\\n(:action drink_water\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?water_glass)\\n    (obj_inside ?water ?water_glass)\\n    (drinkable ?water)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?water_glass))\\n    (empty ?water_glass)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "291_1",
        "llm_output": "```json\n{\"output\": \"(:action grab_drink\\n  :parameters (?char - character ?drink - object)\\n  :precondition (and\\n      (drinkable ?drink)\\n      (next_to ?char ?drink)\\n      (grabbable ?drink)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?drink)\\n      (not (next_to ?char ?drink))\\n  )\\n)\\n(:action walk_to_drink\\n  :parameters (?char - character ?drink - object)\\n  :precondition (and\\n      (drinkable ?drink)\\n      (not (next_to ?char ?drink))\\n  )\\n  :effect (and\\n      (next_to ?char ?drink)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?drink - object)\\n  :precondition (and\\n      (drinkable ?drink)\\n      (holds_rh ?char ?drink)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?drink))\\n      (empty ?drink)\\n  )\\n)\\n(:action put_down_drink\\n  :parameters (?char - character ?drink - object ?surface - object)\\n  :precondition (and\\n      (drinkable ?drink)\\n      (holds_rh ?char ?drink)\\n      (next_to ?char ?surface)\\n      (surfaces ?surface)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?drink))\\n      (obj_ontop ?drink ?surface)\\n  )\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (lookable ?tv)\\n      (next_to ?char ?tv)\\n      (has_switch ?tv)\\n  )\\n  :effect (and\\n      (on ?tv)\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (lookable ?tv)\\n      (next_to ?char ?tv)\\n      (has_switch ?tv)\\n      (on ?tv)\\n  )\\n  :effect (and\\n      (off ?tv)\\n  )\\n)\\n(:action sit_on_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (sittable ?couch)\\n      (next_to ?char ?couch)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?couch)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (not (next_to ?char ?couch))\\n  )\\n  :effect (and\\n      (next_to ?char ?couch)\\n  )\\n)\\n(:action lie_down_on_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (lieable ?couch)\\n      (next_to ?char ?couch)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?couch)\\n  )\\n)\\n(:action get_up_from_couch\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action walk_to_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (not (next_to ?char ?tv))\\n  )\\n  :effect (and\\n      (next_to ?char ?tv)\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside_room ?char dining_room))\\n  )\\n  :effect (and\\n      (inside_room ?char dining_room)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside_room ?char bathroom))\\n  )\\n  :effect (and\\n      (inside_room ?char bathroom)\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside_room ?char home_office))\\n  )\\n  :effect (and\\n      (inside_room ?char home_office)\\n  )\\n)\\n(:action open_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (lookable ?tv)\\n      (next_to ?char ?tv)\\n      (can_open ?tv)\\n      (off ?tv)\\n  )\\n  :effect (and\\n      (open ?tv)\\n  )\\n)\\n(:action close_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (lookable ?tv)\\n      (next_to ?char ?tv)\\n      (can_open ?tv)\\n      (on ?tv)\\n  )\\n  :effect (and\\n      (closed ?tv)\\n  )\\n)\\n(:action open_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (next_to ?char ?couch)\\n      (can_open ?couch)\\n  )\\n  :effect (and\\n      (open ?couch)\\n  )\\n)\\n(:action close_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (next_to ?char ?couch)\\n      (can_open ?couch)\\n  )\\n  :effect (and\\n      (closed ?couch)\\n  )\\n)\\n(:action open_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (can_open ?water)\\n  )\\n  :effect (and\\n      (open ?water)\\n  )\\n)\\n(:action close_water\\n  :parameters (?char - character ?water - object)\\n  :precondition (and\\n      (next_to ?char ?water)\\n      (can_open ?water)\\n  )\\n  :effect (and\\n      (closed ?water)\\n  )\\n)\\n(:action open_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n      (can_open ?water_glass)\\n  )\\n  :effect (and\\n      (open ?water_glass)\\n  )\\n)\\n(:action close_water_glass\\n  :parameters (?char - character ?water_glass - object)\\n  :precondition (and\\n      (next_to ?char ?water_glass)\\n      (can_open ?water_glass)\\n  )\\n  :effect (and\\n      (closed ?water_glass)\\n  )\\n)\\n(:action open_dining_room\\n  :parameters (?char - character ?dining_room - object)\\n  :precondition (and\\n      (next_to ?char ?dining_room)\\n      (can_open ?dining_room)\\n  )\\n  :effect (and\\n      (open ?dining_room)\\n  )\\n)\\n(:action close_dining_room\\n  :parameters (?char - character ?dining_room - object)\\n  :precondition (and\\n      (next_to ?char ?dining_room)\\n      (can_open ?dining_room)\\n  )\\n  :effect (and\\n      (closed ?dining_room)\\n  )\\n)\\n(:action open_bathroom\\n  :parameters (?char - character ?bathroom - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom)\\n      (can_open ?bathroom)\\n  )\\n  :effect (and\\n      (open ?bathroom)\\n  )\\n)\\n(:action close_bathroom\\n  :parameters (?char - character ?bathroom - object)\\n  :precondition (and\\n      (next_to ?char ?bathroom)\\n      (can_open ?bathroom)\\n  )\\n  :effect}"
    },
    {
        "identifier": "317_2",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (when (closed ?obj) (not (closed ?obj))) (when (not (open ?obj)) (open ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (when (not (holds_rh ?char ?obj)) (holds_rh ?char ?obj)) (when (not (holds_lh ?char ?obj)) (holds_lh ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (not (next_to ?char ?obj)))\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "488_2",
        "llm_output": "```json\n{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_on_table\\n  :parameters (?char - character ?obj - object ?table - object)\\n  :precondition (and\\n    (next_to ?char ?table)\\n    (next_to ?obj ?table)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?table)\\n  )\\n)\\n(:action take_off_table\\n  :parameters (?char - character ?obj - object ?table - object)\\n  :precondition (and\\n    (next_to ?char ?table)\\n    (obj_ontop ?obj ?table)\\n  )\\n  :effect (and\\n    (not (obj_ontop ?obj ?table))\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?obj1 ?obj2)\\n    (pourable ?obj1)\\n    (recipient ?obj2)\\n  )\\n  :effect (and\\n    (inside ?obj1 ?obj2)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (inside_room ?char ?obj)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?char ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (inside_room ?char ?obj))\\n  )\\n)\\n(:action turn_on_}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj1)\\n      (pourable ?obj1)\\n      (next_to ?char ?obj2)\\n      (recipient ?obj2)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj1))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_rh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_lh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n      (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?clothes))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (next_to ?char ?clothes)\\n  )\\n)\\n(:action clean\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (dirty ?obj)\\n  )\\n  :effect (and\\n      (clean ?obj)\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action open_window\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_window\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n}"
    },
    {
        "identifier": "528_1",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (has_switch ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (pourable ?obj1)\\n    (recipient ?obj2)\\n    (holds_rh ?char ?obj1)\\n    (not (empty ?obj1))\\n    (not (full ?obj2))\\n  )\\n  :effect (and\\n    (when (full ?obj2) (not (full ?obj2)))\\n    (when (empty ?obj1) (not (empty ?obj1)))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (holds_rh ?char ?obj)\\n    (drinkable ?obj)\\n    (not (empty ?obj))\\n  )\\n  :effect (and\\n    (when (empty ?obj) (not (empty ?obj)))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (holds_rh ?obj)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (not (holds_rh ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (open ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n    (not (open ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "532_1",
        "llm_output": "```json\n{\"output\": \"(:action open_cabinet\\n  :parameters (?char - character ?cabinet - object)\\n  :precondition (and\\n    (next_to ?char ?cabinet)\\n    (can_open ?cabinet)\\n    (not (open ?cabinet))\\n  )\\n  :effect (and\\n    (open ?cabinet)\\n  )\\n)\\n(:action close_cabinet\\n  :parameters (?char - character ?cabinet - object)\\n  :precondition (and\\n    (next_to ?char ?cabinet)\\n    (open ?cabinet)\\n  )\\n  :effect (and\\n    (close ?cabinet)\\n  )\\n)\\n(:action open_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (has_switch ?faucet)\\n    (not (open ?faucet))\\n  )\\n  :effect (and\\n    (open ?faucet)\\n  )\\n)\\n(:action close_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (open ?faucet)\\n  )\\n  :effect (and\\n    (close ?faucet)\\n  )\\n)\\n(:action pick_up_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (next_to ?char ?glass)\\n    (grabbable ?glass)\\n    (not (holds_rh ?char ?glass))\\n    (not (holds_lh ?char ?glass))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?glass)\\n  )\\n)\\n(:action put_down_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?glass))\\n  )\\n)\\n(:action pour_water\\n  :parameters (?char - character ?glass - object ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (next_to ?char ?glass)\\n    (open ?faucet)\\n    (pourable ?glass)\\n    (pourable water)\\n    (not (empty ?glass))\\n    (not (empty water))\\n  )\\n  :effect (and\\n    (not (empty ?glass))\\n    (not (empty water))\\n  )\\n)\\n(:action drink_water\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?glass)\\n    (drinkable water)\\n    (not (empty ?glass))\\n  )\\n  :effect (and\\n    (empty ?glass)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{\"output\": \"(:action grab_drink\\n  :parameters (?char - character ?drink - object ?recipient - object)\\n  :precondition (and\\n      (inside_room ?drink ?room)\\n      (recipient ?recipient)\\n      (inside ?char ?room)\\n      (movable ?recipient)\\n      (drinkable ?drink)\\n      (pourable ?recipient)\\n      (pourable ?drink)\\n      (grabbable ?recipient)\\n      (next_to ?char ?drink)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?recipient)\\n      (not (inside_room ?drink ?room))\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room2)\\n      (room ?room)\\n      (room ?room2)\\n      (not (eq ?room ?room2))\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n      (not (inside ?char ?room2))\\n  )\\n)\\n(:action pour_drink\\n  :parameters (?char - character ?drink - object ?recipient - object)\\n  :precondition (and\\n      (holds_rh ?char ?recipient)\\n      (inside_room ?drink ?room)\\n      (inside ?char ?room)\\n      (pourable ?recipient)\\n      (pourable ?drink)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?recipient))\\n      (inside_room ?drink ?recipient)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?drink - object)\\n  :precondition (and\\n      (holds_rh ?char ?drink)\\n      (drinkable ?drink)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?drink))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (or\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_rh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n      (and\\n          (clothes ?clothes)\\n          (hangable ?hang_obj)\\n          (holds_lh ?char ?clothes)\\n          (next_to ?char ?hang_obj)\\n      )\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n      (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :pre}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action open_freezer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char freezer)\\n      (has_switch freezer)\\n      (not (open freezer))\\n  )\\n  :effect (and\\n      (open freezer)\\n  )\\n)\\n(:action grab_water_glass\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char water_glass)\\n      (grabbable water_glass)\\n      (not (holds_rh ?char water_glass))\\n      (not (holds_lh ?char water_glass))\\n  )\\n  :effect (and\\n      (holds_rh ?char water_glass)\\n  )\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect (and\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action walk_to_freezer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (next_to ?char freezer)\\n  )\\n)\\n(:action close_freezer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char freezer)\\n      (has_switch freezer)\\n      (open freezer)\\n  )\\n  :effect (and\\n      (closed freezer)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "662_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?char ?room1)\\n    (inside_room ?obj ?room2)\\n    (not (eq ?room1 ?room2))\\n  )\\n  :effect (and\\n    (inside_room ?char ?room2)\\n    (not (inside_room ?char ?room1))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (empty ?obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (closed ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n    (not (open ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n    (not (on ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (sitting ?char))\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect (and\\n    (reading ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action finish_reading\\n  :parameters (?char - character)\\n  :precondition (and\\n    (reading ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (reading ?char))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect (and\\n    (eating ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action finish_eating\\n  :parameters (?char - character)\\n  :precondition (and\\n    (eating ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (eating ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect (and\\n    (looking ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action finish_looking\\n  :parameters (?char - character)\\n  :precondition (and\\n    (looking ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (looking ?char))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect (and\\n    (cutting ?char)\\n    (not (standing ?char))\\n  )\\n)\\n(:action finish_cutting\\n  :parameters (?char - character)\\n  :precondition (and\\n    (cutting ?char)\\n  )\\n  :effect (and\\n    (standing ?char)\\n    (not (cutting ?char))\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (ontop ?clothes ?char)\\n  )\\n  :effect (and\\n    (when (ontop ?clothes ?char)(}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{\n\"output\": \"(:action open_cupboard\\n  :parameters (?char - character ?cupboard - object)\\n  :precondition (and\\n    (next_to ?char ?cupboard)\\n    (can_open ?cupboard)\\n  )\\n  :effect (and\\n    (open ?cupboard)\\n  )\\n)\\n(:action close_cupboard\\n  :parameters (?char - character ?cupboard - object)\\n  :precondition (and\\n    (next_to ?char ?cupboard)\\n    (open ?cupboard)\\n  )\\n  :effect (and\\n    (closed ?cupboard)\\n  )\\n)\\n(:action open_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (has_switch ?faucet)\\n  )\\n  :effect (and\\n    (on ?faucet)\\n  )\\n)\\n(:action close_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (on ?faucet)\\n  )\\n  :effect (and\\n    (off ?faucet)\\n  )\\n)\\n(:action pick_up_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (next_to ?char ?glass)\\n    (grabbable ?glass)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?glass)\\n  )\\n)\\n(:action put_down_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?glass)\\n    (next_to ?char ?glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?glass))\\n  )\\n)\\n(:action pour_water\\n  :parameters (?char - character ?glass - object ?faucet - object)\\n  :precondition (and\\n    (next_to ?char ?faucet)\\n    (next_to ?char ?glass)\\n    (on ?faucet)\\n    (pourable ?glass)\\n    (pourable ?faucet)\\n  )\\n  :effect (and\\n    (not (empty ?faucet))\\n    (not (empty ?glass))\\n  )\\n)\\n(:action drink_water\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (holds_rh ?char ?glass)\\n    (drinkable ?glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?glass))\\n    (empty ?glass)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "787_1",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?obj ?char)\\n  :effect (and (next_to ?char ?obj) (not (next_to ?obj ?char)))\\n)\\n(:action turn_on_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (has_switch ?faucet))\\n  :effect (and (on ?faucet) (not (off ?faucet)))\\n)\\n(:action turn_off_faucet\\n  :parameters (?char - character ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (on ?faucet))\\n  :effect (and (off ?faucet) (not (on ?faucet)))\\n)\\n(:action fill_glass\\n  :parameters (?char - character ?glass - object ?faucet - object)\\n  :precondition (and (next_to ?char ?faucet) (next_to ?glass ?faucet) (on ?faucet) (pourable ?faucet) (recipient ?glass))\\n  :effect (and (pourable ?glass) (not (empty ?glass))))\\n\"}"
    },
    {
        "identifier": "788_1",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (when (closed ?obj) (not (closed ?obj))) (when (not (open ?obj)) (open ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (when (not (holds_rh ?char ?obj)) (holds_rh ?char ?obj)) (when (not (holds_lh ?char ?obj)) (holds_lh ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (when (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (when (off ?obj) (not (off ?obj))) (when (not (on ?obj)) (on ?obj)))\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (when (on ?obj) (not (on ?obj))) (when (not (off ?obj)) (off ?obj)))\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (next_to ?char ?obj2) (pourable ?obj1) (recipient ?obj2) (not (empty ?obj1)))\\n  :effect (and (when (not (empty ?obj1)) (empty ?obj1)) (when (not (full ?obj2)) (full ?obj2)))\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (drinkable ?obj) (holds_rh ?char ?obj))\\n  :effect (and (when (not (empty ?obj)) (empty ?obj)))\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or (and (holds_lh ?obj) (next_to ?char ?dest)) (and (holds_rh ?obj) (next_to ?char ?dest)))\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_ontop ?obj ?dest)))\\n  :effect (and (obj_ontop ?obj ?dest) (next_to ?char ?dest))\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and (next_to ?char ?target))\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "814_1",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action get_water\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char home_office)\\n    (inside_room water dining_room)\\n    (inside_room cupboard dining_room)\\n    (obj_inside water cupboard)\\n    (closed cupboard)\\n    (can_open cupboard)\\n    (movable water_glass)\\n    (pourable water_glass)\\n    (recipient water_glass)\\n    (grabbable water_glass)\\n    (inside_room water_glass dining_room)\\n    (drinkable water)\\n    (obj_next_to cupboard water_glass)\\n    (pourable water)\\n  )\\n  :effect (and\\n    (open cupboard)\\n    (grab water_glass)\\n    (walk_towards cupboard)\\n    (open cupboard)\\n    (grab water)\\n    (walk_towards water_glass)\\n    (put_to water water_glass)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character)\\n  :precondition (and\\n    (holds_rh ?char water_glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char water_glass))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "850_2",
        "llm_output": "```json\n{\"output\": \"(:action open_cabinet\\n  :parameters (?char - character ?cabinet - object)\\n  :precondition (and\\n    (next_to ?char ?cabinet)\\n    (can_open ?cabinet)\\n    (closed ?cabinet)\\n  )\\n  :effect (and\\n    (open ?cabinet)\\n  )\\n)\\n(:action grab_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (next_to ?char ?glass)\\n    (grabbable ?glass)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?glass)\\n  )\\n)\\n(:action walk_to_kitchen\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char home_office)\\n  )\\n  :effect (and\\n    (inside_room ?char dining_room)\\n  )\\n)\\n(:action walk_to_faucet\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (next_to ?char faucet)\\n  )\\n)\\n(:action turn_on_faucet\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char faucet)\\n    (has_switch faucet)\\n    (off faucet)\\n  )\\n  :effect (and\\n    (on faucet)\\n  )\\n)\\n(:action fill_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (next_to ?char faucet)\\n    (holds_rh ?char ?glass)\\n    (on faucet)\\n    (pourable faucet)\\n    (recipient ?glass)\\n  )\\n  :effect (and\\n    (not (on faucet))\\n  )\\n)\\n(:action walk_to_glass\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (next_to ?char water_glass)\\n  )\\n)\\n(:action grab_filled_glass\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (next_to ?char ?glass)\\n    (grabbable ?glass)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?glass)\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (inside_room ?char home_office)\\n  )\\n)\\n(:action drink_water\\n  :parameters (?char - character ?glass - object)\\n  :precondition (and\\n    (inside_room ?char home_office)\\n    (holds_rh ?char ?glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?glass))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "861_2",
        "llm_output": "```json\n{\"output\": \"(:action grab_cup\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and\\n    (grabbable ?cup)\\n    (next_to ?char ?cup)\\n    (inside_room ?cup dining_room)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?cup)\\n    (not (inside_room ?cup dining_room))\\n  )\\n)\\n(:action walk_to_kitchen\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char bedroom)\\n  )\\n  :effect (and\\n    (inside_room ?char dining_room)\\n    (not (inside_room ?char bedroom))\\n  )\\n)\\n(:action turn_on_faucet\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char faucet)\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (on faucet)\\n  )\\n)\\n(:action fill_cup\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and\\n    (holds_rh ?char ?cup)\\n    (on faucet)\\n    (next_to ?char sink)\\n  )\\n  :effect (and\\n    (full ?cup)\\n  )\\n)\\n(:action turn_off_faucet\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char faucet)\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (off faucet)\\n  )\\n)\\n(:action walk_to_bedroom\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (inside_room ?char bedroom)\\n    (not (inside_room ?char dining_room))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?cup - object)\\n  :precondition (and\\n    (holds_rh ?char ?cup)\\n    (full ?cup)\\n    (inside_room ?char bedroom)\\n  )\\n  :effect (and\\n    (empty ?cup)\\n    (not (full ?cup))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "878_2",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action get_water\\n  :parameters (?char - character)\\n  :precondition (and\\n    (inside_room ?char home_office)\\n    (inside_room water dining_room)\\n    (inside_room cupboard dining_room)\\n    (obj_inside water cupboard)\\n    (closed cupboard)\\n    (can_open cupboard)\\n    (movable water_glass)\\n    (pourable water_glass)\\n    (recipient water_glass)\\n    (grabbable water_glass)\\n    (inside_room water_glass dining_room)\\n    (drinkable water)\\n    (obj_next_to cupboard water_glass)\\n    (pourable water)\\n  )\\n  :effect (and\\n    (open cupboard)\\n    (grab water_glass)\\n    (walk_towards cupboard)\\n    (open cupboard)\\n    (grab water)\\n    (walk_towards water_glass)\\n    (put_to water water_glass)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character)\\n  :precondition (and\\n    (holds_rh ?char water_glass)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char water_glass))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (and (on ?obj) (not (off ?obj))))\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj) (holds_rh ?char ?obj))\\n  :effect (and (not (holds_rh ?char ?obj))))\\n\"\n}"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{\n\"output\": \"(:action open_filing_cabinet\\n  :parameters (?char - character ?filing_cabinet - object)\\n  :precondition (and\\n      (can_open ?filing_cabinet)\\n      (next_to ?char ?filing_cabinet)\\n  )\\n  :effect (and\\n      (open ?filing_cabinet)\\n  )\\n)\\n(:action pick_up_novel\\n  :parameters (?char - character ?novel - object)\\n  :precondition (and\\n      (grabbable ?novel)\\n      (next_to ?char ?novel)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?novel)\\n  )\\n)\\n(:action walk_to_couch\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (next_to ?char ?couch)\\n  )\\n  :effect (and\\n      (next_to ?char ?couch)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?couch - object)\\n  :precondition (and\\n      (sittable ?couch)\\n      (next_to ?char ?couch)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action open_novel\\n  :parameters (?char - character ?novel - object)\\n  :precondition (and\\n      (can_open ?novel)\\n      (holds_rh ?char ?novel)\\n  )\\n  :effect (and\\n      (open ?novel)\\n  )\\n)\\n(:action read_novel\\n  :parameters (?char - character ?novel - object)\\n  :precondition (and\\n      (readable ?novel)\\n      (open ?novel)\\n      (sitting ?char)\\n  )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "15_2",
        "llm_output": "```json\n{\"output\": \"(:action open_address_book\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (grabbable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_address_book\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (grabbable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action read_address_book\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut_address_book\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action move_address_book\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action put_down_address_book\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action take_out_address_book\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{\"output\": \"(:action grab_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (grabbable ?book)\\n      (next_to ?char ?book)\\n      (inside ?char bathroom)\\n      (obj_inside ?book home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?book)\\n      (not (obj_next_to ?char ?book))\\n      (not (inside ?char bathroom))\\n      (not (obj_inside ?book home_office))\\n  )\\n)\\n(:action walk_to_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char novel)\\n      (inside ?char bathroom)\\n  )\\n  :effect (and\\n      (next_to ?char chair)\\n      (not (next_to ?char novel))\\n      (not (inside ?char bathroom))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sittable chair)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (next_to ?char chair))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (next_to ?char chair)\\n  )\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (can_open ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (open ?book)\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (open ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (not (open ?book))\\n  )\\n)\\n(:action close_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (open ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (not (open ?book))\\n  )\\n)\\n(:action put_book_on_chair\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (next_to ?char chair)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (obj_ontop ?book chair)\\n  )\\n)\\n(:action turn_on_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char computer)\\n      (has_switch computer)\\n  )\\n  :effect (and\\n      (on computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char computer)\\n      (has_switch computer)\\n      (on computer)\\n  )\\n  :effect (and\\n      (off computer)\\n  )\\n)\\n(:action look_at_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char computer)\\n      (lookable computer)\\n  )\\n  :effect ()\\n)\\n(:action walk_to_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n  )\\n  :effect (and\\n      (next_to ?char computer)\\n      (not (next_to ?char chair))\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char computer)\\n  )\\n  :effect (and\\n      (inside ?char home_office)\\n      (not (next_to ?char computer))\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (inside ?char bathroom)\\n      (not (inside ?char home_office))\\n  )\\n)\\n(:action get_book_from_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n      (obj_inside novel home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char novel)\\n      (not (obj_inside novel home_office))\\n  )\\n)\\n(:action put_book_in_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char novel)\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char novel))\\n      (obj_inside novel home_office)\\n  )\\n)\\n(:action get_chair_from_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n      (obj_inside chair home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char chair)\\n      (not (obj_inside chair home_office))\\n  )\\n)\\n(:action put_chair_in_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char chair)\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char chair))\\n      (obj_inside chair home_office)\\n  )\\n)\\n(:action get_computer_from_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n      (obj_inside computer home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char computer)\\n      (not (obj_inside computer home_office))\\n  )\\n)\\n(:action put_computer_in_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (holds_rh ?char computer)\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char computer))\\n      (obj_inside computer home_office)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect (and\\n      (not (inside ?char bathroom))\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (inside ?char bathroom)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action turn_off_light\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action take_a_shower\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action brush_teeth\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action wash_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action dry_hands\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect ()\\n)\\n(:action flush_toilet\\n  :parameters (?char - character)\\n  :precondition (}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (not (ontop ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (closed ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (on ?obj)\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (obj_inside ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (obj_next_to ?obj ?dest)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action push\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (obj_next_to ?obj ?dest)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action pull\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n      (obj_next_to ?obj ?dest)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n      (not (ontop ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\}"
    },
    {
        "identifier": "192_1",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (open ?obj)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char couch)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n      (not (closed ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (not (on ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?obj)\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?obj))\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (standing ?char))\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (standing ?char)\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (not (standing ?char))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (standing ?char)\\n      (not (lying ?char))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (wearing ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (wearing ?char ?obj)\\n  )\\n  :effect (and\\n      (not (wearing ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_on_table\\n  :parameters (?char - character ?obj - object ?table - object)\\n  :precondition (and\\n      (next_to ?char ?table)\\n      (holds_rh ?obj)\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?table)\\n      (not (holds_rh ?obj))\\n  )\\n)\\n(:action pick_up_from_table\\n  :parameters (?char - character ?obj - object ?table - object)\\n  :precondition (and\\n      (next_to ?char ?table)\\n      (obj_ontop ?obj ?table)\\n  )\\n  :effect (and\\n      (holds_rh ?obj)\\n      (not (obj_ontop ?obj ?table))\\n  )\\n)\\n(:action put_in_drawer\\n  :parameters (?char - character ?obj - object ?drawer - object)\\n  :precondition (and\\n      (next_to ?char ?drawer)\\n      (holds_rh ?obj)\\n  )\\n  :effect (and\\n      (obj_inside ?obj ?drawer)\\n      (not (holds_rh ?obj))\\n  )\\n)\\n(:action take_out_from_drawer\\n  :parameters (?char - character ?obj - object ?drawer - object)\\n  :precondition (and\\n      (next_to ?char ?drawer)\\n      (obj_inside ?obj ?drawer)\\n  )\\n  :effect (and\\n      (holds_rh ?obj)\\n      (not (obj_inside ?obj ?drawer))\\n  )\\n)\\n(:action put_in_bag\\n  :parameters (?char - character ?obj - object ?bag - object)\\n  :pre}"
    },
    {
        "identifier": "221_2",
        "llm_output": "```json\n{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (readable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action walk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action grab_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (grabbable ?book)\\n    (next_to ?char ?book)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?book)\\n  )\\n)\\n(:action walk_to_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (next_to ?char ?book)\\n  )\\n  :effect (and\\n    (next_to ?char ?book)\\n  )\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (can_open ?book)\\n    (next_to ?char ?book)\\n    (not (open ?book))\\n  )\\n  :effect (and\\n    (open ?book)\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (readable ?book)\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action put_down_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action walk_to_character\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect (and\\n    (next_to ?char ?target)\\n  )\\n)\\n(:action bow_to_character\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action talk_to_character\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action give_book_to_character\\n  :parameters (?char - character ?target - character ?book - object)\\n  :precondition (and\\n    (holds_rh ?char ?book)\\n    (next_to ?char ?target)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n    (holds_rh ?target ?book)\\n  )\\n)\\n(:action take_book_from_character\\n  :parameters (?char - character ?target - character ?book - object)\\n  :precondition (and\\n    (holds_rh ?target ?book)\\n    (next_to ?char ?target)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?book)\\n    (not (holds_rh ?target ?book))\\n  )\\n)\\n(:action read_book_to_character\\n  :parameters (?char - character ?target - character ?book - object)\\n  :precondition (and\\n    (readable ?book)\\n    (holds_rh ?char ?book)\\n    (next_to ?char ?target)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action close_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (can_open ?book)\\n    (next_to ?char ?book)\\n    (open ?book)\\n  )\\n  :effect (and\\n    (not (open ?book))\\n  )\\n)\\n(:action cut_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (cuttable ?book)\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action eat_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (eatable ?book)\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action throw_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action wear_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (clothes ?book)\\n    (holds_rh ?char ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action hang_book\\n  :parameters (?char - character ?book - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?book)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?book)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?book)(not (holds_rh ?char ?book)))\\n    (when (holds_lh ?char ?book)(not (holds_lh ?char ?book)))\\n    (ontop ?book ?hang_obj)\\n  )\\n)\\n(:action put_book_in_container\\n  :parameters (?char - character ?book - object ?container - object)\\n  :precondition (and\\n    (holds_rh ?char ?book)\\n    (next_to ?char ?container)\\n  )\\n  :effect (and\\n    (obj_inside ?book ?container)\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action take_book_out_of_container\\n  :parameters (?char - character ?book - object ?container - object)\\n  :precondition (and\\n    (obj_inside ?book ?container)\\n    (next_to ?char ?container)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?book)\\n    (not (obj_inside ?book ?container))\\n  )\\n)\\n(:action turn_on_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (has_switch ?book)\\n    (next_to ?char ?book)\\n    (not (on ?book))\\n  )\\n  :effect (and\\n    (on ?book)\\n  )\\n)\\n(:action turn_off_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (has_switch ?book)\\n    (next_to ?char ?book)\\n    (on ?book)\\n  )\\n  :effect (and\\n    (not (on ?book))\\n  )\\n)\\n(:action plug_in_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (has_plug ?book)\\n    (next_to ?char ?book)\\n    (not (plugged_in ?book))\\n}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{\n\"output\": \"(:action grab_book\\n  :parameters (?char - character ?book - object ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n      (obj_inside ?book ?room)\\n      (readable ?book)\\n      (grabbable ?book)\\n      (not (holds_rh ?char ?book))\\n      (not (holds_lh ?char ?book))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?book)\\n      (not (obj_inside ?book ?room))\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (not (inside ?char ?room))\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (can_open ?book)\\n      (not (open ?book))\\n  )\\n  :effect (and\\n      (open ?book)\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (open ?book)\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (open ?book))\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "341_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\")}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{\n\"output\": \"(:action walk_to_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action grab_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action open_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj))\\n  :effect (and (open ?obj) (not (closed ?obj))))\\n(:action read_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (readable ?obj) (open ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (not (open ?obj))))\"\n}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (open ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (on ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action stand\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n      (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character}"
    },
    {
        "identifier": "508_2",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n      (readable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action walk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action get_out_of_bed\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n  )\\n  :effect (and\\n      (not (inside ?char bedroom))\\n  )\\n)\\n(:action go_to_bed\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside ?char bedroom))\\n  )\\n  :effect (and\\n      (inside ?char bedroom)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_computer\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_oven\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_oven\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_microwave\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_microwave\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_dishwasher\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_dishwasher\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_washing_machine\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_washing_machine\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (off ?obj)\\n  )\\n)\\n(:action turn_on_vacuum_cleaner\\n  :parameters (?char - character ?obj - object}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (when (closed ?obj) (not (closed ?obj))) (when (not (open ?obj)) (open ?obj)))\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (readable ?obj) (holds_rh ?char ?obj))\\n  :effect ()\\n)\\n(:action walk_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (when (not (inside_room ?char ?obj)) (inside_room ?char ?obj)))\\n)\\n(:action grab_book\\n  :parameters (?char - character ?book - object ?room - object)\\n  :precondition (and (inside_room ?book ?room) (inside_room ?char ?room) (grabbable ?book) (next_to ?char ?book))\\n  :effect (and (holds_rh ?char ?book) (not (inside_room ?book ?room)))\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside ?char ?room))\\n  :effect (and (when (not (inside_room ?char ?room)) (inside_room ?char ?room)))\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and (holds_rh ?char ?book) (can_open ?book))\\n  :effect (and (when (closed ?book) (not (closed ?book))) (when (not (open ?book)) (open ?book)))\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and (holds_rh ?char ?book) (readable ?book) (open ?book))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (open ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (on ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n      (not (lying ?char))\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n      (not (sitting ?char))\\n      (not (lying ?char))\\n  )\\n  :effect ()\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (holds_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (holds_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point\\n  :parameters (?char - character ?target - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?target)\\n      (next_to ?obj ?target)\\n  )\\n  :effect ()\\n)\\n(:action introduce\\n  :parameters (?char - character ?target1 - character ?target2 - character)\\n  :precondition (and\\n      (next_to ?char ?target1)\\n      (next_to ?char ?target2)\\n  )\\n  :effect ()\\n)\\n(:action ask\\n  :parameters (?char - character ?target - character ?question - object)\\n  :precondition (and\\n      (next_to ?char ?target)\\n      (readable ?question)\\n  )\\n  :effect ()\\n)\\n(:action answer\\n  :parameters (?char - character ?target - character ?answer - object)\\n  :precondition (and\\n      (next}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (not (on ?obj))\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (containers ?obj2)\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (obj_inside ?obj1 ?obj2)\\n  )\\n  :effect (and\\n    (not (obj_inside ?obj1 ?obj2))\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (pourable ?obj1)\\n    (not (empty ?obj1))\\n    (containers ?obj2)\\n  )\\n  :effect (and\\n    (empty ?obj1)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n      (sittable couch)\\n      (next_to ?char couch)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj couch)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (ontop ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (not (ontop ?char ?obj))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (ontop ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n      (not (ontop ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (clothes ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action turn_on_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_stove\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_fridge\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action open_microwave\\}"
    },
    {
        "identifier": "688_2",
        "llm_output": "```json\n{\"output\": \"(:action grab_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (next_to ?char ?book)\\n    (grabbable ?book)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?book)\\n    (not (next_to ?char ?book))\\n  )\\n)\\n(:action walk_to_couch\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?couch)\\n  )\\n  :effect (and\\n    (ontop ?char ?couch)\\n    (not (next_to ?char ?couch))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?couch)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (not (ontop ?char ?couch))\\n  )\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (holds_rh ?char ?book)\\n    (can_open ?book)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (sitting ?char)\\n    (next_to ?char ?book)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?book))\\n  )\\n)\\n(:action close_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n    (next_to ?char ?book)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?book)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (ontop ?char ?couch)\\n    (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (ontop ?char ?light)\\n    (not (next_to ?char ?light))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n    (not (off ?light))\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n    (not (on ?light))\\n  )\\n)\\n(:action walk_to_bed\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?bed)\\n  )\\n  :effect (and\\n    (ontop ?char ?bed)\\n    (not (next_to ?char ?bed))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?bed)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (not (ontop ?char ?bed))\\n  )\\n)\\n(:action sleep\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action wake_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (ontop ?char ?bed)\\n    (not (lying ?char))\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (ontop ?char ?door)\\n    (not (next_to ?char ?door))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?door)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?door))\\n  )\\n)\\n(:action walk_out\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?door))\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?door))\\n  )\\n)\\n(:action walk_to_spectacles\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?spectacles)\\n  )\\n  :effect (and\\n    (ontop ?char ?spectacles)\\n    (not (next_to ?char ?spectacles))\\n  )\\n)\\n(:action put_on_spectacles\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?spectacles)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?spectacles))\\n  )\\n)\\n(:action take_off_spectacles\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?spectacles)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?spectacles))\\n  )\\n)\\n(:action walk_to_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?novel)\\n  )\\n  :effect (and\\n    (ontop ?char ?novel)\\n    (not (next_to ?char ?novel))\\n  )\\n)\\n(:action put_on_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?novel)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?novel))\\n  )\\n)\\n(:action take_off_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?novel)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?novel))\\n  )\\n)\\n(:action walk_to_couch_with_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?couch)\\n    (holds_rh ?char ?novel)\\n  )\\n  :effect (and\\n    (ontop ?char ?couch)\\n    (not (next_to ?char ?couch))\\n  )\\n)\\n(:action put_down_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?couch)\\n    (holds_rh ?char ?novel)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?couch))\\n    (not (holds_rh ?char ?novel))\\n  )\\n)\\n(:action walk_to_couch_with_spectacles\\n  :parameters (?char - character)\\n  :precondition (and\\n    (next_to ?char ?couch)\\n    (holds_rh ?char ?spectacles)\\n  )\\n  :effect (and\\n    (ontop ?char ?couch)\\n    (not (next_to ?char ?couch))\\n  )\\n)\\n(:action put_down_spectacles\\n  :parameters (?char - character)\\n  :precondition (and\\n    (ontop ?char ?couch)\\n    (holds_rh ?char ?spectacles)\\n  )\\n  :effect (and\\n    (not (ontop ?char ?couch))\\n    (not (holds_rh ?char ?spectacles))\\n  )\\n)\\n(:action walk_to_couch_with_}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{\"output\": \"(:action pick_up_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (grabbable ?book)\\n      (next_to ?char ?book)\\n      (inside_room ?book bedroom)\\n      (inside ?char bathroom)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?book)\\n      (inside ?char bedroom)\\n  )\\n)\\n(:action open_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (can_open ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (open ?book)\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (open ?book)\\n      (readable ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n  )\\n)\\n(:action close_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (open ?book)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (closed ?book)\\n  )\\n)\\n(:action put_down_book\\n  :parameters (?char - character ?book - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (sittable ?dest)\\n      (surfaces ?dest)\\n      (inside_room ?dest bedroom)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?book))\\n      (obj_ontop ?book ?dest)\\n  )\\n)\\n(:action walk_to_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (inside ?char bedroom)\\n      (inside_room ?chair bedroom)\\n      (next_to ?char ?chair)\\n  )\\n  :effect (and\\n      (next_to ?char ?chair)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (next_to ?char ?chair)\\n      (sittable ?chair)\\n      (surfaces ?chair)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?chair))\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_novel\\n  :parameters (?char - character ?novel - object)\\n  :precondition (and\\n      (inside ?char bedroom)\\n      (inside_room ?novel bedroom)\\n      (next_to ?char ?novel)\\n  )\\n  :effect (and\\n      (next_to ?char ?novel)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n  )\\n  :effect (and\\n      (next_to ?char door)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char door)\\n      (has_switch door)\\n  )\\n  :effect (and\\n      (not (next_to ?char door))\\n      (open door)\\n  )\\n)\\n(:action walk_through_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char door)\\n      (open door)\\n  )\\n  :effect (and\\n      (not (next_to ?char door))\\n      (inside ?char livingroom)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char door)\\n      (open door)\\n  )\\n  :effect (and\\n      (not (next_to ?char door))\\n      (closed door)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n  )\\n  :effect (and\\n      (next_to ?char bathroom)\\n  )\\n)\\n(:action walk_into_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char bathroom)\\n  )\\n  :effect (and\\n      (not (next_to ?char bathroom))\\n      (inside ?char bathroom)\\n  )\\n)\\n(:action close_bathroom_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char bathroom)\\n      (open bathroom)\\n  )\\n  :effect (and\\n      (not (next_to ?char bathroom))\\n      (closed bathroom)\\n  )\\n)\\n(:action walk_to_bed\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n  )\\n  :effect (and\\n      (next_to ?char bed)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char bed)\\n      (lieable bed)\\n  )\\n  :effect (and\\n      (not (next_to ?char bed))\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n      (next_to ?char light)\\n      (has_switch light)\\n  )\\n  :effect (and\\n      (not (next_to ?char light))\\n      (on light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n      (next_to ?char light)\\n      (has_switch light)\\n  )\\n  :effect (and\\n      (not (next_to ?char light))\\n      (off light)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bedroom)\\n  )\\n  :effect (and\\n      (next_to ?char light)\\n  )\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n      (next_to ?char tv)\\n      (has_switch tv)\\n  )\\n  :effect (and\\n      (not (next_to ?char tv))\\n      (on tv)\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n      (next_to ?char tv)\\n      (has_switch tv)\\n  )\\n  :effect (and\\n      (not (next_to ?char tv))\\n      (off tv)\\n  )\\n)\\n(:action walk_to_tv\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n  )\\n  :effect (and\\n      (next_to ?char tv)\\n  )\\n)\\n(:action turn_on_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n      (next_to ?char computer)\\n      (has_switch computer)\\n  )\\n  :effect (and\\n      (not (next_to ?char computer))\\n      (on computer)\\n  )\\n)\\n(:action turn_off_computer\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char livingroom)\\n      (next_to ?char computer)\\n      }"
    },
    {
        "identifier": "821_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char bathroom)\\n  )\\n  :effect (and\\n      (not (inside ?char bathroom))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n  )\\n  :effect (and\\n      (open home_office)\\n  )\\n)\\n(:action walk_in\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n      (open home_office)\\n  )\\n  :effect (and\\n      (inside ?char home_office)\\n      (not (open home_office))\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n      (open home_office)\\n  )\\n  :effect (and\\n      (not (open home_office))\\n  )\\n)\\n(:action get_out_of_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n      (next_to ?char chair)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (not (next_to ?char chair))\\n  )\\n)\\n(:action walk_to_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (next_to ?char chair)\\n  )\\n)\\n(:action sit_on_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (next_to ?char chair))\\n  )\\n)\\n(:action get_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (obj_inside novel chair)\\n  )\\n  :effect (and\\n      (not (obj_inside novel chair))\\n      (holds_rh ?char novel)\\n  )\\n)\\n(:action put_novel_on_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char novel))\\n      (obj_inside novel chair)\\n  )\\n)\\n(:action get_novel_from_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n      (inside ?char home_office)\\n      (obj_inside novel home_office)\\n  )\\n  :effect (and\\n      (not (obj_inside novel home_office))\\n      (holds_rh ?char novel)\\n  )\\n)\\n(:action put_novel_in_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n      (inside ?char home_office)\\n      (holds_rh ?char novel)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char novel))\\n      (obj_inside novel home_office)\\n  )\\n)\\n(:action close_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n  )\\n)\\n(:action open_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (not (open novel))\\n  )\\n  :effect (and\\n      (open novel)\\n  )\\n)\\n(:action read_novel\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n  )\\n)\\n(:action close_novel_and_put_down\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n      (not (holds_rh ?char novel))\\n  )\\n)\\n(:action close_novel_and_put_in_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char home_office)\\n      (inside ?char home_office)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n      (not (holds_rh ?char novel))\\n      (obj_inside novel home_office)\\n  )\\n)\\n(:action close_novel_and_put_on_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n      (not (holds_rh ?char novel))\\n      (obj_inside novel chair)\\n  )\\n)\\n(:action close_novel_and_get_out_of_chair\\n  :parameters (?char - character)\\n  :precondition (and\\n      (next_to ?char chair)\\n      (sitting ?char)\\n      (holds_rh ?char novel)\\n      (open novel)\\n  )\\n  :effect (and\\n      (not (open novel))\\n      (not (holds_rh ?char novel))\\n}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{\n\"output\": \"(:action open_filing_cabinet\\n  :parameters (?char - character ?filing_cabinet - object)\\n  :precondition (and\\n      (can_open ?filing_cabinet)\\n      (next_to ?char ?filing_cabinet)\\n      (not (open ?filing_cabinet))\\n  )\\n  :effect (and\\n      (open ?filing_cabinet)\\n  )\\n)\\n(:action take_out_novel\\n  :parameters (?char - character ?filing_cabinet - object ?novel - object)\\n  :precondition (and\\n      (open ?filing_cabinet)\\n      (obj_inside ?novel ?filing_cabinet)\\n      (next_to ?char ?filing_cabinet)\\n  )\\n  :effect (and\\n      (obj_ontop ?novel ?char)\\n      (not (obj_inside ?novel ?filing_cabinet))\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character ?home_office - object)\\n  :precondition (and\\n      (next_to ?char ?home_office)\\n  )\\n  :effect (and\\n      (inside ?char ?home_office)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?home_office - object)\\n  :precondition (and\\n      (inside ?char ?home_office)\\n      (sittable ?home_office)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action read_novel\\n  :parameters (?char - character ?novel - object)\\n  :precondition (and\\n      (sitting ?char)\\n      (holds_rh ?char ?novel)\\n      (readable ?novel)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?novel))\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_lh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_lh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (not (holds_lh ?char ?obj))\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_inside\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_lh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (not (holds_lh ?char ?obj))\\n    (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action fold_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (next_to ?char ?clothes)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?clothes))\\n  )\\n)\\n(:action put_away_clothes\\n  :parameters (?char - character ?clothes - object ?dest - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (next_to ?char ?clothes)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?clothes))\\n    (obj_inside ?clothes ?dest)\\n  )\\n)\\n(:action take_out_clothes\\}"
    },
    {
        "identifier": "897_2",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n      (plugged_in ?light)\\n      (off ?light)\\n  )\\n  :effect (and\\n      (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n      (plugged_in ?light)\\n      (on ?light)\\n  )\\n  :effect (and\\n      (off ?light)\\n  )\\n)\\n(:action open_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (or\\n          (holds_rh ?char ?obj)\\n          (holds_lh ?char ?obj)\\n      )\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (next_to ?char ?book)\\n      (readable ?book)\\n  )\\n  :effect ()\\n)\\n(:action eat_food\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n      (eatable ?food)\\n  )\\n  :effect ()\\n)\\n(:action drink_liquid\\n  :parameters (?char - character ?liquid - object)\\n  :precondition (and\\n      (next_to ?char ?liquid)\\n      (drinkable ?liquid)\\n  )\\n  :effect ()\\n)\\n(:action cut_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action wear_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect ()\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (or\\n          (holds_rh ?char ?clothes)\\n          (holds_lh ?char ?clothes)\\n      )\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes)))\\n      (when (holds_lh ?char ?clothes) (not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (openable ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (next_to ?char ?room)\\n      (open ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action exit_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (not (inside ?char ?room))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "392_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj2)\\n      (movable ?obj1)\\n      (grabbable ?obj1)\\n      (not (obj_ontop ?obj1 ?obj2))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj1 ?obj2)\\n      (next_to ?char ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?obj1 ?obj2)\\n    (movable ?obj1)\\n    (surfaces ?obj2)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj1))\\n    (not (next_to ?obj1 ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (inside ?obj ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "204_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "297_2",
        "llm_output": "```json\n{\"output\": \"(:action sit_on_sofa\\n  :parameters (?char - character ?sofa - object)\\n  :precondition (and\\n    (next_to ?char ?sofa)\\n    (sittable ?sofa)\\n  )\\n  :effect (and\\n    (ontop ?char ?sofa)\\n    (not (next_to ?char ?sofa))\\n  )\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n    (next_to ?char ?tv)\\n    (has_switch ?tv)\\n  )\\n  :effect (and\\n    (on ?tv)\\n    (not (off ?tv))\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n    (next_to ?char ?tv)\\n    (has_switch ?tv)\\n  )\\n  :effect (and\\n    (off ?tv)\\n    (not (on ?tv))\\n  )\\n)\\n(:action open_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n    (can_open ?curtain)\\n  )\\n  :effect (and\\n    (open ?curtain)\\n    (not (closed ?curtain))\\n  )\\n)\\n(:action close_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n    (can_open ?curtain)\\n  )\\n  :effect (and\\n    (closed ?curtain)\\n    (not (open ?curtain))\\n  )\\n)\\n(:action pick_up_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :precondition (and\\n    (next_to ?char ?pillow)\\n    (grabbable ?pillow)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?pillow)\\n    (not (next_to ?char ?pillow))\\n  )\\n)\\n(:action put_down_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :precondition (and\\n    (holds_rh ?char ?pillow)\\n    (next_to ?char ?pillow)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?pillow))\\n    (next_to ?char ?pillow)\\n  )\\n)\\n(:action pick_up_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (grabbable ?drawing)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?drawing)\\n    (not (next_to ?char ?drawing))\\n  )\\n)\\n(:action put_down_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (holds_rh ?char ?drawing)\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?drawing))\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action pick_up_mat\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (next_to ?char ?mat)\\n    (grabbable ?mat)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?mat)\\n    (not (next_to ?char ?mat))\\n  )\\n)\\n(:action put_down_mat\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (holds_rh ?char ?mat)\\n    (next_to ?char ?mat)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?mat))\\n    (next_to ?char ?mat)\\n  )\\n)\\n(:action pick_up_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (next_to ?char ?chair)\\n    (grabbable ?chair)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?chair)\\n    (not (next_to ?char ?chair))\\n  )\\n)\\n(:action put_down_chair\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n    (holds_rh ?char ?chair)\\n    (next_to ?char ?chair)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?chair))\\n    (next_to ?char ?chair)\\n  )\\n)\\n(:action pick_up_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (grabbable ?floor_lamp)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?floor_lamp)\\n    (not (next_to ?char ?floor_lamp))\\n  )\\n)\\n(:action put_down_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (holds_rh ?char ?floor_lamp)\\n    (next_to ?char ?floor_lamp)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?floor_lamp))\\n    (next_to ?char ?floor_lamp)\\n  )\\n)\\n(:action plug_in_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (has_plug ?floor_lamp)\\n    (plugged_out ?floor_lamp)\\n  )\\n  :effect (and\\n    (plugged_in ?floor_lamp)\\n    (not (plugged_out ?floor_lamp))\\n  )\\n)\\n(:action unplug_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (has_plug ?floor_lamp)\\n    (plugged_in ?floor_lamp)\\n  )\\n  :effect (and\\n    (plugged_out ?floor_lamp)\\n    (not (plugged_in ?floor_lamp))\\n  )\\n)\\n(:action turn_on_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (has_switch ?floor_lamp)\\n    (plugged_in ?floor_lamp)\\n  )\\n  :effect (and\\n    (on ?floor_lamp)\\n    (not (off ?floor_lamp))\\n  )\\n)\\n(:action turn_off_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (has_switch ?floor_lamp)\\n    (plugged_in ?floor_lamp)\\n  )\\n  :effect (and\\n    (off ?floor_lamp)\\n    (not (on ?floor_lamp))\\n  )\\n)\\n(:action look_at_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n    (next_to ?char ?tv)\\n    (lookable ?tv)\\n  )\\n  :effect ()\\n)\\n(:action look_at_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (lookable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action look_at_floor_lamp\\n  :parameters (?char - character ?floor_lamp - object)\\n  :precondition (and\\n    (next_to ?char ?floor_lamp)\\n    (lookable ?floor_lamp)\\n  )\\n  :effect ()\\n)\\n(:action look_at_curtain\\n  :parameters (?char - character ?curtain - object)\\n  :precondition (and\\n    (next_to ?char ?curtain)\\n    (lookable ?curtain)\\n  )\\n  :effect ()\\n)\\n(:action look_at_pillow\\n  :parameters (?char - character ?pillow - object)\\n  :}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "300_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "321_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "332_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "379_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "387_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "390_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "3_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "416_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\")}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "442_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "447_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "449_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "455_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "456_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "473_1",
        "llm_output": "{\n\"output\": \"(:action pick_up_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action put_down_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action sit_on_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action cover_object\\n  :parameters (?char - character ?obj - object ?cover - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?char ?cover)\\n      (cover_object ?cover)\\n      (movable ?cover)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?cover))\\n      (next_to ?char ?obj)\\n      (obj_ontop ?cover ?obj)\\n  )\\n)\\n(:action uncover_object\\n  :parameters (?char - character ?obj - object ?cover - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?char ?cover)\\n      (cover_object ?cover)\\n      (movable ?cover)\\n      (obj_ontop ?cover ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?cover))\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?cover ?obj))\\n  )\\n)\\n(:action lie_down_on_object\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n      (next_to ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "490_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "563_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "567_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "570_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "674_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lieable ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (lying ?char) (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "6_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "742_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "762_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "793_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "798_2",
        "llm_output": "```json\n{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj) (next_to ?char ?obj)))\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "932_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "941_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "96_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (facing ?char ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "976_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (lying ?char) (ontop ?char ?obj)))\"}"
    },
    {
        "identifier": "149_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj))))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?room) (inside ?obj ?room) (not (next_to ?char ?obj)))\\n  :effect (and (next_to ?char ?obj) (not (inside ?char ?room)) (not (inside ?obj ?room))))\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (and (sitting ?char) (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (standing ?char)))\"\n}"
    },
    {
        "identifier": "154_1",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action press_button\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action put_down_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action read_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action dial_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action answer_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action reject_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action send_message\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action receive_message\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action call_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action end_call\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_photo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action record_video\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action play_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pause_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action stop_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action adjust_volume\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action change_channel\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action open_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\}"
    },
    {
        "identifier": "180_1",
        "llm_output": "{\n\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (grabbable ?phone)\\n      (not (holds_rh ?char ?phone))\\n      (not (holds_lh ?char ?phone))\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?phone)\\n      (standing ?char)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n  )\\n  :effect (and\\n      (next_to ?char ?phone)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (standing ?char)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "195_1",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (not (off ?obj))\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (not (on ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (plugged_out ?obj))\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n      (not (closed ?obj))\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n      (not (open ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (standing ?char))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (standing ?char)\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (not (standing ?char))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (standing ?char)\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_on_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (obj_ontop ?obj ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action take_off_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (obj_ontop ?obj ?dest)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action put_inside\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action put_inside_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (obj_inside ?obj ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action take_out_lh\\n  :parameters (?char - character ?obj -}"
    },
    {
        "identifier": "211_1",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (grabbable ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action pick_up_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action hang_up_clothes_lh\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_lh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_lh ?char ?clothes) (not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?clothes)\\n  )\\n)\\n(:action take_off_clothes_lh\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?clothes)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n      (not (holds_rh ?char ?clothes))\\n      (not (holds_lh ?char ?clothes))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes}"
    },
    {
        "identifier": "241_1",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (grabbable ?phone)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?phone)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (next_to ?char ?door)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (next_to ?char ?light)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action walk_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (next_to ?char ?doorjamb)\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action walk_to_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall_clock)\\n  )\\n)\\n(:action walk_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall)\\n  )\\n)\\n(:action walk_to_ceiling\\n  :parameters (?char - character ?ceiling - object)\\n  :precondition (and\\n    (next_to ?char ?ceiling)\\n  )\\n  :effect (and\\n    (next_to ?char ?ceiling)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (next_to ?char ?floor)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (closed ?door)\\n  )\\n)\\n(:action open_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (open ?trashcan)\\n  )\\n)\\n(:action close_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (closed ?trashcan)\\n  )\\n)\\n(:action look_at_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (lookable ?wall_clock)\\n  )\\n  :effect ()\\n)\\n(:action look_at_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (lookable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action read_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (readable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action cut_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (cuttable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_drawing\\n  :parameters (?char - character ?drawing - object ?hang_obj - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (next_to ?char ?hang_obj)\\n    (clothes ?drawing)\\n    (hangable ?hang_obj)\\n  )\\n  :effect (and\\n    (ontop ?drawing ?hang_obj)\\n  )\\n)\\n(:action put_drawing_in_trashcan\\n  :parameters (?char - character ?drawing - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (next_to ?char ?trashcan)\\n    (containers ?trashcan)\\n  )\\n  :effect (and\\n    (obj_inside ?drawing ?trashcan)\\n  )\\n)\\n(:action put_phone_in_trashcan\\n  :parameters (?char - character ?phone - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?trashcan)\\n    (containers ?trashcan)\\n  )\\n  :effect (and\\n    (obj_inside ?phone ?trashcan)\\n  )\\n)\\n(:action put_phone_on_wall_clock\\n  :parameters (?char - character ?phone - object ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?wall_clock)\\n    (sittable ?wall_clock)\\n  )\\n  :effect (and\\n    (ontop ?phone ?wall_clock)\\n  )\\n)\\n(:action put_phone_on_drawing\\n  :parameters (?char - character ?phone - object ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?drawing)\\n    (sittable ?drawing)\\n  )\\n  :effect (and\\n    (ontop ?phone ?drawing)\\n  )\\n)\\n(:action put_phone_on_wall\\n  :parameters (?char - character ?phone - object ?wall - object)\\n  :precondition (and\\}"
    },
    {
        "identifier": "264_1",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (grabbable ?phone)\\n      (not (holds_rh ?char ?phone))\\n      (not (holds_lh ?char ?phone))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?phone)\\n  )\\n)\\n(:action put_down_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (surfaces ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (obj_ontop ?phone ?dest)\\n  )\\n)\\n(:action open_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (has_switch ?phone)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (on ?phone)\\n  )\\n)\\n(:action close_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (has_switch ?phone)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (off ?phone)\\n  )\\n)\\n(:action plug_in_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (has_plug ?phone)\\n      (not (plugged_in ?phone))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (plugged_in ?phone)\\n  )\\n)\\n(:action unplug_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (has_plug ?phone)\\n      (plugged_in ?phone)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (not (plugged_in ?phone))\\n  )\\n)\\n(:action dial_phone\\n  :parameters (?char - character ?phone - object ?number - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (surfaces ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (obj_ontop ?phone ?dest)\\n  )\\n)\\n(:action answer_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?phone)\\n  )\\n)\\n(:action ignore_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect ()\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (not (next_to ?char ?phone))\\n  )\\n  :effect (and\\n      (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_bathroom\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside ?char bathroom))\\n  )\\n  :effect (and\\n      (inside ?char bathroom)\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (inside ?char home_office))\\n  )\\n  :effect (and\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_to_desk\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char desk))\\n  )\\n  :effect (and\\n      (next_to ?char desk)\\n  )\\n)\\n(:action walk_to_mousepad\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char mousepad))\\n  )\\n  :effect (and\\n      (next_to ?char mousepad)\\n  )\\n)\\n(:action walk_to_mouse\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char mouse))\\n  )\\n  :effect (and\\n      (next_to ?char mouse)\\n  )\\n)\\n(:action walk_to_keyboard\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char keyboard))\\n  )\\n  :effect (and\\n      (next_to ?char keyboard)\\n  )\\n)\\n(:action walk_to_cpuscreen\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char cpuscreen))\\n  )\\n  :effect (and\\n      (next_to ?char cpuscreen)\\n  )\\n)\\n(:action walk_to_shoe_shine_kit\\n  :parameters (?char - character)\\n  :precondition (and\\n      (not (next_to ?char shoe-shine_kit))\\n  )\\n  :effect (and\\n      (next_to ?char shoe-shine_kit)\\n  )\\n)\\n(:action open_shoe_shine_kit\\n  :parameters (?char - character ?shoe_shine_kit - object)\\n  :precondition (and\\n      (holds_rh ?char ?shoe_shine_kit)\\n      (can_open ?shoe_shine_kit)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?shoe_shine_kit))\\n      (open ?shoe_shine_kit)\\n  )\\n)\\n(:action close_shoe_shine_kit\\n  :parameters (?char - character ?shoe_shine_kit - object)\\n  :precondition (and\\n      (holds_rh ?char ?shoe_shine_kit)\\n      (can_open ?shoe_shine_kit)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?shoe_shine_kit))\\n      (closed ?shoe_shine_kit)\\n  )\\n)\\n(:action put_shoe_shine_kit_in_desk\\n  :parameters (?char - character ?shoe_shine_kit - object)\\n  :precondition (and\\n      (holds_rh ?char ?shoe_shine_kit)\\n      (next_to ?char desk)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?shoe_shine_kit))\\n      (obj_inside ?shoe_shine_kit desk)\\n  )\\n)\\n(:action put_shoe_shine_kit_on_desk\\n  :parameters (?char - character ?shoe_shine_kit - object)\\n  :precondition (and\\n      (holds_rh ?char ?shoe_shine_kit)\\n      (next_to ?char desk)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?shoe_shine_kit))\\n      (obj_ontop ?shoe_shine_kit desk)\\n  )\\n)\\n(:action put_shoe_shine_kit_on_mousepad\\n  :parameters (?char - character ?shoe_shine_kit - object)\\n  :precondition (and\\n      (holds_rh ?char ?shoe_shine_kit)\\n      (next_to ?char mousepad)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?shoe_shine_kit))\\n      (obj_ontop ?shoe_shine_kit mousepad)\\n  )\\n)\\n(:action put_shoe_shine_kit_}"
    },
    {
        "identifier": "265_2",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action press_button\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (movable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action turn_on_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (has_plug ?obj)\\n      (next_to ?char home_office)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action plug_out_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (has_plug ?obj)\\n      (next_to ?char home_office)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action answer_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action dial_phone\\n  :parameters (?char - character ?obj - object ?number - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen_to_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action talk_to_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action end_call\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action send_text_message\\n  :parameters (?char - character ?obj - object ?number - object ?message - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read_text_message\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action delete_text_message\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_photo\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action record_video\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action play_game\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action browse_internet\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action watch_video\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action listen_to_music\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action set_alarm\\n  :parameters (?char - character ?obj - object ?time - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_alarm\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cancel_alarm\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action make_call\\n  :parameters (?char - character ?obj - object ?number - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_missed_calls\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_voicemail\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_battery\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_signal\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_storage\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (on ?obj)\\n  )\\n  :effect ()\\n)\\n(:action check_settings\\n  :parameters (?char - character}"
    },
    {
        "identifier": "287_2",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (grabbable ?phone)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?phone)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (next_to ?char ?door)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (next_to ?char ?light)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action walk_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (next_to ?char ?doorjamb)\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action walk_to_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall_clock)\\n  )\\n)\\n(:action walk_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall)\\n  )\\n)\\n(:action walk_to_ceiling\\n  :parameters (?char - character ?ceiling - object)\\n  :precondition (and\\n    (next_to ?char ?ceiling)\\n  )\\n  :effect (and\\n    (next_to ?char ?ceiling)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (next_to ?char ?floor)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (closed ?door)\\n  )\\n)\\n(:action open_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (open ?trashcan)\\n  )\\n)\\n(:action close_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (closed ?trashcan)\\n  )\\n)\\n(:action look_at_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (lookable ?wall_clock)\\n  )\\n  :effect ()\\n)\\n(:action look_at_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (lookable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action read_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (readable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action cut_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (cuttable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_drawing\\n  :parameters (?char - character ?drawing - object ?hang_obj - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (next_to ?char ?hang_obj)\\n    (clothes ?drawing)\\n    (hangable ?hang_obj)\\n  )\\n  :effect (and\\n    (ontop ?drawing ?hang_obj)\\n  )\\n)\\n(:action put_drawing_in_trashcan\\n  :parameters (?char - character ?drawing - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (next_to ?char ?trashcan)\\n    (containers ?trashcan)\\n  )\\n  :effect (and\\n    (obj_inside ?drawing ?trashcan)\\n  )\\n)\\n(:action put_phone_in_trashcan\\n  :parameters (?char - character ?phone - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?trashcan)\\n    (containers ?trashcan)\\n  )\\n  :effect (and\\n    (obj_inside ?phone ?trashcan)\\n  )\\n)\\n(:action put_phone_on_wall_clock\\n  :parameters (?char - character ?phone - object ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?wall_clock)\\n    (sittable ?wall_clock)\\n  )\\n  :effect (and\\n    (ontop ?phone ?wall_clock)\\n  )\\n)\\n(:action put_phone_on_drawing\\n  :parameters (?char - character ?phone - object ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (next_to ?char ?drawing)\\n    (sittable ?drawing)\\n  )\\n  :effect (and\\n    (ontop ?phone ?drawing)\\n  )\\n)\\n(:action put_phone_on_wall\\n  :parameters (?char - character ?phone - object ?wall - object)\\n  :precondition (and\\}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?plug)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?plug)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (next_to ?char ?hang_obj)\\n    (or\\n      (holds_rh ?char ?clothes)\\n      (holds_lh ?char ?clothes)\\n    )\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n    (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (pourable ?obj)\\n    (next_to ?obj ?dest)\\n  )\\n  :effect ()\\n)\\n(:action open_container\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (containers ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close_container\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (containers ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action put_in_container\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?dest)\\n    (containers ?dest)\\n  )\\n  :effect (and\\n    (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out_from_container\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?dest)\\n    (next_to ?dest ?obj)\\n    (containers ?dest)\\n  )\\n  :effect (and\\n    (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action turn_}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{\n\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{\n\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (on ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_in ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (ontop ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (ontop ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n    (not (ontop ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n    (clothes ?clothes)\\n    (hangable ?hang_obj)\\n    (holds_rh ?char ?clothes)\\n    (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n    (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes)))\\n    (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n    (next_to ?char ?dest)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n    (and\\n      (holds_lh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n    (and\\n      (holds_rh ?obj)\\n      (next_to ?char ?dest)\\n    )\\n  )\\n  :effect (obj_ontop ?obj ?dest)\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action move\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (pourable ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n    (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n    (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\}"
    },
    {
        "identifier": "436_1",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char bathroom)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char bathroom)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n      (obj_inside ?obj home_office)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n      (inside ?char home_office)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable}"
    },
    {
        "identifier": "442_2",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (grabbable ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action pick_up_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action hang_up_clothes_lh\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_lh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_lh ?char ?clothes) (not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?clothes)\\n  )\\n)\\n(:action take_off_clothes_lh\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?clothes)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n      (not (holds_rh ?char ?clothes))\\n      (not (holds_lh ?char ?clothes))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes}"
    },
    {
        "identifier": "474_2",
        "llm_output": "```json\n{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (grabbable ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object ?plug - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (next_to ?obj ?plug)\\n      (has_plug ?obj)\\n      (has_plug ?plug)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action pick_up_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (obj_ontop ?obj ?dest)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_rh ?char ?clothes) (not (holds_rh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action hang_up_clothes_lh\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (next_to ?char ?hang_obj)\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_lh ?char ?clothes)\\n  )\\n  :effect (and\\n      (when (holds_lh ?char ?clothes) (not (holds_lh ?char ?clothes)))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?clothes)\\n  )\\n)\\n(:action take_off_clothes_lh\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?clothes)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (next_to ?char ?clothes)\\n      (clothes ?clothes)\\n      (not (holds_rh ?char ?clothes))\\n      (not (holds_lh ?char ?clothes))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n    (grabbable ?phone)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?phone)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (next_to ?char ?door)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action open_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (open ?trashcan)\\n  )\\n)\\n(:action put_phone_in_trashcan\\n  :parameters (?char - character ?phone - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (next_to ?char ?phone)\\n    (open ?trashcan)\\n    (holds_rh ?char ?phone)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?phone))\\n    (obj_inside ?phone ?trashcan)\\n  )\\n)\\n(:action close_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (open ?trashcan)\\n  )\\n  :effect (and\\n    (closed ?trashcan)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (next_to ?char ?light)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action walk_to_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall_clock)\\n  )\\n)\\n(:action turn_on_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (has_switch ?wall_clock)\\n  )\\n  :effect (and\\n    (on ?wall_clock)\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action turn_on_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (has_switch ?drawing)\\n  )\\n  :effect (and\\n    (on ?drawing)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action turn_on_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n    (has_switch ?powersocket)\\n  )\\n  :effect (and\\n    (on ?powersocket)\\n  )\\n)\\n(:action walk_to_ceiling\\n  :parameters (?char - character ?ceiling - object)\\n  :precondition (and\\n    (next_to ?char ?ceiling)\\n  )\\n  :effect (and\\n    (next_to ?char ?ceiling)\\n  )\\n)\\n(:action turn_on_ceiling\\n  :parameters (?char - character ?ceiling - object)\\n  :precondition (and\\n    (next_to ?char ?ceiling)\\n    (has_switch ?ceiling)\\n  )\\n  :effect (and\\n    (on ?ceiling)\\n  )\\n)\\n(:action walk_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (next_to ?char ?doorjamb)\\n  )\\n)\\n(:action turn_on_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n    (has_switch ?doorjamb)\\n  )\\n  :effect (and\\n    (on ?doorjamb)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (next_to ?char ?floor)\\n  )\\n)\\n(:action turn_on_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n    (has_switch ?floor)\\n  )\\n  :effect (and\\n    (on ?floor)\\n  )\\n)\\n(:action walk_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall)\\n  )\\n)\\n(:action turn_on_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n    (has_switch ?wall)\\n  )\\n  :effect (and\\n    (on ?wall)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action turn_on_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (has_switch ?trashcan)\\n  )\\n  :effect (and\\n    (on ?trashcan)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action turn_on_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?obj dining_room)\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (inside_room ?obj dining_room))\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action walk_to_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n      (inside_room ?char dining_room)\\n      (inside_room ?room dining_room)\\n  )\\n  :effect (and\\n      (inside ?char ?room)\\n      (not (inside ?char dining_room))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lieable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (lookable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect ()\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (readable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (eatable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (drinkable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (cuttable ?obj)\\n      (next_to ?char ?obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?obj dining_room)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (next_to ?char ?hang_obj)\\n      (inside_room ?char dining_room)\\n      (inside_room ?clothes dining_room)\\n      (inside_room ?hang_obj dining_room)\\n  )\\n  :effect (and\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (next_to ?char ?clothes)\\n      (inside_room ?char dining_room)\\n      (inside_room ?clothes dining_room)\\n  )\\n  :effect ()\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (next_to ?char ?clothes)\\n      (inside_room ?char dining_room)\\n      (inside_room ?clothes dining_room)\\n  )\\n  :effect ()\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (inside_room ?char dining_room)\\n      (inside_room ?dest dining_room)\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (open ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action stand_up_from_lying\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_on_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action take_off_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action put_in_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action take_out_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (grabbable ?phone)\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?phone)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (next_to ?char ?door)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (next_to ?char ?light)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action walk_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (next_to ?char ?doorjamb)\\n  )\\n)\\n(:action walk_to_button\\n  :parameters (?char - character ?button - object)\\n  :precondition (and\\n    (next_to ?char ?button)\\n  )\\n  :effect (and\\n    (next_to ?char ?button)\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action walk_to_television\\n  :parameters (?char - character ?television - object)\\n  :precondition (and\\n    (next_to ?char ?television)\\n  )\\n  :effect (and\\n    (next_to ?char ?television)\\n  )\\n)\\n(:action walk_to_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall_clock)\\n  )\\n)\\n(:action walk_to_wall\\n  :parameters (?char - character ?wall - object)\\n  :precondition (and\\n    (next_to ?char ?wall)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall)\\n  )\\n)\\n(:action walk_to_ceiling\\n  :parameters (?char - character ?ceiling - object)\\n  :precondition (and\\n    (next_to ?char ?ceiling)\\n  )\\n  :effect (and\\n    (next_to ?char ?ceiling)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (next_to ?char ?floor)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action turn_on_television\\n  :parameters (?char - character ?television - object)\\n  :precondition (and\\n    (next_to ?char ?television)\\n    (has_switch ?television)\\n  )\\n  :effect (and\\n    (on ?television)\\n  )\\n)\\n(:action turn_off_television\\n  :parameters (?char - character ?television - object)\\n  :precondition (and\\n    (next_to ?char ?television)\\n    (has_switch ?television)\\n  )\\n  :effect (and\\n    (off ?television)\\n  )\\n)\\n(:action turn_on_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (has_switch ?wall_clock)\\n  )\\n  :effect (and\\n    (on ?wall_clock)\\n  )\\n)\\n(:action turn_off_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (has_switch ?wall_clock)\\n  )\\n  :effect (and\\n    (off ?wall_clock)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (closed ?door)\\n  )\\n)\\n(:action open_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (open ?trashcan)\\n  )\\n)\\n(:action close_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (closed ?trashcan)\\n  )\\n)\\n(:action plug_in_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_plug ?light)\\n  )\\n  :effect (and\\n    (plugged_in ?light)\\n  )\\n)\\n(:action plug_out_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_plug ?light)\\n  )\\n  :effect (and\\n    (plugged_out ?light)\\n  )\\n)\\n(:action plug_in_television\\n  :parameters (?char - character ?television - object)\\n  :precondition (and\\n    (next_to ?char ?television)\\n    (has_plug ?television)\\n  )\\n  :effect (and\\n    (plugged_in ?television)\\n  )\\n)\\n(:action plug_out_television\\n  :parameters (?char - character ?television - object)\\n  :precondition (and\\n    (next_to ?char ?television)\\n    (has_plug ?television)\\n  )\\n  :effect (and\\n    (plugged_out ?television)\\n  )\\n)\\n(:action plug_in_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (}"
    },
    {
        "identifier": "70_1",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (grabbable ?phone)\\n      (not (holds_rh ?char ?phone))\\n      (not (holds_lh ?char ?phone))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?phone)\\n  )\\n)\\n(:action put_down_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (surfaces ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (obj_ontop ?phone ?dest)\\n  )\\n)\\n(:action turn_on_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (has_switch ?phone)\\n  )\\n  :effect (and\\n      (on ?phone)\\n  )\\n)\\n(:action turn_off_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (has_switch ?phone)\\n  )\\n  :effect (and\\n      (off ?phone)\\n  )\\n)\\n(:action plug_in_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (has_plug ?phone)\\n      (not (plugged_in ?phone))\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (plugged_in ?phone)\\n  )\\n)\\n(:action unplug_phone\\n  :parameters (?char - character ?phone - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (next_to ?char ?dest)\\n      (has_plug ?phone)\\n      (plugged_in ?phone)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (not (plugged_in ?phone))\\n  )\\n)\\n(:action dial_phone\\n  :parameters (?char - character ?phone - object ?number - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (holds_rh ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?phone))\\n      (off ?phone)\\n  )\\n)\\n(:action answer_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?phone)\\n  )\\n)\\n(:action ignore_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n      (next_to ?char ?phone)\\n      (on ?phone)\\n  )\\n  :effect ()\\n)\\n(:action walk_to_dining_room\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char home_office)\\n  )\\n  :effect (and\\n      (inside ?char dining_room)\\n  )\\n)\\n(:action walk_to_home_office\\n  :parameters (?char - character)\\n  :precondition (and\\n      (inside ?char dining_room)\\n  )\\n  :effect (and\\n      (inside ?char home_office)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (open ?door)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n      (next_to ?char ?door)\\n      (can_open ?door)\\n  )\\n  :effect (and\\n      (closed ?door)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n  )\\n  :effect (and\\n      (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n      (next_to ?char ?light)\\n      (has_switch ?light)\\n  )\\n  :effect (and\\n      (off ?light)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (next_to ?char ?chair)\\n      (sittable ?chair)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?chair)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?chair - object)\\n  :precondition (and\\n      (ontop ?char ?chair)\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n      (not (ontop ?char ?chair))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (holds_rh ?char ?food)\\n      (eatable ?food)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?food))\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?drink - object)\\n  :precondition (and\\n      (holds_rh ?char ?drink)\\n      (drinkable ?drink)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?drink))\\n  )\\n)\\n(:action read_book\\n  :parameters (?char - character ?book - object)\\n  :precondition (and\\n      (holds_rh ?char ?book)\\n      (readable ?book)\\n  )\\n  :effect ()\\n)\\n(:action watch_tv\\n  :parameters (?char - character ?tv - object)\\n  :precondition (and\\n      (next_to ?char ?tv)\\n      (on ?tv)\\n  )\\n  :effect ()\\n)\\n(:action listen_to_music\\n  :parameters (?char - character ?music - object)\\n  :precondition (and\\n      (next_to ?char ?music)\\n      (on ?music)\\n  )\\n  :effect ()\\n)\\n(:action talk_to_person\\n  :parameters (?char - character ?person - character)\\n  :precondition (and\\n      (next_to ?char ?person)\\n  )\\n  :effect ()\\n)\\n(:action play_game\\n  :parameters (?char - character ?game - object)\\n  :precondition (and\\n      (holds_rh ?char ?game)\\n  )\\n  :effect ()\\n)\\n(:action cook\\n  :parameters (?char - character ?food - object)\\n  :precondition (and\\n      (next_to ?char ?food)\\n      (eatable ?food)\\n  )\\n  :effect ()\\n)\\n(:action clean_up\\n  :parameters (?char - character ?object - object)\\n  :precondition (and\\n      (next_to ?char ?object)\\n      (dirty ?object)\\n  )\\n  :effect (and\\n      (clean ?object)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (holds_rh ?char ?clothes)\\n      (clothes ?clothes)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n  )\\n)\\n(:action put_}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (holds_rh ?char ?obj))\\n      (not (holds_lh ?char ?obj))\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (not (open ?obj))\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close_door\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (open ?obj))\\n  )\\n)\\n(:action turn_on_switch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (not (on ?obj))\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off_switch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (not (on ?obj))\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (not (plugged_in ?obj))\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (not (plugged_in ?obj))\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n      (not (sitting ?char))\\n  )\\n  :effect (and\\n      (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n      (not (lying ?char))\\n  )\\n  :effect (and\\n      (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n      (next_to ?char ?hang_obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_on_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (next_to ?char ?clothes)\\n      (not (wearing ?char ?clothes))\\n  )\\n  :effect (and\\n      (wearing ?char ?clothes)\\n  )\\n)\\n(:action take_off_clothes\\n  :parameters (?char - character ?clothes - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (wearing ?char ?clothes)\\n  )\\n  :effect (and\\n      (not (wearing ?char ?clothes))\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (or\\n      (and\\n          (hold_lh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n      (and\\n          (hold_rh ?obj)\\n          (next_to ?char ?dest)\\n      )\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point\\n  :parameters (?char - character ?}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (open ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action stand_up_from_lying\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_on_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action take_off_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action put_in_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action take_out_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_out ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n      (open ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action sit_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action lie_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (ontop ?char ?obj)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action stand_up_from_lying\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action put_down_lh\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action put_on_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action take_off_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n)\\n(:action put_in\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action put_in_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (holds_lh ?char ?obj)\\n      (next_to ?char ?dest)\\n      (obj_inside ?dest ?obj)\\n  )\\n  :effect (and\\n      (not (holds_lh ?char ?obj))\\n      (obj_inside ?obj ?dest)\\n  )\\n)\\n(:action take_out\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (obj_inside ?obj ?dest))\\n  )\\n)\\n(:action take_out_lh\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (obj_inside ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n  :effect (and\\n      (holds}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?obj))\\n      (on ?obj ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (and\\n      (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n  )\\n  :effect (and\\n      (plugged_in ?obj)\\n  )\\n)\\n(:action unplug\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_plug ?obj)\\n      (plugged_in ?obj)\\n  )\\n  :effect (and\\n      (plugged_out ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n  )\\n  :effect (and\\n      (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (closed ?obj)\\n  )\\n)\\n(:action sit_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (sittable ?obj)\\n  )\\n  :effect (and\\n      (sitting ?char)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (sitting ?char)\\n  )\\n  :effect (and\\n      (not (sitting ?char))\\n  )\\n)\\n(:action lie_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lieable ?obj)\\n  )\\n  :effect (and\\n      (lying ?char)\\n      (not (next_to ?char ?obj))\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n      (lying ?char)\\n  )\\n  :effect (and\\n      (not (lying ?char))\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action hang_up_clothes\\n  :parameters (?char - character ?clothes - object ?hang_obj - object)\\n  :precondition (and\\n      (clothes ?clothes)\\n      (hangable ?hang_obj)\\n      (next_to ?char ?hang_obj)\\n      (holds_rh ?char ?clothes)\\n  )\\n  :effect (and\\n      (not (holds_rh ?char ?clothes))\\n      (ontop ?clothes ?hang_obj)\\n  )\\n)\\n(:action put_to\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (next_to ?char ?dest)\\n      (or\\n          (holds_rh ?obj)\\n          (holds_lh ?obj)\\n      )\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_and_place\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n      (not (obj_ontop ?obj ?dest))\\n  )\\n  :effect (and\\n      (obj_ontop ?obj ?dest)\\n      (next_to ?char ?dest)\\n  )\\n)\\n(:action bow\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action shake_hands\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action hug\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action kiss\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action high_five\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action wave\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action point\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n      (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action nod\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action shake_head\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action smile\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action frown\\n  :parameters (?char - character)\\n  :}"
    },
    {
        "identifier": "99_2",
        "llm_output": "```json\n{\"output\": \"(:action pick_up_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (grabbable ?phone)\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?phone)\\n  )\\n)\\n(:action walk_to_phone\\n  :parameters (?char - character ?phone - object)\\n  :precondition (and\\n    (next_to ?char ?phone)\\n  )\\n  :effect (and\\n    (next_to ?char ?phone)\\n  )\\n)\\n(:action walk_to_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n  )\\n  :effect (and\\n    (next_to ?char ?door)\\n  )\\n)\\n(:action open_door\\n  :parameters (?char - character ?door - object)\\n  :precondition (and\\n    (next_to ?char ?door)\\n    (can_open ?door)\\n  )\\n  :effect (and\\n    (open ?door)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action open_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (can_open ?trashcan)\\n  )\\n  :effect (and\\n    (open ?trashcan)\\n  )\\n)\\n(:action throw_phone_into_trashcan\\n  :parameters (?char - character ?phone - object ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (holds_rh ?char ?phone)\\n    (open ?trashcan)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?phone))\\n    (obj_inside ?phone ?trashcan)\\n  )\\n)\\n(:action close_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n    (open ?trashcan)\\n  )\\n  :effect (and\\n    (closed ?trashcan)\\n  )\\n)\\n(:action walk_to_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n  )\\n  :effect (and\\n    (next_to ?char ?light)\\n  )\\n)\\n(:action turn_on_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (on ?light)\\n  )\\n)\\n(:action turn_off_light\\n  :parameters (?char - character ?light - object)\\n  :precondition (and\\n    (next_to ?char ?light)\\n    (has_switch ?light)\\n  )\\n  :effect (and\\n    (off ?light)\\n  )\\n)\\n(:action walk_to_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n  )\\n  :effect (and\\n    (next_to ?char ?wall_clock)\\n  )\\n)\\n(:action look_at_wall_clock\\n  :parameters (?char - character ?wall_clock - object)\\n  :precondition (and\\n    (next_to ?char ?wall_clock)\\n    (lookable ?wall_clock)\\n  )\\n  :effect ()\\n)\\n(:action walk_to_table\\n  :parameters (?char - character ?table - object)\\n  :precondition (and\\n    (next_to ?char ?table)\\n  )\\n  :effect (and\\n    (next_to ?char ?table)\\n  )\\n)\\n(:action sit_on_table\\n  :parameters (?char - character ?table - object)\\n  :precondition (and\\n    (next_to ?char ?table)\\n    (sittable ?table)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action stand_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (sitting ?char)\\n  )\\n  :effect (and\\n    (not (sitting ?char))\\n  )\\n)\\n(:action walk_to_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n  )\\n  :effect (and\\n    (next_to ?char ?drawing)\\n  )\\n)\\n(:action look_at_drawing\\n  :parameters (?char - character ?drawing - object)\\n  :precondition (and\\n    (next_to ?char ?drawing)\\n    (lookable ?drawing)\\n  )\\n  :effect ()\\n)\\n(:action walk_to_doorjamb\\n  :parameters (?char - character ?doorjamb - object)\\n  :precondition (and\\n    (next_to ?char ?doorjamb)\\n  )\\n  :effect (and\\n    (next_to ?char ?doorjamb)\\n  )\\n)\\n(:action walk_to_powersocket\\n  :parameters (?char - character ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n  )\\n  :effect (and\\n    (next_to ?char ?powersocket)\\n  )\\n)\\n(:action plug_in_phone\\n  :parameters (?char - character ?phone - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n    (next_to ?phone ?powersocket)\\n    (has_plug ?phone)\\n  )\\n  :effect (and\\n    (plugged_in ?phone ?powersocket)\\n  )\\n)\\n(:action unplug_phone\\n  :parameters (?char - character ?phone - object ?powersocket - object)\\n  :precondition (and\\n    (next_to ?char ?powersocket)\\n    (next_to ?phone ?powersocket)\\n    (plugged_in ?phone ?powersocket)\\n  )\\n  :effect (and\\n    (plugged_out ?phone ?powersocket)\\n  )\\n)\\n(:action walk_to_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n  )\\n  :effect (and\\n    (next_to ?char ?floor)\\n  )\\n)\\n(:action lie_on_floor\\n  :parameters (?char - character ?floor - object)\\n  :precondition (and\\n    (next_to ?char ?floor)\\n    (lieable ?floor)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action get_up\\n  :parameters (?char - character)\\n  :precondition (and\\n    (lying ?char)\\n  )\\n  :effect (and\\n    (not (lying ?char))\\n  )\\n)\\n(:action walk_to_mat\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (next_to ?char ?mat)\\n  )\\n  :effect (and\\n    (next_to ?char ?mat)\\n  )\\n)\\n(:action sit_on_mat\\n  :parameters (?char - character ?mat - object)\\n  :precondition (and\\n    (next_to ?char ?mat)\\n    (sittable ?mat)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action walk_to_trashcan\\n  :parameters (?char - character ?trashcan - object)\\n  :precondition (and\\n    (next_to ?char ?trashcan)\\n  )\\n  :effect (and\\n    (next_to ?char ?trashcan)\\n  )\\n)\\n(:action open_trashcan\\}"
    },
    {
        "identifier": "183_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj1)\\n      (next_to ?obj1 ?obj2)\\n      (movable ?obj1)\\n      (grabbable ?obj1)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj1))\\n      (not (next_to ?obj1 ?obj2))\\n      (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside_room ?char ?room)\\n      (inside_room ?obj ?room)\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?obj1 ?obj2)\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj1))\\n    (not (next_to ?obj1 ?obj2))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?char ?room)\\n    (inside_room ?obj ?room)\\n    (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "310_2",
        "llm_output": "```json\n{\"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (on ?obj))\\n  :effect (and (not (on ?obj)) (off ?obj)))\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (next_to ?char ?obj1) (next_to ?obj1 ?obj2) (movable ?obj1) (not (obj_ontop ?obj1 ?obj2)))\\n  :effect (and (not (next_to ?char ?obj1)) (not (next_to ?obj1 ?obj2)) (obj_ontop ?obj1 ?obj2)))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj))))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj)))\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (not (next_to ?char ?obj)) (or (holds_rh ?char ?obj) (holds_lh ?char ?obj))))\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (open ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (not (open ?obj)) (closed ?obj)))\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (can_open ?obj) (closed ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (not (closed ?obj)) (open ?obj)))\"}"
    },
    {
        "identifier": "721_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n    (sittable ?obj2)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj1))\\n    (not (next_to ?char ?obj2))\\n    (ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (closed ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "764_2",
        "llm_output": "```json\n{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (next_to ?char ?obj1)\\n      (next_to ?obj1 ?obj2)\\n      (movable ?obj1)\\n      (grabbable ?obj1)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj1))\\n      (not (next_to ?obj1 ?obj2))\\n      (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside_room ?char ?room)\\n      (inside_room ?obj ?room)\\n      (not (next_to ?char ?obj))\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (has_switch ?obj)\\n      (off ?obj)\\n  )\\n  :effect (and\\n      (on ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (grabbable ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (open ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (closed ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)\\n      (can_open ?obj)\\n      (closed ?obj)\\n  )\\n  :effect (and\\n      (not (next_to ?char ?obj))\\n      (open ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "419_2",
        "llm_output": "```json\n{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (holds_rh ?char ?obj1) (next_to ?char ?obj2) (surfaces ?obj2))\\n  :effect (and (not (holds_rh ?char ?obj1)) (obj_ontop ?obj1 ?obj2))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "446_2",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (holds_rh ?char ?obj1)\\n    (movable ?obj1)\\n    (surfaces ?obj2)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj1))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (not (open ?obj)))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj)))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (holds_rh ?char ?obj1) (next_to ?char ?obj2) (surfaces ?obj2) (not (obj_ontop ?obj1 ?obj2)))\\n  :effect (and (obj_ontop ?obj1 ?obj2) (not (holds_rh ?char ?obj1)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (not (inside_room ?char ?obj)))\\n  :effect (and (inside_room ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "368_1",
        "llm_output": "```json\n{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n  )\\n  :effect (and\\n    (inside ?char ?room)\\n  )\\n)\\n(:action walk_out\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n  )\\n  :effect (and\\n    (not (inside ?char ?room))\\n  )\\n)\\n(:action move_object\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?dest)\\n  )\\n  :effect (and\\n    (obj_ontop ?obj ?dest)\\n  )\\n)\\n(:action pick_up\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action put_down\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (holds_rh ?char ?obj)\\n  )\\n  :effect (and\\n    (not (holds_rh ?char ?obj))\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (closed ?obj)\\n  )\\n)\\n(:action turn_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n(:action turn_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n  )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action plug_out\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_out ?obj)\\n  )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (sittable ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lieable ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n  )\\n)\\n(:action read\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (readable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action drink\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (drinkable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action eat\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (eatable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cut\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cuttable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wear\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action take_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (clothes ?obj)\\n  )\\n  :effect ()\\n)\\n(:action wash\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (washable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action dry\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (dryable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action fold\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (foldable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action unfold\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (unfoldable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action pour\\n  :parameters (?char - character ?obj - object ?dest - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (next_to ?obj ?dest)\\n    (pourable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action look_at\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action talk_to\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action listen_to\\n  :parameters (?char - character ?target - character)\\n  :precondition (and\\n    (next_to ?char ?target)\\n  )\\n  :effect ()\\n)\\n(:action sing\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action dance\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action play\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (playable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action watch\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (watchable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action cook\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cookable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action clean\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (cleanable ?obj)\\n  )\\n  :effect ()\\n)\\n(:action sweep\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (swepable ?obj)\\n  )\\n}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n(:action enter_room\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside_room ?room ?obj) (next_to ?char ?obj))\\n  :effect (and (inside ?char ?room) (not (next_to ?char ?obj))))\\n\"\n}"
    },
    {
        "identifier": "975_2",
        "llm_output": "{\"output\": \"{\\n\\\"output\\\": \\\"(:action walk_to_shower\\n  :parameters (?char - character ?shower - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (inside_room ?shower ?room)\\n  )\\n  :effect (and\\n    (next_to ?char ?shower)\\n  )\\n)\\\"\\n}"
    }
]